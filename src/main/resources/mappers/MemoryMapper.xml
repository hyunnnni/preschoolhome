<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.preschool.preschoolhome.memory.MemoryMapper">
    <select id="allMemoryTea">
        SELECT A.imemory, C.ikid, A.memory_title as memoryTitle, A.memory_contents as memoryContents
        , A.teacher_nm as teacherNm, A.created_at as createdAt
        FROM t_memory A
        JOIN t_memory_room B
        ON A.imemory = B.imemory
        JOIN t_kid C
        ON B.ikid = C.ikid
        <where>
        <if test="iclass > 0">
            C.iclass = #{iclass}
        </if>
        <if test="search != null and search != '' ">
            (A.memory_title like concat ('%', #{search}, '%')
            OR C.kid_nm like concat ('%', #{search}, '%'))
        </if>
        </where>
        LIMIT #{startIdx}, #{rowCount}
    </select>
    <select id="allMemoryTeaCnt">
        SELECT Count(A.imemory)
        FROM t_memory A
        JOIN t_memory_room B
        ON A.imemory = B.imemory
        JOIN t_kid C
        ON B.ikid = C.ikid
        <where>
            <if test="iclass > 0">
                C.iclass = #{iclass}
            </if>
            <if test="search != null and search != '' ">
                (A.memory_title like concat ('%', #{search}, '%')
                OR C.kid_nm like concat ('%', #{search}, '%'))
            </if>
        </where>
    </select>
    <select id="allMemoryPar">
        SELECT A.imemory, C.ikid, A.memory_title as memoryTitle, A.memory_contents as memoryContents
        , A.teacher_nm as teacherNm, A.created_at as createdAt
        FROM t_memory A
        JOIN t_memory_room B
        ON A.imemory = B.imemory
        JOIN t_kid C
        ON B.ikid = C.ikid
        <where>
        <if test="ikid > 0">
            C.ikid = #{ikid}
        </if>
        <if test="search != null and search != '' ">
            (A.memory_title like concat ('%', #{search}, '%')
            OR C.kid_nm like concat ('%', #{search}, '%'))
        </if>
        </where>
        LIMIT #{startIdx}, #{rowCount}
    </select>
    <select id="allMemoryParCnt">
        SELECT Count(A.imemory)
        FROM t_memory A
        JOIN t_memory_room B
        ON A.imemory = B.imemory
        JOIN t_kid C
        ON B.ikid = C.ikid
        <where>
            <if test="ikid > 0">
                C.ikid = #{ikid}
            </if>
            <if test="search != null and search != '' ">
                (A.memory_title like concat ('%', #{search}, '%')
                OR C.kid_nm like concat ('%', #{search}, '%'))
            </if>
        </where>
    </select>
    <select id="iMemoryComment">
        SELECT COUNT(imemory_comment)
        FROM t_memory_comment
        WHERE imemory = #{imemory}
    </select>
    <select id="iMemoryIkid">
        SELECT ikid
        FROM t_memory
        WHERE imemory = #{imemory}
    </select>

    <!-- 수정 전 원래 있던 내용 불러오기 -->
    <select id="selMemory">
        SELECT memory_title AS memoryTitle , memory_contents AS memoryContents
        FROM t_memory
        WHERE imemory = #{imemory}
    </select>
    <select id="selMemoryPic">
        select memory_pic as memoryPic
        from t_memory_album
        where imemory = #{imemory}
    </select>
    <select id="selImemory">
        select imemory
        from t_memory
        where imemory = #{imemory}
    </select>

    <!-- 추억 앨범 글 작성 시 원아 전체 조회 -->
    <select id="getFromKids">
        SELECT ikid, iclass, kid_nm AS kidNm
        FROM t_kid
        ORDER BY iclass
    </select>

    <!-- 추억 앨범 글 삭제 전 댓글, 사진, 방 삭제 -->
    <delete id="delMemoryAll">
        DELETE B, C, D
        FROM t_memory AS A
        LEFT JOIN t_memory_album AS B
        ON A.imemory = B.imemory
        LEFT JOIN t_memory_comment AS C
        ON A.imemory = C.imemory
        LEFT JOIN t_memory_room AS D
        ON A.imemory = D.imemory
        WHERE A.imemory = #{imemory}
    </delete>

    <!-- 추억 앨범 글 삭제  -->
    <delete id="delMemory">
        DELETE
        FROM t_memory
        WHERE imemory = #{imemory}
    </delete>

</mapper>



