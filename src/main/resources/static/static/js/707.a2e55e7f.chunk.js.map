{"version":3,"file":"static/js/707.a2e55e7f.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/ui/ModalOneBtn.js","hooks/useCustomLogin.js","components/album/WriteAlbum.js","pages/album/AlbumWrite.js","styles/album/album.js","styles/ui/warning.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  // console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AlbumWrap, FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nimport { postAlbum } from \"../../api/album/album_api\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\nconst WriteAlbum = ({ albumData, submit }) => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // 모달 상태 관리\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [showCancelConfirmModal, setShowCancelConfirmModal] = useState(false);\r\n  const [showExceedLimitModal, setShowExceedLimitModal] = useState(false); // 파일 제한 초과 경고 모달 상태\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].slice(-20); // 최대 20개 파일만 유지\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const beforeUpload = (file, fileList) => {\r\n    const totalFiles = fileList.length + fileList.length;\r\n    if (totalFiles > 20) {\r\n      // 파일리스트 합이 20개를 초과하는 경우\r\n      setShowExceedLimitModal(true); // 경고 모달 표시\r\n      return Upload.LIST_IGNORE; // 파일 업로드 중단\r\n    }\r\n    return true; // 파일 추가를 계속 진행\r\n  };\r\n\r\n  const handleExceedLimitModalOk = e => {\r\n    setShowExceedLimitModal(false); // 경고 모달 닫기\r\n    e.stopPropagation(); // 이벤트가 상위 엘리먼트에 전달되지 않게 막기\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // 앨범 등록 성공 모달 핸들러\r\n  const handleSuccessModalOk = () => {\r\n    setShowSuccessModal(false);\r\n    navigate(\"/album\");\r\n  };\r\n\r\n  // 취소 확인 모달 핸들러\r\n  const handleCancelConfirmModalOk = () => {\r\n    setShowCancelConfirmModal(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setShowCancelConfirmModal(true); // 취소 확인 모달 표시\r\n  };\r\n\r\n  // if (fileList.length > 20) {\r\n  //   Modal.error({\r\n  //     title: \"이미지 업로드 제한\",\r\n  //     content: \"이미지는 최대 20개까지 업로드할 수 있습니다.\",\r\n  //   });\r\n  //   return;\r\n  // }\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iteacher: 1,\r\n          albumTitle: data.albumTitle,\r\n          albumContents: data.albumContents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postAlbum({\r\n      product: formData,\r\n      successFn: () => setShowSuccessModal(true), // 성공 모달 표시\r\n      failFn: handleFailure,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancleOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /album 페이지로 이동\r\n    navigate(\"/album\");\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsModalVisible(true);\r\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\r\n  };\r\n\r\n  const handleFailure = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"앨범 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    Modal.error({\r\n      title: \"앨범 업로드 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  // 업로드 칸 스타일을 수정하기 위한 변수\r\n  const uploadAreaStyle = {\r\n    height: \"150px\",\r\n    lineHeight: \"150px\",\r\n  };\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40} width={100} height={100}>\r\n      <PageTitle>활동앨범</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Form form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"albumTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"albumContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              style={uploadAreaStyle}\r\n              maxCount={20}\r\n              beforeUpload={beforeUpload}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드(최대 20개) </Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n          <div\r\n            style={{\r\n              paddingTop: 15,\r\n              float: \"right\",\r\n              // position: \"absolute\",\r\n              // background: \"red\",\r\n            }}\r\n          >\r\n            <GreenBtn htmlType=\"submit\">등록</GreenBtn>\r\n\r\n            <PinkBtn\r\n              onClick={handleCancelConfirmation}\r\n              style={{ marginLeft: 20 }}\r\n            >\r\n              취소\r\n            </PinkBtn>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n\r\n      <Link to=\"/album\">\r\n        {/* 등록 성공 모달 */}\r\n        {showSuccessModal && (\r\n          <ModalOneBtn\r\n            isOpen={showSuccessModal}\r\n            handleOk={handleSuccessModalOk}\r\n            title=\"등록 완료\"\r\n            subTitle=\"성공적으로 등록되었습니다.\"\r\n          />\r\n        )}\r\n\r\n        {/* 취소 확인 모달 */}\r\n        {showCancelConfirmModal && (\r\n          <ModalOneBtn\r\n            isOpen={showCancelConfirmModal}\r\n            handleOk={handleCancelConfirmModalOk}\r\n            title=\"정말 취소할까요?\"\r\n            subTitle=\"작성된 내용은 저장되지 않습니다.\"\r\n          />\r\n        )}\r\n\r\n        {/* 파일 제한 초과 경고 모달 */}\r\n        {showExceedLimitModal && (\r\n          <ModalOneBtn\r\n            isOpen={showExceedLimitModal}\r\n            handleOk={handleExceedLimitModalOk}\r\n            title=\"업로드 제한 초과\"\r\n            subTitle=\"업로드할 수 있는 파일 수는 최대 20개입니다.\"\r\n          />\r\n        )}\r\n      </Link>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default WriteAlbum;\r\n","import { useEffect, useState } from \"react\";\r\nimport WriteAlbum from \"../../components/album/WriteAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nconst initAlbumWrite = [\r\n  {\r\n    pics: [\"string\"],\r\n    dto: {\r\n      iteacher: 0,\r\n      albumTitle: \"string\",\r\n      albumContents: \"string\",\r\n    },\r\n  },\r\n];\r\n\r\nconst AlbumWrite = () => {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 로그인 상태가 false라면 로그인 페이지로 리다이렉트합니다.\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      setIsOpen(true);\r\n      setTitle(\"교사 전용 페이지\");\r\n      setSubTitle(\"선생님만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  });\r\n  // 로그인 상태가 true라면 글쓰기 컴포넌트를 렌더링합니다.\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <WriteAlbum isLogin={isLogin} submit=\"등록\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlbumWrite;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","albumData","submit","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","showSuccessModal","setShowSuccessModal","showCancelConfirmModal","setShowCancelConfirmModal","showExceedLimitModal","setShowExceedLimitModal","handleFailure","errorMessage","content","handleError","AlbumWrap","height","PageTitle","style","padding","borderTop","borderBottom","background","marginTop","onFinish","formData","FormData","dto","Blob","JSON","stringify","iteacher","albumTitle","albumContents","append","forEach","file","originFileObj","Item","name","rules","required","message","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","slice","customRequest","onSuccess","className","multiple","lineHeight","maxCount","beforeUpload","length","LIST_IGNORE","Button","icon","UploadOutlined","float","GreenBtn","htmlType","handleCancelConfirmation","marginLeft","Link","ModalOneBtn","handleSuccessModalOk","handleCancelConfirmModalOk","e","stopPropagation","AlbumWrite","setTitle","setSubTitle","setIsOpen","isNavigate","setIsNavigate","useEffect","_Fragment","WriteAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14"],"sourceRoot":""}