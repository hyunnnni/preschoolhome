{"version":3,"file":"static/js/598.45755cda.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/ReadAllAlbum.js","pages/album/Album.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn({ ...res.data });\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// album/listall?page=1\n// 활동 앨범 전체 조회 get\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\nexport const getSearchListAll = async ({\n  page,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n    // console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    // console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path /comment\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, obj);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // &iteacher=${iteacher}&iparent=${iparent}\n    const iwriter = () => {\n      if (iteacher) {\n        return `&iteacher=${iteacher}`;\n      }\n      if (iparent) {\n        return `&iparent=${iparent}`;\n      }\n    };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import Search from \"antd/es/input/Search\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { getListAll, getSearchListAll } from \"../../api/album/album_api\";\nimport { IMG_URL } from \"../../api/config\";\nimport Loading from \"../../components/loading/Loading\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { UserTopRight } from \"../../styles/adminstyle/guardianlist\";\nimport {\n  AlbumList,\n  AlbumTopBar,\n  AlbumWrap,\n  SearchBar,\n} from \"../../styles/album/album\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\nconst path = `${IMG_URL}/pic/album`;\nconst ReadAllAlbum = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [totalAlbumCount, setTotalAlbumCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\"\"); // 검색어 상태 추가\n  const loaderRef = useRef(null);\n  const navigate = useNavigate();\n  const { isLogin } = useCustomLogin();\n\n  const loadImages = useCallback(async () => {\n    if (\n      loading ||\n      (totalAlbumCount !== null && items.length >= totalAlbumCount)\n    ) {\n      return;\n    }\n\n    setLoading(true);\n\n    const dataFetchFunction = search ? getSearchListAll : getListAll; // 검색어 유무에 따라 함수 결정\n\n    dataFetchFunction({\n      page,\n      search,\n      successFn: data => {\n        setTotalAlbumCount(data.albumCnt);\n        setItems(prevItems => [...prevItems, ...data.list]);\n        setPage(prevPage => prevPage + 1);\n        setHasMore(data.list.length > 0);\n        setLoading(false);\n      },\n      failFn: message => {\n        console.error(message);\n        setLoading(false);\n        setHasMore(false);\n      },\n      errorFn: data => {\n        console.error(data);\n        setLoading(false);\n        setHasMore(false);\n      },\n    });\n  }, [loading, totalAlbumCount, items, page, search]); // search 추가\n\n  // 검색 기능 구현\n  const handleSearch = value => {\n    setSearch(value); // 검색어 설정\n    setItems([]); // 기존 아이템 초기화\n    setPage(1); // 페이지 초기화\n    setHasMore(true); // 더 불러올 데이터가 있다고 가정\n  };\n\n  // Observer 설정\n  const handleObserver = useCallback(\n    entities => {\n      const target = entities[0];\n      if (target.isIntersecting && hasMore && !loading) {\n        loadImages();\n      }\n    },\n    [loadImages, hasMore, loading],\n  );\n\n  // Observer 인스턴스 생성\n  useEffect(() => {\n    const observerOptions = {\n      root: null,\n      rootMargin: \"0px\", // 하단 감지 영역을 위로 올립니다.\n      threshold: 0.5, // 필요에 따라 threshold 조정\n    };\n    const observer = new IntersectionObserver(handleObserver, observerOptions);\n    if (loaderRef.current) observer.observe(loaderRef.current);\n\n    return () => observer.disconnect();\n  }, [handleObserver]);\n\n  return (\n    <AlbumWrap>\n      {/* 메인 콘텐츠 상단 바 컴포넌트 */}\n      <AlbumTopBar>\n        <PageTitle>활동앨범</PageTitle>\n        <SearchBar>\n          <UserTopRight>\n            <Search\n              placeholder=\"제목을 입력하세요.\"\n              onSearch={handleSearch}\n              size=\"large\"\n              allowClear\n            />\n            {isLogin && (\n              <GreenBtn onClick={() => navigate(\"write\")}>글쓰기</GreenBtn>\n            )}\n          </UserTopRight>\n        </SearchBar>\n      </AlbumTopBar>\n      <AlbumList>\n        {items.map(item => (\n          <Link key={item.ialbum} to={`/album/details/${item.ialbum}`}>\n            <ul className=\"image-grid\">\n              <li className=\"image-item\">\n                <img\n                  // height={400}\n                  src={`${path}/${item.ialbum}/${item.albumPic}`}\n                  alt={item.albumTitle}\n                />\n              </li>\n              <p>{item.albumTitle}</p>\n            </ul>\n          </Link>\n        ))}\n        {loading && <Loading className=\"loading\" />}\n        <div ref={loaderRef} style={{ height: \"100px\", margin: \"20px\" }}></div>\n        {/* 무한 스크롤 로더 위치 변경 */}\n      </AlbumList>\n    </AlbumWrap>\n  );\n};\n\nexport default ReadAllAlbum;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReadAllAlbum from \"../../components/album/ReadAllAlbum\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nexport const API_SERVER_HOST = \"\";\nconst host = `${API_SERVER_HOST}/api/album/listall`;\n\nconst Album = () => {\n  const navigate = useNavigate();\n  const { isLogin, isParentLogin } = useCustomLogin();\n  const [isOpen, setIsOpen] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n\n  useEffect(() => {\n    if (!isLogin && !isParentLogin) {\n      // 로그인하지 않았을 경우\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n    }\n  }, [isLogin, isParentLogin]);\n\n  const handleOk = () => {\n    setIsOpen(false);\n    if (!isLogin && !isParentLogin) {\n      navigate(\"/login\"); // 로그인 페이지로 이동\n    }\n  };\n\n  return (\n    <>\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <ReadAllAlbum />\n    </>\n  );\n};\n\nexport default Album;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","IMG_URL","ReadAllAlbum","items","setItems","useState","loading","setLoading","hasMore","setHasMore","totalAlbumCount","setTotalAlbumCount","setPage","setSearch","loaderRef","useRef","navigate","useNavigate","isLogin","useCustomLogin","loadImages","useCallback","length","albumCnt","prevItems","list","prevPage","message","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","disconnect","_jsxs","AlbumWrap","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","Search","placeholder","onSearch","value","size","allowClear","GreenBtn","onClick","AlbumList","map","item","Link","to","className","src","albumPic","alt","albumTitle","Loading","ref","style","height","margin","API_SERVER_HOST","Album","isParentLogin","isOpen","setIsOpen","title","setTitle","subTitle","setSubTitle","_Fragment","ModalOneBtn","handleOk","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","_templateObject2","_templateObject3","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","FileListStyle","_templateObject13","_templateObject14","WriteWrap","_templateObject15"],"sourceRoot":""}