{"version":3,"file":"static/js/182.346e4548.chunk.js","mappings":"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","sources":["styles/user/notialarm.js","atoms/pushState.js","components/user/NotiAlarm.js","fb/fbconfig.js","api/user/pushApi.js","components/common/NavBar.js","components/common/Footer.js","components/common/SideMenu.js","components/common/SideBar.js","layouts/MainLayout.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, ellipsis } from \"../basic\";\r\nimport { animationSwing } from \"../ui/animations\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nexport const NotiWrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const NotiIcon = styled.div`\r\n  position: relative;\r\n  width: 3rem;\r\n  /* margin-right: -0.5rem; */\r\n  cursor: pointer;\r\n  img {\r\n    width: 100%;\r\n    animation: ${props =>\r\n      props.state\r\n        ? css`\r\n            ${animationSwing} 0.1s alternate infinite\r\n          `\r\n        : \"none\"};\r\n  }\r\n\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 0.7rem;\r\n    height: 0.7rem;\r\n    background: ${colors.orangeDeep};\r\n    border-radius: 50%;\r\n    display: ${props => (props.state ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nexport const NotiList = styled.div`\r\n  position: absolute;\r\n  top: calc(100% + 1rem);\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  min-width: 25rem;\r\n  ${boxStyle}\r\n  box-shadow: 0 -2px 10px 1px rgba(0,0,0,0.1);\r\n  max-height: 0;\r\n  overflow: hidden;\r\n  transition: max-height 0.2s;\r\n  &.active {\r\n    overflow: inherit;\r\n    max-height: 30rem;\r\n  }\r\n  &.active:before {\r\n    display: block;\r\n  }\r\n  &:before {\r\n    content: \"\";\r\n    display: none;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    top: -12px;\r\n    width: 0;\r\n    height: 0;\r\n    border-bottom: 6px solid #fff;\r\n    border-top: 6px solid transparent;\r\n    border-left: 6px solid transparent;\r\n    border-right: 6px solid transparent;\r\n  }\r\n`;\r\nexport const NotiItemWrap = styled.div`\r\n  padding: 2rem 1.5rem;\r\n  max-height: 0;\r\n  transition: max-height 0.2s;\r\n  &.active {\r\n    overflow-y: auto;\r\n    max-height: 25rem;\r\n  }\r\n`;\r\nexport const NotiItem = styled.div`\r\n  position: relative;\r\n  border-bottom: 1px dashed ${colors.grayBar};\r\n  padding-bottom: 1rem;\r\n  margin-bottom: 1rem;\r\n  cursor: pointer;\r\n  :last-of-type {\r\n    border-bottom: none;\r\n    margin-bottom: 0;\r\n    padding-bottom: 0;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 0;\r\n    font-size: 0;\r\n    width: 1.7rem;\r\n    opacity: 0.5;\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    :hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  .noti-kid {\r\n    color: #999999;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 1.2rem;\r\n  }\r\n  .noti-title {\r\n    font-size: 1.3rem;\r\n    font-weight: 500;\r\n    ${ellipsis.line2}\r\n    span {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n`;\r\nexport const EmptyList = styled.div`\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\nconst initState = {\r\n  pushList: [],\r\n};\r\n\r\nconst { persistAtom } = recoilPersist();\r\nconst pushState = atom({\r\n  key: \"pushState\",\r\n  default: initState,\r\n  effects_UNSTABLE: [persistAtom],\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nexport default pushState;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  EmptyList,\r\n  NotiBox,\r\n  NotiIcon,\r\n  NotiItem,\r\n  NotiItemWrap,\r\n  NotiList,\r\n  NotiWrap,\r\n} from \"../../styles/user/notialarm\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport pushState from \"../../atoms/pushState\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotiAlarm = () => {\r\n  const [notiPush, setNotiPush] = useRecoilState(pushState);\r\n  const [isListOpen, setIsListOpen] = useState(false);\r\n  // 로그인체크\r\n  const { isLogin, loginState } = useCustomLogin();\r\n  const iuser = isLogin ? \"iteacher\" : \"iparent\";\r\n  const userNm = isLogin ? loginState.iteacher : loginState.iparent;\r\n  // 유저와 일치하는 data\r\n  const data = notiPush.pushList.filter(\r\n    obj =>\r\n      Object.prototype.hasOwnProperty.call(obj, iuser) && obj[iuser] === userNm,\r\n  );\r\n  // data\r\n  let notiList = [];\r\n  let totalCnt = false;\r\n  if (data.length > 0) {\r\n    notiList = data[0].data;\r\n    totalCnt = !data[0].totalCnt || data[0].totalCnt === 0 ? false : true;\r\n  }\r\n\r\n  const listRef = useRef(null);\r\n  // console.log(notiList);\r\n  // 화면 나오면 data 값 넣기\r\n  useEffect(() => {\r\n    // const handleOutsideClose = e => {\r\n    //   if (isListOpen && !listRef.current.contains(e.target))\r\n    //     setIsListOpen(false);\r\n    // };\r\n    // document.addEventListener(\"click\", handleOutsideClose);\r\n    // return () => document.removeEventListener(\"click\", handleOutsideClose);\r\n  }, [totalCnt]);\r\n\r\n  // 알림 리스트\r\n  const handleClickOpen = () => {\r\n    setIsListOpen(!isListOpen);\r\n    if (!isListOpen && totalCnt) {\r\n      setNotiPush(prev => {\r\n        const updatedPushList = prev.pushList.map(item => {\r\n          if (item[iuser] === userNm) {\r\n            item.totalCnt = 0;\r\n          }\r\n          return item;\r\n        });\r\n        return { ...prev, pushList: updatedPushList };\r\n      });\r\n    }\r\n  };\r\n\r\n  // 알림삭제\r\n  const handleClickDelete = index => {\r\n    // 클릭한 객체 제외하고 새로 배열 저장\r\n    const updatedNotiList = [\r\n      ...notiList.slice(0, index),\r\n      ...notiList.slice(index + 1),\r\n    ];\r\n    notiList = updatedNotiList;\r\n\r\n    // notiPush 업데이트\r\n    setNotiPush(prev => {\r\n      const updatedPushList = prev.pushList.map(item => {\r\n        if (item[iuser] === userNm) {\r\n          item.data = item.data.filter((notiItem, idx) => idx !== index);\r\n          // item.totalCnt--;\r\n        }\r\n        return item;\r\n      });\r\n      return { ...prev, pushList: updatedPushList };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NotiWrap ref={listRef}>\r\n      <NotiIcon state={totalCnt} onClick={handleClickOpen}>\r\n        <img src={process.env.PUBLIC_URL + \"/images/common/bell_icon.svg\"} />\r\n      </NotiIcon>\r\n      <NotiList className={isListOpen ? \"active\" : \"\"}>\r\n        <NotiItemWrap className={isListOpen ? \"active\" : \"\"}>\r\n          {notiList.length === 0 ? (\r\n            <EmptyList>알림이 없습니다.</EmptyList>\r\n          ) : (\r\n            Array.isArray(notiList) &&\r\n            notiList.map((item, index) => (\r\n              <NotiItem key={index}>\r\n                <Link\r\n                  to={`/ind${item.imemory ? \"/album\" : \"\"}/details/${\r\n                    item.inotice || item.imemory\r\n                  }?ikid=${item.ikid}&year=2024&page=1`}\r\n                >\r\n                  <ul>\r\n                    <li className=\"noti-kid\">\r\n                      <span className=\"noti-date\">\r\n                        {item.createdAt || item.cmtCreatedAt}\r\n                      </span>{\" \"}\r\n                      <br />\r\n                      {item.kidNm} {item.inotice ? \"알림장\" : \"추억앨범\"}{\" \"}\r\n                      {item.noticeComment || item.noticeComment\r\n                        ? \"새 댓글\"\r\n                        : null}\r\n                    </li>\r\n                    <li className=\"noti-title\">\r\n                      {item.noticeTitle || item.memoryTitle}\r\n                      {item.noticeComment || item.noticeComment}\r\n                    </li>\r\n                    {/* <li className=\"noti-writer\">{item.writerNm}</li> */}\r\n                  </ul>\r\n                </Link>\r\n                <button onClick={() => handleClickDelete(index)}>\r\n                  <img\r\n                    src={\r\n                      process.env.PUBLIC_URL + \"/images/common/close_icon.svg\"\r\n                    }\r\n                    alt=\"알림삭제\"\r\n                  />\r\n                  알림삭제\r\n                </button>\r\n              </NotiItem>\r\n            ))\r\n          )}\r\n        </NotiItemWrap>\r\n      </NotiList>\r\n    </NotiWrap>\r\n  );\r\n};\r\n\r\nexport default NotiAlarm;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getToken, getMessaging, onMessage } from \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCuIKs9JwV9hTJyHRpthcaeZesm0h-Av1A\",\r\n  authDomain: \"preschoolhome-dfd2f.firebaseapp.com\",\r\n  projectId: \"preschoolhome-dfd2f\",\r\n  storageBucket: \"preschoolhome-dfd2f.appspot.com\",\r\n  messagingSenderId: \"1048681571637\",\r\n  appId: \"1:1048681571637:web:814c80c8d96efd581b187c\",\r\n  measurementId: \"G-0XB87NYZ32\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\n\r\nexport const getFirebaseToken = async () => {\r\n  return await getToken(messaging, {\r\n    vapidKey:\r\n      \"BIGyGypgvEnUf_IZ6F_4nORnyj759Hpr3B4qAW5-q1VCJndDdabc87cjOyn4E83PkosZeEbToaGk2Nt0qhmufGk\",\r\n  });\r\n};\r\n\r\nexport const onMessageListener = () => {\r\n  return new Promise(resolve => {\r\n    onMessage(messaging, payload => {\r\n      // console.log(\"onMessage\");\r\n      // const data = JSON.parse(payload.data);\r\n      console.log(payload);\r\n      // console.log(data);\r\n      resolve(payload);\r\n    });\r\n  });\r\n};\r\n\r\nexport const onTokenRefresh = async () => {\r\n  return await getFirebaseToken()\r\n    .then(function (refreshedToken) {\r\n      // console.log(refreshedToken);\r\n      // console.log(\"Token refreshed.\");\r\n      return refreshedToken;\r\n    })\r\n    .catch(function (err) {\r\n      console.log(\"Unable to retrieve refreshed token \", err);\r\n    });\r\n};\r\n","import { getFirebaseToken, onMessageListener } from \"../../fb/fbconfig\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst parentFbPath = `${SERVER_URL}/api/parent/firebase-token`;\r\nconst teacherFbPath = `${SERVER_URL}/api/teacher/firebase-token`;\r\n\r\nexport const patchTeacherFbToken = async ({ params, successFn }) => {\r\n  try {\r\n    const res = await jwtAxios.patch(`${teacherFbPath}`, params);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const patchParentFbToken = async ({ params, successFn }) => {\r\n  try {\r\n    const res = await jwtAxios.patch(`${parentFbPath}`, params);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getFbToken = async successFn => {\r\n  try {\r\n    const firebaseToken = await getFirebaseToken();\r\n    successFn(firebaseToken);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { HeaderBtn, NavWrap } from \"../../styles/basic\";\r\nimport {\r\n  GrayBtn,\r\n  GreenBtn,\r\n  OrangeBtn,\r\n  PinkBtn,\r\n  PurpleBtn,\r\n} from \"../../styles/ui/buttons\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport NotiAlarm from \"../user/NotiAlarm\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport pushState from \"../../atoms/pushState\";\r\nimport { onMessageListener } from \"../../fb/fbconfig\";\r\nimport {\r\n  patchParentFbToken,\r\n  patchTeacherFbToken,\r\n  getFbToken,\r\n} from \"../../api/user/pushApi\";\r\n\r\nconst NavBar = () => {\r\n  const navigate = useNavigate();\r\n  const currentYear = new Date().getFullYear();\r\n  // 로그인정보 체크\r\n  const {\r\n    moveToPath,\r\n    doLogout,\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isAdminLogin,\r\n    isParentLogin,\r\n    isTeacherLogin,\r\n    refreshAccessToken,\r\n  } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\r\n  const iteacher = loginState.iteacher;\r\n\r\n  // 로그아웃\r\n  const handleLogout = () => {\r\n    doLogout();\r\n    moveToPath(\"/\");\r\n  };\r\n  // ===========================================================================\r\n  // 푸시알림 State\r\n  const [notiPush, setNotiPush] = useRecoilState(pushState);\r\n\r\n  // 알림사용 승인 후 firebase 토큰 가져오기\r\n  useEffect(() => {\r\n    // 값이 잘못들어가있으면 리셋 (추후삭제)\r\n    if (notiPush.pushList.some(item => \"iuser\" in item)) {\r\n      setNotiPush({\r\n        pushList: [],\r\n      });\r\n    }\r\n    if (Notification.permission !== \"granted\") {\r\n      Notification.requestPermission().then(permission => {\r\n        if (permission === \"granted\") {\r\n          getFbToken(successFn);\r\n        }\r\n      });\r\n    } else {\r\n      getFbToken(successFn);\r\n    }\r\n    // refreshAccessToken();\r\n  }, [loginState]);\r\n  //가져온 firebase 토큰이 로그인정보에 있는 토큰값과 다른지 체크\r\n  const successFn = res => {\r\n    const userFirebaseToken = isParentLogin\r\n      ? loginState.prFirebaseToken\r\n      : loginState.firebaseToken;\r\n\r\n    if (userFirebaseToken !== res && loginState.accessToken) {\r\n      // console.log(\"firebaseToken :\", res);\r\n      let params = {\r\n        iuser: loginState.iteacher,\r\n        firebaseToken: res,\r\n      };\r\n      if (isParentLogin) {\r\n        params = {\r\n          iuser: loginState.iparent,\r\n          firebaseToken: res,\r\n        };\r\n        patchParentFbToken({ params, successFn: successrefrash });\r\n      } else {\r\n        patchTeacherFbToken({ params, successFn: successrefrash });\r\n      }\r\n    }\r\n  };\r\n\r\n  // firebase 토큰 갱신에 성공하면 로그인 정보 다시 가져옴\r\n  const successrefrash = res => {\r\n    const resultNum = res.data.result;\r\n    if (resultNum === 1) {\r\n      refreshAccessToken();\r\n    } else {\r\n      // console.log(\"firebase 토큰업데이트 실패\");\r\n    }\r\n  };\r\n  // 푸시알림감지 후 알림 리스트 업데이트\r\n  onMessageListener()\r\n    .then(payload => {\r\n      const newData = JSON.parse(payload.notification.body);\r\n      // console.log(newData);\r\n      setNotiPush(prev => {\r\n        let pushListUpdated = false;\r\n        const updatedPushList = prev.pushList.map(item => {\r\n          // iteacher,iparent 값 확인\r\n          if (\r\n            (item.iteacher !== undefined &&\r\n              item.iteacher === loginState.iteacher) ||\r\n            (item.iparent !== undefined && item.iparent === loginState.iparent)\r\n          ) {\r\n            // 일치하면 원래 있던 객체에 data, totalCnt만 추가\r\n            item.data.push(newData);\r\n            item.totalCnt++;\r\n            pushListUpdated = true;\r\n          }\r\n          return item;\r\n        });\r\n\r\n        // 일치하는 iteacher,iparent 값이 없을경우\r\n        // 선생님, 학부모에 따라 값 추가\r\n        if (!pushListUpdated) {\r\n          const newItem = {};\r\n          if (isParentLogin) {\r\n            newItem.iparent = loginState.iparent;\r\n          }\r\n          if (isLogin) {\r\n            newItem.iteacher = loginState.iteacher;\r\n          }\r\n          newItem.totalCnt = 1;\r\n          newItem.data = [newData];\r\n          updatedPushList.push(newItem);\r\n        }\r\n\r\n        return { ...prev, pushList: updatedPushList };\r\n      });\r\n    })\r\n    .catch(error => console.log(error));\r\n\r\n  // console.log(notiPush);\r\n\r\n  // ===========================================================================\r\n\r\n  return (\r\n    <NavWrap>\r\n      <Link to={\"/\"} className=\"nav-logo\">\r\n        <img src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"} />\r\n      </Link>\r\n      <p>{isLogin || isParentLogin ? `${isName}님 환영합니다.` : null}</p>\r\n      {/* 푸시알림 */}\r\n      {isParentLogin || isTeacherLogin ? <NotiAlarm /> : null}\r\n\r\n      <HeaderBtn>\r\n        {isLogin ? (\r\n          <>\r\n            <GrayBtn\r\n              className=\"nav-btn\"\r\n              onClick={e =>\r\n                navigate(\r\n                  `/ind?year=${currentYear}&page=1&iclass=${iclass}&fromTo=3`,\r\n                )\r\n              }\r\n            >\r\n              알림장목록\r\n            </GrayBtn>\r\n\r\n            <PurpleBtn\r\n              className=\"nav-btn\"\r\n              onClick={e => navigate(`/admin?page=1&iclass=${iclass}`)}\r\n            >\r\n              학부모관리\r\n            </PurpleBtn>\r\n            <OrangeBtn\r\n              className=\"nav-btn\"\r\n              onClick={e =>\r\n                navigate(`/admin/student?page=1&kidCheck=${iclass}`)\r\n              }\r\n            >\r\n              원생관리\r\n            </OrangeBtn>\r\n            {isTeacherLogin ? (\r\n              <PinkBtn\r\n                className=\"nav-btn\"\r\n                onClick={e =>\r\n                  navigate(`/admin/teacher/edit?iteacher=${iteacher}`)\r\n                }\r\n              >\r\n                정보수정\r\n              </PinkBtn>\r\n            ) : null}\r\n            <GreenBtn\r\n              onClick={() => {\r\n                handleLogout();\r\n              }}\r\n            >\r\n              로그아웃\r\n            </GreenBtn>\r\n          </>\r\n        ) : isParentLogin ? (\r\n          <>\r\n            <GrayBtn\r\n              className=\"nav-btn\"\r\n              onClick={e =>\r\n                navigate(\r\n                  `/ind?year=${currentYear}&page=1&ikid=${\r\n                    ikidList[0] ? ikidList[0].ikid : 0\r\n                  }&fromTo=3`,\r\n                )\r\n              }\r\n            >\r\n              알림장\r\n            </GrayBtn>\r\n            <OrangeBtn\r\n              className=\"nav-btn\"\r\n              onClick={e =>\r\n                navigate(\r\n                  `/mypage?year=${currentYear}&ikid=${\r\n                    ikidList[0] ? ikidList[0].ikid : 0\r\n                  }`,\r\n                )\r\n              }\r\n            >\r\n              마이페이지\r\n            </OrangeBtn>\r\n            <GreenBtn\r\n              onClick={() => {\r\n                handleLogout();\r\n              }}\r\n            >\r\n              로그아웃\r\n            </GreenBtn>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <OrangeBtn onClick={e => navigate(\"user/accounts\")}>\r\n              회원가입\r\n            </OrangeBtn>\r\n            <GreenBtn onClick={e => navigate(\"login\")}>로그인</GreenBtn>\r\n          </>\r\n        )}\r\n      </HeaderBtn>\r\n    </NavWrap>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { FooterBg, FooterBus, FooterWrap } from \"../../styles/basic\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <FooterWrap>\r\n      <FooterBus onClick={() => navigate(\"/about\")} />\r\n      <FooterBg>\r\n        <Link to=\"/about\">copyright 떡잎방범대</Link>\r\n      </FooterBg>\r\n    </FooterWrap>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst SideMenu = () => {\r\n  const { isLogin, isParentLogin, isTeacherLogin, loginState } =\r\n    useCustomLogin();\r\n  const currentYear = new Date().getFullYear();\r\n  const ikidList = loginState.kidList;\r\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\r\n  const iteacher = loginState.iteacher;\r\n  function getItem(label, key, icon, children, type) {\r\n    return {\r\n      key,\r\n      icon,\r\n      children,\r\n      label,\r\n      type,\r\n    };\r\n  }\r\n\r\n  const teacherItems = [\r\n    getItem(\r\n      <Link to={`/admin?page=1&iclass=${iclass}`}>학부모 관리</Link>,\r\n      \"5-1\",\r\n    ),\r\n    getItem(\r\n      <Link to={`/admin/student?page=1&kidCheck=${iclass}`}>원생 관리</Link>,\r\n      \"5-2\",\r\n    ),\r\n    getItem(<Link to=\"/admin/student/create\">원생 등록</Link>, \"5-3\"),\r\n    getItem(\r\n      <Link to={`/ind?year=${currentYear}&page=1&iclass=${iclass}&fromTo=3`}>\r\n        알림장 목록\r\n      </Link>,\r\n      \"5-4\",\r\n    ),\r\n  ];\r\n  const items = [\r\n    getItem(\r\n      \"유치원 안내\",\r\n      \"1\",\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/info_icon.svg\"}\r\n      />,\r\n      [\r\n        getItem(<Link to=\"/info/\">유치원 소개</Link>, \"1-1\"),\r\n        getItem(<Link to=\"/info/class\">유치원 현황</Link>, \"1-2\"),\r\n        getItem(<Link to=\"/info/location\">오시는 길</Link>, \"1-3\"),\r\n      ],\r\n    ),\r\n    getItem(\r\n      \"육아정보\",\r\n      \"2\",\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/education.svg\"}\r\n      />,\r\n      [\r\n        // getItem(<Link to=\"/edu\">교육과정</Link>, \"2-1\"),\r\n        // getItem(<Link to=\"/edu/specialact\">방과후활동</Link>, \"2-2\"),\r\n        getItem(<Link to=\"/edu/hospital?page=1\">예방접종기관정보</Link>, \"2-3\"),\r\n        getItem(\r\n          <Link to=\"/edu/nighthospital?page=1\">야간진료병원정보</Link>,\r\n          \"2-4\",\r\n        ),\r\n      ],\r\n    ),\r\n    getItem(\r\n      \"활동앨범\",\r\n      \"3\",\r\n      <Link to=\"/album\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/gallery.svg\"}\r\n        />\r\n      </Link>,\r\n    ),\r\n    getItem(\r\n      \"유치원 소식\",\r\n      \"4\",\r\n      <Link to=\"/notice\">\r\n        <img src={process.env.PUBLIC_URL + \"/images/common/sidebar/news.svg\"} />\r\n      </Link>,\r\n    ),\r\n  ];\r\n  if (isLogin && !isTeacherLogin) {\r\n    items.push(\r\n      getItem(\r\n        \"관리자\",\r\n        \"5\",\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\r\n        />,\r\n        teacherItems.concat([\r\n          getItem(\r\n            <Link to={`/admin/teacher?page=1&iclass=${iclass}&tcIsDel=0`}>\r\n              선생님 관리\r\n            </Link>,\r\n            \"5-5\",\r\n          ),\r\n        ]),\r\n      ),\r\n    );\r\n  }\r\n  if (isTeacherLogin) {\r\n    items.push(\r\n      getItem(\r\n        \"관리자\",\r\n        \"5\",\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\r\n        />,\r\n        teacherItems.concat([\r\n          getItem(\r\n            <Link to={`/admin/teacher/edit?iteacher=${iteacher}`}>\r\n              정보 수정\r\n            </Link>,\r\n            \"5-6\",\r\n          ),\r\n        ]),\r\n      ),\r\n    );\r\n  }\r\n  if (isParentLogin) {\r\n    items.push(\r\n      getItem(\r\n        \"회원전용\",\r\n        \"6\",\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/user.svg\"}\r\n        />,\r\n        [\r\n          getItem(\r\n            <Link\r\n              to={`/ind?year=${currentYear}&page=1&ikid=${\r\n                ikidList[0] ? ikidList[0].ikid : 0\r\n              }&fromTo=3`}\r\n            >\r\n              알림장\r\n            </Link>,\r\n            \"6-1\",\r\n          ),\r\n          getItem(\r\n            <Link\r\n              to={`/mypage?year=${currentYear}&ikid=${\r\n                ikidList[0] ? ikidList[0].ikid : 0\r\n              }`}\r\n            >\r\n              마이페이지\r\n            </Link>,\r\n            \"6-2\",\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      defaultSelectedKeys={[\"\"]}\r\n      mode=\"inline\"\r\n      items={items}\r\n      style={{ border: 0 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LogoWrap, SideBarWrap } from \"../../styles/basic\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport { AllBtn } from \"../../styles/ui/buttons\";\r\n\r\nconst SideBar = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const sideMenuRef = useRef(null);\r\n  useEffect(() => {\r\n    const handleOutsideClose = e => {\r\n      if (\r\n        window.innerWidth <= 798 &&\r\n        !collapsed &&\r\n        !sideMenuRef.current.contains(e.target)\r\n      )\r\n        setCollapsed(true);\r\n    };\r\n    document.addEventListener(\"click\", handleOutsideClose);\r\n\r\n    return () => document.removeEventListener(\"click\", handleOutsideClose);\r\n  }, [collapsed]);\r\n\r\n  return (\r\n    <SideBarWrap ref={sideMenuRef}>\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        onCollapse={(collapsed, type) => {\r\n          setCollapsed(true);\r\n        }}\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={collapsed}\r\n        theme=\"light\"\r\n      >\r\n        <LogoWrap>\r\n          <Link to={\"/\"}>\r\n            {collapsed ? (\r\n              <img\r\n                src={\r\n                  process.env.PUBLIC_URL + \"/images/common/header/smallLogo.svg\"\r\n                }\r\n              />\r\n            ) : (\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"}\r\n              />\r\n            )}\r\n          </Link>\r\n        </LogoWrap>\r\n        <SideMenu />\r\n        <AllBtn type=\"text\" onClick={() => setCollapsed(!collapsed)}>\r\n          {collapsed ? \"펼치기\" : \"접기\"}\r\n        </AllBtn>\r\n      </Sider>\r\n    </SideBarWrap>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Layout, theme } from \"antd\";\r\nimport { AllLayout, WrapMain } from \"../styles/basic\";\r\nimport NavBar from \"../components/common/NavBar\";\r\nimport Footer from \"../components/common/Footer\";\r\nimport SideBar from \"../components/common/SideBar\";\r\nimport { Outlet } from \"react-router\";\r\nconst MainLayout = ({ children }) => {\r\n  return (\r\n    <AllLayout className=\"layout-wrap\">\r\n      {/* 사이드바(전체메뉴)영역 */}\r\n      <SideBar />\r\n      <Layout>\r\n        {/* 상단네비영역 */}\r\n        <NavBar />\r\n        {/* 컨텐츠영역 */}\r\n        <WrapMain>\r\n          <Outlet />\r\n        </WrapMain>\r\n      </Layout>\r\n      {/* 하단푸터 */}\r\n      <Footer />\r\n    </AllLayout>\r\n  );\r\n};\r\nexport default MainLayout;\r\n"],"names":["NotiWrap","styled","div","_templateObject","_taggedTemplateLiteral","NotiIcon","_templateObject2","props","state","css","_templateObject3","animationSwing","colors","orangeDeep","NotiList","_templateObject4","boxStyle","NotiItemWrap","_templateObject5","NotiItem","_templateObject6","grayBar","ellipsis","line2","EmptyList","_templateObject7","persistAtom","recoilPersist","atom","key","default","pushList","effects_UNSTABLE","dangerouslyAllowMutability","NotiAlarm","notiPush","setNotiPush","useRecoilState","pushState","isListOpen","setIsListOpen","useState","isLogin","loginState","useCustomLogin","iuser","userNm","iteacher","iparent","data","filter","obj","Object","prototype","hasOwnProperty","call","notiList","totalCnt","length","listRef","useRef","useEffect","_jsxs","ref","children","_jsx","onClick","handleClickOpen","prev","updatedPushList","map","item","src","className","Array","isArray","index","Link","to","concat","imemory","inotice","ikid","createdAt","cmtCreatedAt","kidNm","noticeComment","noticeTitle","memoryTitle","updatedNotiList","slice","notiItem","idx","handleClickDelete","alt","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","getMessaging","getFirebaseToken","async","getToken","vapidKey","parentFbPath","SERVER_URL","teacherFbPath","getFbToken","successFn","error","console","log","NavBar","navigate","useNavigate","currentYear","Date","getFullYear","moveToPath","doLogout","isName","isAdminLogin","isParentLogin","isTeacherLogin","refreshAccessToken","ikidList","kidList","iclass","handleLogout","some","Notification","permission","requestPermission","then","res","prFirebaseToken","firebaseToken","accessToken","params","_ref2","jwtAxios","patch","status","toString","charAt","patchParentFbToken","successrefrash","_ref","patchTeacherFbToken","result","Promise","resolve","onMessage","payload","newData","JSON","parse","notification","body","pushListUpdated","undefined","push","newItem","catch","NavWrap","HeaderBtn","_Fragment","GrayBtn","e","PurpleBtn","OrangeBtn","PinkBtn","GreenBtn","Footer","FooterWrap","FooterBus","FooterBg","SideMenu","getItem","label","icon","type","teacherItems","items","Menu","defaultSelectedKeys","mode","style","border","SideBar","collapsed","setCollapsed","sideMenuRef","handleOutsideClose","window","innerWidth","current","contains","target","document","addEventListener","removeEventListener","SideBarWrap","Sider","breakpoint","onCollapse","trigger","collapsible","theme","LogoWrap","AllBtn","AllLayout","Layout","WrapMain","Outlet"],"sourceRoot":""}