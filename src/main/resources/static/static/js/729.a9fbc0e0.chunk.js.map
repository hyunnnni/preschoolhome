{"version":3,"file":"static/js/729.a9fbc0e0.chunk.js","mappings":"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","sources":["components/user/PrivacyPolicy.js","pages/user/SignupForm.js","styles/ui/buttons.js","styles/user/login.js"],"sourcesContent":["import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { PrivacyWrap } from \"../../styles/user/login\";\r\n\r\nconst PrivacyPolicy = ({ isModalOpen, handleOk, handleCancel }) => {\r\n  return (\r\n    <Modal\r\n      title=\"개인정보처리방침\"\r\n      open={isModalOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={(_, { OkBtn, CancelBtn }) => <></>}\r\n    >\r\n      <PrivacyWrap>\r\n        <div>\r\n          <b>1. 수집하는 개인정보 항목</b>\r\n          <br />\r\n          1.1 떡잎유치원 홈페이지는 다음과 같은 개인정보를 수집할 수 있습니다\r\n          <br />\r\n          <ul>\r\n            <li>- 성명</li>\r\n            <li>- 전화번호</li>\r\n            <li>- 주소</li>\r\n            <li>- 어린이 정보 (이름, 생년월일, 건강정보 등)</li>\r\n            <li>- 기타 사용자가 직접 입력하는 정보</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <b>2. 개인정보의 수집 및 이용목적</b> <br />\r\n          2.1 떡잎유치원 홈페이지는 다음 목적을 위해 개인정보를 수집하고\r\n          있습니다\r\n          <ul>\r\n            <li>- 어린이 등록 및 관리</li>\r\n            <li>- 보호자와의 원활한 소통 및 연락 </li>\r\n            <li>- 서비스 제공 및 운영</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <b>3. 개인정보의 보유 및 이용기간</b> <br />\r\n          3.1 떡잎유치원 홈페이지는 개인정보를 수집한 목적이 달성된 후에는 해당\r\n          정보를 즉시 파기합니다. <br />\r\n          단, 법령에 따라 보존할 필요가 있는 경우에는 관련 법령에서 정한 기간\r\n          동안 보관하며 그 이후에는 삭제하거나 파기합니다.\r\n        </div>\r\n        <div>\r\n          <b>4. 개인정보의 파기절차 및 방법</b> <br />\r\n          4.1 개인정보의 파기절차 및 방법은 다음과 같습니다 <br />\r\n          <ul>\r\n            <li>- 개인정보의 수집 및 이용목적이 달성된 후 즉시 파기합니다.</li>\r\n            <li>\r\n              - 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각하여\r\n              파기합니다.\r\n            </li>\r\n            <li>\r\n              - 전자적 파일 형태의 개인정보는 기록을 재생할 수 없는 기술적\r\n              방법을 사용하여 삭제합니다.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <b> 5. 개인정보의 제공 및 공유 </b>\r\n          <br />\r\n          5.1 떡잎유치원 홈페이지는 사용자의 동의 없이 개인정보를 외부에\r\n          제공하거나 공유하지 않습니다. <br />\r\n          단, 관련 법령에서 요구하는 경우에는 예외로 합니다.\r\n        </div>\r\n        <div>\r\n          <b>6. 개인정보보호를 위한 조치 </b>\r\n          <br />\r\n          6.1 떡잎유치원 홈페이지는 개인정보보호를 위해 다음과 같은 조치를\r\n          취하고 있습니다 <br />\r\n          <ul>\r\n            <li>개인정보에 대한 접근 제한</li>\r\n            <li>보안 프로그램을 통한 시스템 보호</li>\r\n            <li>개인정보 처리자 교육 및 감시 </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <b>7. 이용자의 권리 </b>\r\n          <br />\r\n          7.1 이용자는 떡잎유치원 홈페이지에 대해 자신의 개인정보에 대한 열람,\r\n          정정, 삭제 등의 권리를 행사할 수 있습니다.\r\n        </div>\r\n        <div>\r\n          <b>8. 개인정보 관련 문의처</b> <br />\r\n          8.1 떡잎유치원 홈페이지와 관련하여 개인정보 처리에 대한 문의사항이\r\n          있을 경우 아래 연락처로 문의하여 주시기 바랍니다\r\n          <br />\r\n          이메일: example@email.com <br />\r\n          전화번호: 010-1234-5678\r\n        </div>\r\n        <div>\r\n          <b>\r\n            이 개인정보 처리방침은 법령이나 서비스 내용의 변경 등으로 인하여\r\n            변경될 수 있습니다. <br />\r\n            변경 시 별도 공지사항을 통해 사전 공지하도록 하겠습니다.\r\n          </b>\r\n        </div>\r\n        [마지막 업데이트: 2024년 01월 01일]\r\n      </PrivacyWrap>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","import React, { useState } from \"react\";\r\nimport { Checkbox, Col, Form, Input, Modal, Select } from \"antd\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { FormWrap, PrivacyWrap } from \"../../styles/user/login\";\r\nimport { LogoWrap } from \"../../styles/basic\";\r\nimport PrivacyPolicy from \"../../components/user/PrivacyPolicy\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SignupForm = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const kidName = \"신짱구\";\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n  const onFinish = values => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n  const prefixSelector = <Form.Item name=\"prefix\" noStyle></Form.Item>;\r\n\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n  const onWebsiteChange = value => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(\r\n        [\".com\", \".org\", \".net\"].map(domain => `${value}${domain}`),\r\n      );\r\n    }\r\n  };\r\n  const websiteOptions = autoCompleteResult.map(website => ({\r\n    label: website,\r\n    value: website,\r\n  }));\r\n  return (\r\n    <div>\r\n      <FormWrap>\r\n        <LogoWrap>\r\n          <h3>학부모 회원가입</h3>\r\n          <p>회원정보를 입력해주세요.</p>\r\n        </LogoWrap>\r\n        <Form\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          style={{\r\n            maxWidth: 600,\r\n          }}\r\n          scrollToFirstError\r\n        >\r\n          <Form.Item\r\n            name=\"gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `${kidName}와의 관계를 선택해주세요.`,\r\n              },\r\n            ]}\r\n          >\r\n            {/* 가족관계 = 1 : 부, 2 : 모, 3 : 조부, 4 : 조모, 5 : 형제/자매, 6 : 그 외 */}\r\n            <Select placeholder={kidName + \"어린이와의 관계\"}>\r\n              <Option value=\"1\">부</Option>\r\n              <Option value=\"2\">모</Option>\r\n              <Option value=\"3\">조부</Option>\r\n              <Option value=\"4\">조모</Option>\r\n              <Option value=\"5\">형제/자매</Option>\r\n              <Option value=\"6\">그 외</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"id\"\r\n            style={{ marginBottom: 20 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"아이디를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"아이디 입력\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"name\"\r\n            style={{ marginBottom: 20 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"이름을 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"이름 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            style={{ marginBottom: 20 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password placeholder=\"비밀번호 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            style={{ marginBottom: 20 }}\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 한번 더 입력해주세요.\",\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      \"비밀번호가 일치하지 않습니다. 다시 작성해주세요.\",\r\n                    ),\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password placeholder=\"비밀번호 확인\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            style={{ marginBottom: 20 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"전화번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"전화번호 입력\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            style={{ marginBottom: 20 }}\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"올바른 E-mail 양식이 아닙니다.\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"이메일을 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"이메일 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(\r\n                        new Error(\"개인정보 처리방침 동의가 필요합니다.\"),\r\n                      ),\r\n              },\r\n            ]}\r\n          >\r\n            <Checkbox>\r\n              개인정보 처리방침에 동의합니다.\r\n              <span onClick={showModal}>[내용보기]</span>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <GreenBtn htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n              가입하기\r\n            </GreenBtn>\r\n          </Form.Item>\r\n        </Form>\r\n      </FormWrap>\r\n\r\n      <PrivacyPolicy isModalOpen={isModalOpen} handleCancel={handleCancel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors } from \"../basic\";\r\n\r\nexport const FormWrap = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 3rem 5rem;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  ${boxStyle}\r\n  background:#fafafa;\r\n  border: 1px solid #f1f1f1;\r\n  h3 {\r\n    text-align: center;\r\n    color: ${colors.greenDeep};\r\n  }\r\n  p {\r\n    margin-top: 2rem;\r\n  }\r\n  a {\r\n    float: right;\r\n    color: ${colors.grayDeep};\r\n    &:hover {\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .ant-form-item .ant-form-item-explain-error {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const PrivacyWrap = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n  padding: 2rem;\r\n  margin: 3rem 0;\r\n  font-size: 1.3rem;\r\n  div {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n"],"names":["_ref","isModalOpen","handleOk","handleCancel","_jsx","Modal","title","open","onOk","onCancel","footer","_","_ref2","OkBtn","CancelBtn","_Fragment","children","_jsxs","PrivacyWrap","Option","Select","SignupForm","setIsModalOpen","useState","form","Form","useForm","autoCompleteResult","setAutoCompleteResult","Item","map","website","label","value","FormWrap","LogoWrap","name","onFinish","values","console","log","style","maxWidth","scrollToFirstError","rules","required","message","concat","placeholder","kidName","marginBottom","Input","hasFeedback","Password","dependencies","getFieldValue","validator","Promise","reject","Error","resolve","type","valuePropName","Checkbox","onClick","showModal","GreenBtn","htmlType","width","PrivacyPolicy","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","OrangeBtn","_templateObject3","orangeLight","orangeDeep","PinkBtn","_templateObject4","pinkLight","pinkDeep","BlueBtn","_templateObject5","blueLight","blueDeep","PurpleBtn","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","GrayBtn","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","AllBtn","_templateObject12","_templateObject13","boxStyle","black"],"sourceRoot":""}