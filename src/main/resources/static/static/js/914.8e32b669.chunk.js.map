{"version":3,"file":"static/js/914.8e32b669.chunk.js","mappings":"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","sources":["components/user/MyClass.js","hooks/useCustomLogin.js","styles/individualNotice/ind.js","components/individualNotice/IndListComponent.js","api/individualNotice/indivNoticeApi.js","pages/individualNotice/IndivNotiList.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../styles/basic\";\r\n\r\nconst MyClass = ({ state }) => {\r\n  const ClassTitle = styled.div`\r\n    h3 {\r\n      padding-left: 3.2rem;\r\n      background-repeat: no-repeat;\r\n      background-position: left center;\r\n      background-size: 2.8rem;\r\n\r\n      &.hibiscus {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_hibiscus.svg\"});\r\n        color: #ff73a1;\r\n      }\r\n      &.sunflower {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_sunflower.svg\"});\r\n        color: ${colors.orangeDeep};\r\n      }\r\n      &.rose {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_rose.svg\"});\r\n        color: #f5062c;\r\n      }\r\n      &.discharge {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_bag.svg\"});\r\n        color: ${colors.grayDeep};\r\n      }\r\n      &.graduation {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_graduation.svg\"});\r\n        color: ${colors.black};\r\n      }\r\n      &.none {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n  `;\r\n  return (\r\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\r\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\r\n    <>\r\n      <ClassTitle>\r\n        <h3\r\n          className={\r\n            state === 1\r\n              ? \"hibiscus\"\r\n              : state === 2\r\n              ? \"sunflower\"\r\n              : state === 3\r\n              ? \"rose\"\r\n              : state === -1\r\n              ? \"discharge\"\r\n              : state === -2\r\n              ? \"graduation\"\r\n              : \"none\"\r\n          }\r\n        >\r\n          {state === 1\r\n            ? \"무궁화반\"\r\n            : state === 2\r\n            ? \"해바라기반\"\r\n            : state === 3\r\n            ? \"장미반\"\r\n            : state === -1\r\n            ? \"퇴소\"\r\n            : state === -2\r\n            ? \"졸업\"\r\n            : \"지정된 반이 없습니다.\"}\r\n        </h3>\r\n      </ClassTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyClass;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, ellipsis } from \"../basic\";\r\n\r\nexport const IndWrap = styled.div`\r\n  position: relative;\r\n  min-height: 80vh;\r\n`;\r\n\r\nexport const IndListWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1%;\r\n`;\r\nexport const IndListBox = styled.div`\r\n  width: 32%;\r\n  padding: 2rem;\r\n  ${boxStyle}\r\n`;\r\n\r\nexport const IndTop = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  color: #555;\r\n`;\r\nexport const IndCon = styled.div`\r\n  margin: 1.5rem 0;\r\n  min-height: 3rem;\r\n  p {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  span {\r\n    display: block;\r\n    color: ${colors.grayDeep};\r\n    ${ellipsis.line2}\r\n    word-break: break-all;\r\n  }\r\n`;\r\nexport const IndBot = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .ind-date {\r\n    color: ${colors.grayDeep};\r\n    padding-left: 2.5rem;\r\n    background: url(${process.env.PUBLIC_URL +\r\n      \"/images/common/notice/clock.svg\"})\r\n      no-repeat top left/ 1.8rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport MyClass from \"../user/MyClass\";\r\nimport {\r\n  IndBot,\r\n  IndCon,\r\n  IndListBox,\r\n  IndListWrap,\r\n  IndTop,\r\n} from \"../../styles/individualNotice/ind\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndListComponent = ({ listData }) => {\r\n  console.log(listData);\r\n  return (\r\n    <IndListWrap>\r\n      {Array.isArray(listData) &&\r\n        listData.map(item => (\r\n          <IndListBox key={item.inotice}>\r\n            <Link to=\"\">\r\n              <IndTop>\r\n                <MyClass state={item.iclass} /> <h4>{item.kidNm}</h4>\r\n              </IndTop>\r\n              <IndCon>\r\n                <p>{item.noticeTitle}</p>\r\n                <span>{item.noticeContents}</span>\r\n              </IndCon>\r\n              <IndBot>\r\n                <div className=\"ind-date\">{item.createdAt.split(\" \")[0]}</div>\r\n                <div className=\"ind-file\">\r\n                  {item.picCheck === 0 ? (\r\n                    <img\r\n                      src={\r\n                        process.env.PUBLIC_URL + \"/images/common/file_icon.svg\"\r\n                      }\r\n                      alt=\"file\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </IndBot>\r\n            </Link>\r\n          </IndListBox>\r\n        ))}\r\n    </IndListWrap>\r\n  );\r\n};\r\n\r\nexport default IndListComponent;\r\n","import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api`;\r\n\r\nexport const getIndList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/notice?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"서버가 불안정합니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import { Button, Dropdown, Pagination, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport GuardianListComponent from \"../../components/adminpage/GuardianListComponent\";\r\nimport { IndWrap } from \"../../styles/individualNotice/ind\";\r\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\r\nimport { getIndList } from \"../../api/individualNotice/indivNoticeApi\";\r\n\r\nconst IndivNotiList = () => {\r\n  const navigate = useNavigate();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const [indList, setIndList] = useState();\r\n\r\n  // 현재 출력 년도, kid 값 체크\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isParentLogin, doLogout } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n\r\n  // ikid 값만 추출하여 파라미터값과 비교\r\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\r\n\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: <Link to={`/mypage?year=${yearNum}&ikid=${ikid}`}>{yearNum}</Link>,\r\n    });\r\n  }\r\n\r\n  // 아이 선택\r\n  const items =\r\n    Array.isArray(ikidList) &&\r\n    ikidList.map(item => {\r\n      return {\r\n        key: item.ikid.toString(),\r\n        label: (\r\n          <Link to={`/mypage?year=${year}&ikid=${item.ikid}`}>\r\n            {item.kidNm}\r\n          </Link>\r\n        ),\r\n      };\r\n    });\r\n\r\n  const handleChange = value => {\r\n    console.log(value);\r\n  };\r\n  const handlePageChange = (page, pageSize) => {\r\n    console.log(\"Page:\", page, \"PageSize:\", pageSize);\r\n  };\r\n  useEffect(() => {\r\n    getIndList({ page, year, ikid, errorFn, successFn });\r\n  }, []);\r\n\r\n  const successFn = res => {\r\n    console.log(res);\r\n    setIndList(res);\r\n  };\r\n  const errorFn = res => {\r\n    console.log(res);\r\n  };\r\n  return (\r\n    <IndWrap>\r\n      <TitleWrap>\r\n        <PageTitle>알림장</PageTitle>\r\n        <FlexBox>\r\n          <Dropdown menu={{ items: yearArr }}>\r\n            <Button>\r\n              {year}\r\n              <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          <Dropdown menu={{ items }}>\r\n            <Button>\r\n              {\" \"}\r\n              이름\r\n              <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </FlexBox>\r\n      </TitleWrap>\r\n      <IndListComponent listData={indList} />\r\n      <PageNum>\r\n        <Pagination\r\n          defaultCurrent={1} // 초기 선택된 페이지\r\n          total={10} // 전체 아이템 수\r\n          pageSize={12} // 한 페이지에 보여질 아이템 수\r\n          onChange={handlePageChange} // 페이지 변경 시의 콜백 함수\r\n        />\r\n      </PageNum>\r\n    </IndWrap>\r\n  );\r\n};\r\n\r\nexport default IndivNotiList;\r\n"],"names":["_ref","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_jsx","_Fragment","children","className","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","doParentLogin","_ref2","postParentLoginAsync","moveToPath","path","pathname","replace","moveToLogin","console","log","Navigate","to","refreshAccessToken","async","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","error","IndWrap","IndListWrap","_templateObject2","IndListBox","_templateObject3","boxStyle","IndTop","_templateObject4","IndCon","_templateObject5","ellipsis","line2","IndBot","_templateObject6","listData","Array","isArray","map","item","_jsxs","Link","MyClass","iclass","kidNm","noticeTitle","noticeContents","createdAt","split","picCheck","src","alt","inotice","concat","SERVER_URL","IndivNotiList","serchParams","setSearchParams","useSearchParams","indList","setIndList","useState","year","get","ikid","page","ikidList","kidList","currentYear","Date","getFullYear","yearArr","yearNum","push","key","toString","label","items","useEffect","res","jwtAxios","status","charAt","data","response","message","getIndList","TitleWrap","PageTitle","FlexBox","Dropdown","menu","Button","DownOutlined","IndListComponent","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}