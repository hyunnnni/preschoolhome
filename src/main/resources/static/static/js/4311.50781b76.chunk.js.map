{"version":3,"file":"static/js/4311.50781b76.chunk.js","mappings":"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","sources":["api/album/album_api.js","hooks/useCustomLogin.js","components/album/LightBox.js","components/album/DetailsAlbum.js","pages/album/AlbumDetails.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  // console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import React from \"react\";\r\n\r\nconst LightBox = ({ imgSrc, open, closeLightbox }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        zIndex: 1000,\r\n      }}\r\n      onClick={closeLightbox}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          objectFit: \"contain\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={closeLightbox}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: 1010,\r\n        }}\r\n      >\r\n        닫기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LightBox;\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-cube\";\r\nimport \"swiper/css/pagination\";\r\nimport { EffectCoverflow, Keyboard, Pagination } from \"swiper/modules\";\r\nimport LightBox from \"./LightBox\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  AlbumTitle,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  ContentWrap,\r\n  DetailsText,\r\n  Footer,\r\n  MainContent,\r\n  TitleWrap,\r\n  SwiperWrap,\r\n} from \"../../styles/album/album\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport Comment from \"../common/Comment\";\r\nimport { deleteAlbum, getAlbum } from \"../../api/album/album_api\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nconst path = `${IMG_URL}/pic/album`;\r\n\r\nconst host = `${SERVER_URL}/album`;\r\n// import required modules\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst DetailsAlbum = ({ pno, isLogin }) => {\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n  // 컴포넌트 마운트 시 데이터 불러오기\r\n  // console.log(\"pno\", pno);\r\n  useEffect(() => {\r\n    getAlbum({\r\n      pno: pno,\r\n      successFn: data => {\r\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\r\n        setIsLoading(false); // 로딩 상태 업데이트\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setIsLoading(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setIsLoading(false);\r\n      },\r\n    });\r\n  }, [pno]); // pno 값이 변경될 때마다 getAlbum 함수를 호출\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = () => {\r\n    setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\r\n\r\n    deleteAlbum({\r\n      ialbum: pno,\r\n      successFn: res => {\r\n        // 삭제 성공 시 처리\r\n        // console.log(\"Album deleted:\", res);\r\n        setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\r\n\r\n        // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\r\n        setTimeout(() => {\r\n          setIsDeleteSuccessModalOpen(false);\r\n          navigate(\"/album\");\r\n        }, 2000);\r\n      },\r\n      failFn: error => {\r\n        // 삭제 실패 시 처리\r\n        Modal.error({\r\n          title: \"앨범 삭제 실패\",\r\n          content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n      errorFn: error => {\r\n        console.error(\"Error deleting album:\", error);\r\n        Modal.error({\r\n          title: \"오류 발생\",\r\n          content:\r\n            \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteSuccessOk = () => {\r\n    setIsDeleteSuccessModalOpen(false);\r\n  };\r\n  const [lightbox, setLightbox] = useState({ open: false, imgSrc: \"\" });\r\n  const openLightbox = imgSrc => setLightbox({ open: true, imgSrc: imgSrc });\r\n  const closeLightbox = () => setLightbox({ open: false, imgSrc: \"\" });\r\n\r\n  // Lightbox 상태에 따라 Swiper 높이 조절\r\n  useEffect(() => {\r\n    const swiperElement = document.querySelector(\".swiper\");\r\n    if (lightbox.open) {\r\n      swiperElement.style.height = \"55vh\";\r\n    } else {\r\n      swiperElement.style.height = \"100%\";\r\n    }\r\n  }, [lightbox.open]);\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40}>\r\n      <AlbumTopBar padding={1}>\r\n        <AlbumTitle>활동앨범</AlbumTitle>\r\n      </AlbumTopBar>\r\n      <ContentWrap>\r\n        <TitleWrap>\r\n          <h3>{albumData.albumTitle}</h3>\r\n          <p>{albumData.createdAt}</p>\r\n        </TitleWrap>\r\n        <MainContent>\r\n          <SwiperWrap>\r\n            <Swiper\r\n              loading=\"swiper-lazy-preloader swiper-lazy-preloader-white\"\r\n              height={200}\r\n              effect={\"coverflow\"}\r\n              grabCursor={true}\r\n              centeredSlides={true}\r\n              slidesPerView={\"auto\"}\r\n              coverflowEffect={{\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n              }}\r\n              pagination={true}\r\n              keyboard={{ enabled: true }} // 키보드 제어 활성화\r\n              modules={[EffectCoverflow, Pagination, Keyboard]} // Keyboard 모듈 추가\r\n              className=\"mySwiper\"\r\n              // style={{ transform: `translate3d(0px, 0px, 0px)` }} //\r\n            >\r\n              {albumData &&\r\n                albumData.albumPic &&\r\n                albumData.albumPic.map((item, index) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img\r\n                      src={`${path}/${pno}/${item}`}\r\n                      onClick={() => openLightbox(`${path}/${pno}/${item}`)}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              <LightBox\r\n                imgSrc={lightbox.imgSrc}\r\n                open={lightbox.open}\r\n                closeLightbox={closeLightbox}\r\n              />\r\n            </Swiper>\r\n          </SwiperWrap>\r\n          <DetailsText>\r\n            <p>{albumData.albumContents}</p>\r\n          </DetailsText>\r\n          {/* <Comment /> */}\r\n        </MainContent>\r\n        {/* 삭제 모달 */}\r\n        <Modal\r\n          title=\"정말 삭제할까요?\"\r\n          open={isDeleteModalOpen}\r\n          onOk={handleDeleteOk}\r\n          onCancel={handleDeleteCancel}\r\n          okText=\"확인\"\r\n          cancelText=\"취소\"\r\n        >\r\n          <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n        </Modal>\r\n\r\n        {/* 삭제 성공 모달 */}\r\n        <Modal\r\n          title=\"삭제 완료\"\r\n          open={isDeleteSuccessModalOpen}\r\n          onOk={handleDeleteSuccessOk}\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          okText=\"확인\"\r\n        >\r\n          <p>삭제가 완료되었습니다.</p>\r\n        </Modal>\r\n        <Footer>\r\n          <Link to=\"/album\">\r\n            <GreenBtn>목록보기</GreenBtn>\r\n          </Link>\r\n\r\n          {isLogin ? (\r\n            <>\r\n              {/* <Link to={`${host}/modify/${pno}`}>\r\n                <BlueBtn>수정</BlueBtn>\r\n              </Link> */}\r\n              <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n            </>\r\n          ) : null}\r\n        </Footer>\r\n      </ContentWrap>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default DetailsAlbum;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport DetailsAlbum from \"../../components/album/DetailsAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst AlbumDetails = () => {\r\n  let { pno } = useParams();\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 로그인 상태에서 iteacher 값을 확인합니다.\r\n  return <DetailsAlbum pno={pno} isLogin={isLogin} />;\r\n};\r\nexport default AlbumDetails;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","_jsx","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","imgSrc","open","closeLightbox","_jsxs","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","onClick","children","src","maxWidth","maxHeight","objectFit","IMG_URL","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","albumData","setAlbumData","useState","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","useEffect","message","lightbox","setLightbox","swiperElement","document","querySelector","height","AlbumWrap","paddingTop","AlbumTopBar","padding","AlbumTitle","ContentWrap","TitleWrap","MainContent","SwiperWrap","Swiper","loading","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","keyboard","enabled","modules","EffectCoverflow","Pagination","Keyboard","className","map","item","index","SwiperSlide","openLightbox","LightBox","DetailsText","Modal","title","onOk","handleDeleteOk","setTimeout","content","onCancel","handleDeleteCancel","okText","cancelText","handleDeleteSuccessOk","cancelButtonProps","Footer","Link","GreenBtn","_Fragment","PinkBtn","showDeleteModal","AlbumDetails","useParams","DetailsAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","colors","grayLight","grayDeep","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","_templateObject6","_templateObject7","greenDeep","h3","_templateObject8","_templateObject9","grayBar","_templateObject10","_templateObject11","_templateObject12","FileListStyle","_templateObject13","_templateObject14","defaultBtnStyle","fontSize","fontFamily","background","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn"],"sourceRoot":""}