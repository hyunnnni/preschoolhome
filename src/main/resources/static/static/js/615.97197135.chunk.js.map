{"version":3,"file":"static/js/615.97197135.chunk.js","mappings":"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","sources":["styles/user/notialarm.js","atoms/pushState.js","components/user/NotiAlarm.js","api/user/pushApi.js","components/common/NavBar.js","components/common/Footer.js","components/common/SideMenu.js","components/common/SideBar.js","layouts/MainLayout.js","../node_modules/recoil-persist/dist/index.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { boxStyle, colors, ellipsis } from \"../basic\";\nimport { animationSwing } from \"../ui/animations\";\nimport { css } from \"@emotion/react\";\n\nexport const NotiWrap = styled.div`\n  position: relative;\n`;\n\nexport const NotiIcon = styled.div`\n  position: relative;\n  width: 3rem;\n  /* margin-right: -0.5rem; */\n  cursor: pointer;\n  img {\n    width: 100%;\n    animation: ${props =>\n      props.state\n        ? css`\n            ${animationSwing} 0.1s alternate infinite\n          `\n        : \"none\"};\n  }\n\n  :after {\n    content: \"\";\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 0.7rem;\n    height: 0.7rem;\n    background: ${colors.orangeDeep};\n    border-radius: 50%;\n    display: ${props => (props.state ? \"block\" : \"none\")};\n  }\n`;\n\nexport const NotiList = styled.div`\n  position: absolute;\n  top: calc(100% + 1rem);\n  left: 50%;\n  transform: translateX(-50%);\n  min-width: 25rem;\n  ${boxStyle}\n  box-shadow: 0 -2px 10px 1px rgba(0,0,0,0.1);\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s;\n  &.active {\n    overflow: inherit;\n    max-height: 30rem;\n  }\n  &.active:before {\n    display: block;\n  }\n  &:before {\n    content: \"\";\n    display: none;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    top: -12px;\n    width: 0;\n    height: 0;\n    border-bottom: 6px solid #fff;\n    border-top: 6px solid transparent;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n  }\n`;\nexport const NotiItemWrap = styled.div`\n  padding: 2rem 1.5rem;\n  max-height: 0;\n  transition: max-height 0.2s;\n  &.active {\n    overflow-y: auto;\n    max-height: 25rem;\n  }\n`;\nexport const NotiItem = styled.div`\n  position: relative;\n  border-bottom: 1px dashed ${colors.grayBar};\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n  cursor: pointer;\n  :last-of-type {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n  button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0;\n    font-size: 0;\n    width: 1.7rem;\n    opacity: 0.5;\n    img {\n      width: 100%;\n    }\n\n    :hover {\n      opacity: 1;\n    }\n  }\n  .noti-kid {\n    color: #999999;\n    margin-bottom: 0.25rem;\n    font-size: 1.2rem;\n  }\n  .noti-title {\n    font-size: 1.3rem;\n    font-weight: 500;\n    ${ellipsis.line2}\n    span {\n      padding-right: 0.5rem;\n    }\n  }\n`;\nexport const EmptyList = styled.div`\n  font-size: 1.2rem;\n  text-align: center;\n`;\n","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\nconst initState = {\n  pushList: [],\n};\n\nconst { persistAtom } = recoilPersist();\nconst pushState = atom({\n  key: \"pushState\",\n  default: initState,\n  effects_UNSTABLE: [persistAtom],\n  dangerouslyAllowMutability: true,\n});\n\nexport default pushState;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  EmptyList,\n  NotiBox,\n  NotiIcon,\n  NotiItem,\n  NotiItemWrap,\n  NotiList,\n  NotiWrap,\n} from \"../../styles/user/notialarm\";\nimport { useRecoilState } from \"recoil\";\nimport pushState from \"../../atoms/pushState\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { Link } from \"react-router-dom\";\n\nconst NotiAlarm = () => {\n  const [notiPush, setNotiPush] = useRecoilState(pushState);\n  const [isListOpen, setIsListOpen] = useState(false);\n  // 로그인체크\n  const { isLogin, loginState } = useCustomLogin();\n  const iuser = isLogin ? \"iteacher\" : \"iparent\";\n  const userNm = isLogin ? loginState.iteacher : loginState.iparent;\n  // 유저와 일치하는 data\n  const data = notiPush.pushList.filter(\n    obj =>\n      Object.prototype.hasOwnProperty.call(obj, iuser) && obj[iuser] === userNm,\n  );\n  // data\n  let notiList = [];\n  let totalCnt = false;\n  if (data.length > 0) {\n    notiList = data[0].data;\n    totalCnt = !data[0].totalCnt || data[0].totalCnt === 0 ? false : true;\n  }\n\n  const listRef = useRef(null);\n  console.log(notiList);\n  // 화면 나오면 data 값 넣기\n  useEffect(() => {\n    // const handleOutsideClose = e => {\n    //   if (isListOpen && !listRef.current.contains(e.target))\n    //     setIsListOpen(false);\n    // };\n    // document.addEventListener(\"click\", handleOutsideClose);\n    // return () => document.removeEventListener(\"click\", handleOutsideClose);\n  }, [totalCnt]);\n\n  // 알림 리스트\n  const handleClickOpen = () => {\n    setIsListOpen(!isListOpen);\n    if (!isListOpen && totalCnt) {\n      setNotiPush(prev => {\n        const updatedPushList = prev.pushList.map(item => {\n          if (item[iuser] === userNm) {\n            item.totalCnt = 0;\n          }\n          return item;\n        });\n        return { ...prev, pushList: updatedPushList };\n      });\n    }\n  };\n\n  // 알림삭제\n  const handleClickDelete = index => {\n    // 클릭한 객체 제외하고 새로 배열 저장\n    const updatedNotiList = [\n      ...notiList.slice(0, index),\n      ...notiList.slice(index + 1),\n    ];\n    notiList = updatedNotiList;\n\n    // notiPush 업데이트\n    setNotiPush(prev => {\n      const updatedPushList = prev.pushList.map(item => {\n        if (item[iuser] === userNm) {\n          item.data = item.data.filter((notiItem, idx) => idx !== index);\n          // item.totalCnt--;\n        }\n        return item;\n      });\n      return { ...prev, pushList: updatedPushList };\n    });\n  };\n\n  return (\n    <NotiWrap ref={listRef}>\n      <NotiIcon state={totalCnt} onClick={handleClickOpen}>\n        <img src={process.env.PUBLIC_URL + \"/images/common/bell_icon.svg\"} />\n      </NotiIcon>\n      <NotiList className={isListOpen ? \"active\" : \"\"}>\n        <NotiItemWrap className={isListOpen ? \"active\" : \"\"}>\n          {notiList.length === 0 ? (\n            <EmptyList>알림이 없습니다.</EmptyList>\n          ) : (\n            Array.isArray(notiList) &&\n            notiList.map((item, index) => (\n              <NotiItem key={index}>\n                <Link\n                  to={`/ind${item.imemory ? \"/album\" : \"\"}/details/${\n                    item.inotice || item.imemory\n                  }?ikid=${item.ikid}&year=2024&page=1`}\n                >\n                  <ul>\n                    <li className=\"noti-kid\">\n                      <span className=\"noti-date\">\n                        {item.createdAt || item.cmtCreatedAt}\n                      </span>{\" \"}\n                      <br />\n                      {item.kidNm} {item.inotice ? \"알림장\" : \"추억앨범\"}{\" \"}\n                      {item.noticeComment || item.noticeComment\n                        ? \"새 댓글\"\n                        : null}\n                    </li>\n                    <li className=\"noti-title\">\n                      {item.noticeTitle || item.memoryTitle}\n                      {item.noticeComment || item.noticeComment}\n                    </li>\n                    {/* <li className=\"noti-writer\">{item.writerNm}</li> */}\n                  </ul>\n                </Link>\n                <button onClick={() => handleClickDelete(index)}>\n                  <img\n                    src={\n                      process.env.PUBLIC_URL + \"/images/common/close_icon.svg\"\n                    }\n                    alt=\"알림삭제\"\n                  />\n                  알림삭제\n                </button>\n              </NotiItem>\n            ))\n          )}\n        </NotiItemWrap>\n      </NotiList>\n    </NotiWrap>\n  );\n};\n\nexport default NotiAlarm;\n","import { getFirebaseToken, onMessageListener } from \"../../fb/fbconfig\";\nimport jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nconst parentFbPath = `${SERVER_URL}/api/parent/firebase-token`;\nconst teacherFbPath = `${SERVER_URL}/api/teacher/firebase-token`;\n\nexport const patchTeacherFbToken = async ({ params, successFn }) => {\n  try {\n    const res = await jwtAxios.patch(`${teacherFbPath}`, params);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchParentFbToken = async ({ params, successFn }) => {\n  try {\n    const res = await jwtAxios.patch(`${parentFbPath}`, params);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFbToken = async successFn => {\n  try {\n    const firebaseToken = await getFirebaseToken();\n    successFn(firebaseToken);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { HeaderBtn, NavWrap } from \"../../styles/basic\";\nimport {\n  GrayBtn,\n  GreenBtn,\n  OrangeBtn,\n  PinkBtn,\n  PurpleBtn,\n} from \"../../styles/ui/buttons\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport NotiAlarm from \"../user/NotiAlarm\";\nimport { useRecoilState } from \"recoil\";\nimport pushState from \"../../atoms/pushState\";\nimport { onMessageListener } from \"../../fb/fbconfig\";\nimport {\n  patchParentFbToken,\n  patchTeacherFbToken,\n  getFbToken,\n} from \"../../api/user/pushApi\";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n  const currentYear = new Date().getFullYear();\n  // 로그인정보 체크\n  const {\n    moveToPath,\n    doLogout,\n    loginState,\n    isLogin,\n    isName,\n    isAdminLogin,\n    isParentLogin,\n    isTeacherLogin,\n    refreshAccessToken,\n  } = useCustomLogin();\n  const ikidList = loginState.kidList;\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\n  const iteacher = loginState.iteacher;\n\n  // 로그아웃\n  const handleLogout = () => {\n    doLogout();\n    moveToPath(\"/\");\n  };\n  // // 푸시알림 State\n  // const [notiPush, setNotiPush] = useRecoilState(pushState);\n\n  // // 알림사용 승인 후 firebase 토큰 가져오기\n  // useEffect(() => {\n  //   // 값이 잘못들어가있으면 리셋 (추후삭제)\n  //   if (notiPush.pushList.some(item => \"iuser\" in item)) {\n  //     setNotiPush({\n  //       pushList: [],\n  //     });\n  //   }\n  //   if (Notification.permission !== \"granted\") {\n  //     Notification.requestPermission().then(permission => {\n  //       if (permission === \"granted\") {\n  //         getFbToken(successFn);\n  //       }\n  //     });\n  //   } else {\n  //     getFbToken(successFn);\n  //   }\n  // }, [loginState]);\n  // //가져온 firebase 토큰이 로그인정보에 있는 토큰값과 다른지 체크\n  // const successFn = res => {\n  //   const userFirebaseToken = isParentLogin\n  //     ? loginState.prFirebaseToken\n  //     : loginState.firebaseToken;\n\n  //   if (userFirebaseToken !== res && loginState.accessToken) {\n  //     console.log(\"firebaseToken :\", res);\n  //   }\n  // };\n\n  // // 푸시알림감지 후 알림 리스트 업데이트\n  // onMessageListener()\n  //   .then(payload => {\n  //     const newData = JSON.parse(payload.notification.body);\n  //     setNotiPush(prev => {\n  //       let pushListUpdated = false;\n  //       const updatedPushList = prev.pushList.map(item => {\n  //         // iteacher,iparent 값 확인\n  //         if (\n  //           item.iteacher === loginState.iteacher ||\n  //           item.iparent === loginState.iparent\n  //         ) {\n  //           // 일치하면 원래 있던 객체에 data, totalCnt만 추가\n  //           item.data.push(newData);\n  //           item.totalCnt++;\n  //           pushListUpdated = true;\n  //         }\n  //         return item;\n  //       });\n\n  //       // 일치하는 iteacher,iparent 값이 없을경우\n  //       // 선생님, 학부모에 따라 값 추가\n  //       if (!pushListUpdated) {\n  //         const newItem = {};\n  //         if (isParentLogin) {\n  //           newItem.iparent = loginState.iparent;\n  //         }\n  //         if (isLogin) {\n  //           newItem.iteacher = loginState.iteacher;\n  //         }\n  //         newItem.totalCnt = 1;\n  //         newItem.data = [newData];\n  //         updatedPushList.push(newItem);\n  //       }\n\n  //       return { ...prev, pushList: updatedPushList };\n  //     });\n  //   })\n  //   .catch(error => console.log(error));\n\n  // console.log(notiPush);\n\n  return (\n    <NavWrap>\n      <Link to={\"/\"} className=\"nav-logo\">\n        <img src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"} />\n      </Link>\n      <p>{isLogin || isParentLogin ? `${isName}님 환영합니다.` : null}</p>\n      {/* 푸시알림 */}\n      {isParentLogin || isTeacherLogin ? <NotiAlarm /> : null}\n\n      <HeaderBtn>\n        {isLogin ? (\n          <>\n            <GrayBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(`/ind?year=${currentYear}&page=1&iclass=${iclass}`)\n              }\n            >\n              알림장목록\n            </GrayBtn>\n\n            <PurpleBtn\n              className=\"nav-btn\"\n              onClick={e => navigate(`/admin?page=1&iclass=${iclass}`)}\n            >\n              학부모관리\n            </PurpleBtn>\n            <OrangeBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(`/admin/student?page=1&kidCheck=${iclass}`)\n              }\n            >\n              원생관리\n            </OrangeBtn>\n            {isTeacherLogin ? (\n              <PinkBtn\n                className=\"nav-btn\"\n                onClick={e =>\n                  navigate(`/admin/teacher/edit?iteacher=${iteacher}`)\n                }\n              >\n                정보수정\n              </PinkBtn>\n            ) : null}\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : isParentLogin ? (\n          <>\n            <GrayBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(\n                  `/ind?year=${currentYear}&page=1&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              알림장\n            </GrayBtn>\n            <OrangeBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(\n                  `/mypage?year=${currentYear}&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              마이페이지\n            </OrangeBtn>\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : (\n          <>\n            <OrangeBtn onClick={e => navigate(\"user/accounts\")}>\n              회원가입\n            </OrangeBtn>\n            <GreenBtn onClick={e => navigate(\"login\")}>로그인</GreenBtn>\n          </>\n        )}\n      </HeaderBtn>\n    </NavWrap>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { FooterBg, FooterBus, FooterWrap } from \"../../styles/basic\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterBus />\n      <FooterBg>\n        <Link to=\"/\">copyright 떡잎방범대</Link>\n      </FooterBg>\n    </FooterWrap>\n  );\n};\n\nexport default Footer;\n","import { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst SideMenu = () => {\n  const { isLogin, isParentLogin, isTeacherLogin, loginState } =\n    useCustomLogin();\n  const currentYear = new Date().getFullYear();\n  const ikidList = loginState.kidList;\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\n  const iteacher = loginState.iteacher;\n  function getItem(label, key, icon, children, type) {\n    return {\n      key,\n      icon,\n      children,\n      label,\n      type,\n    };\n  }\n\n  const teacherItems = [\n    getItem(\n      <Link to={`/admin?page=1&iclass=${iclass}`}>학부모 관리</Link>,\n      \"5-1\",\n    ),\n    getItem(\n      <Link to={`/admin/student?page=1&kidCheck=${iclass}`}>원생 관리</Link>,\n      \"5-2\",\n    ),\n    getItem(<Link to=\"/admin/student/create\">원생 등록</Link>, \"5-3\"),\n    getItem(\n      <Link to={`/ind?year=${currentYear}&page=1&iclass=${iclass}`}>\n        알림장 목록\n      </Link>,\n      \"5-4\",\n    ),\n  ];\n  const items = [\n    getItem(\n      \"유치원 안내\",\n      \"1\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/info_icon.svg\"}\n      />,\n      [\n        getItem(<Link to=\"/info/\">유치원 소개</Link>, \"1-1\"),\n        getItem(<Link to=\"/info/class\">유치원 현황</Link>, \"1-2\"),\n        getItem(<Link to=\"/info/location\">오시는 길</Link>, \"1-3\"),\n      ],\n    ),\n    getItem(\n      \"육아정보\",\n      \"2\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/education.svg\"}\n      />,\n      [\n        // getItem(<Link to=\"/edu\">교육과정</Link>, \"2-1\"),\n        // getItem(<Link to=\"/edu/specialact\">방과후활동</Link>, \"2-2\"),\n        getItem(<Link to=\"/edu/hospital?page=1\">예방접종기관정보</Link>, \"2-3\"),\n        getItem(\n          <Link to=\"/edu/nighthospital?page=1\">야간진료병원정보</Link>,\n          \"2-4\",\n        ),\n      ],\n    ),\n    getItem(\n      \"활동앨범\",\n      \"3\",\n      <Link to=\"/album\">\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/gallery.svg\"}\n        />\n      </Link>,\n    ),\n    getItem(\n      \"유치원 소식\",\n      \"4\",\n      <Link to=\"/notice\">\n        <img src={process.env.PUBLIC_URL + \"/images/common/sidebar/news.svg\"} />\n      </Link>,\n    ),\n  ];\n  if (isLogin && !isTeacherLogin) {\n    items.push(\n      getItem(\n        \"관리자\",\n        \"5\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\n        />,\n        teacherItems.concat([\n          getItem(\n            <Link to={`/admin/teacher?page=1&iclass=${iclass}&tcIsDel=0`}>\n              선생님 관리\n            </Link>,\n            \"5-5\",\n          ),\n        ]),\n      ),\n    );\n  }\n  if (isTeacherLogin) {\n    items.push(\n      getItem(\n        \"관리자\",\n        \"5\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\n        />,\n        teacherItems.concat([\n          getItem(\n            <Link to={`/admin/teacher/edit?iteacher=${iteacher}`}>\n              정보 수정\n            </Link>,\n            \"5-6\",\n          ),\n        ]),\n      ),\n    );\n  }\n  if (isParentLogin) {\n    items.push(\n      getItem(\n        \"회원전용\",\n        \"6\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/user.svg\"}\n        />,\n        [\n          getItem(\n            <Link\n              to={`/ind?year=${currentYear}&page=1&ikid=${\n                ikidList[0] ? ikidList[0].ikid : 0\n              }`}\n            >\n              알림장\n            </Link>,\n            \"6-1\",\n          ),\n          getItem(\n            <Link\n              to={`/mypage?year=${currentYear}&ikid=${\n                ikidList[0] ? ikidList[0].ikid : 0\n              }`}\n            >\n              마이페이지\n            </Link>,\n            \"6-2\",\n          ),\n        ],\n      ),\n    );\n  }\n\n  return (\n    <Menu\n      defaultSelectedKeys={[\"\"]}\n      mode=\"inline\"\n      items={items}\n      style={{ border: 0 }}\n    />\n  );\n};\n\nexport default SideMenu;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LogoWrap, SideBarWrap } from \"../../styles/basic\";\nimport Sider from \"antd/es/layout/Sider\";\nimport SideMenu from \"./SideMenu\";\nimport { AllBtn } from \"../../styles/ui/buttons\";\n\nconst SideBar = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const sideMenuRef = useRef(null);\n  useEffect(() => {\n    const handleOutsideClose = e => {\n      if (\n        window.innerWidth <= 798 &&\n        !collapsed &&\n        !sideMenuRef.current.contains(e.target)\n      )\n        setCollapsed(true);\n    };\n    document.addEventListener(\"click\", handleOutsideClose);\n\n    return () => document.removeEventListener(\"click\", handleOutsideClose);\n  }, [collapsed]);\n\n  return (\n    <SideBarWrap ref={sideMenuRef}>\n      <Sider\n        breakpoint=\"lg\"\n        onCollapse={(collapsed, type) => {\n          setCollapsed(true);\n        }}\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n        theme=\"light\"\n      >\n        <LogoWrap>\n          <Link to={\"/\"}>\n            {collapsed ? (\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/images/common/header/smallLogo.svg\"\n                }\n              />\n            ) : (\n              <img\n                src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"}\n              />\n            )}\n          </Link>\n        </LogoWrap>\n        <SideMenu />\n        <AllBtn type=\"text\" onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? \"펼치기\" : \"접기\"}\n        </AllBtn>\n      </Sider>\n    </SideBarWrap>\n  );\n};\n\nexport default SideBar;\n","import { Layout, theme } from \"antd\";\nimport { AllLayout, WrapMain } from \"../styles/basic\";\nimport NavBar from \"../components/common/NavBar\";\nimport Footer from \"../components/common/Footer\";\nimport SideBar from \"../components/common/SideBar\";\nimport { Outlet } from \"react-router\";\nconst MainLayout = ({ children }) => {\n  return (\n    <AllLayout className=\"layout-wrap\">\n      {/* 사이드바(전체메뉴)영역 */}\n      <SideBar />\n      <Layout>\n        {/* 상단네비영역 */}\n        <NavBar />\n        {/* 컨텐츠영역 */}\n        <WrapMain>\n          <Outlet />\n        </WrapMain>\n      </Layout>\n      {/* 하단푸터 */}\n      <Footer />\n    </AllLayout>\n  );\n};\nexport default MainLayout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoilPersist = void 0;\n/**\n * Recoil module to persist state to storage\n *\n * @param config Optional configuration object\n * @param config.key Used as key in local storage, defaults to `recoil-persist`\n * @param config.storage Local storage to use, defaults to `localStorage`\n */\nconst recoilPersist = (config = {}) => {\n    if (typeof window === 'undefined') {\n        return {\n            persistAtom: () => { },\n        };\n    }\n    const { key = 'recoil-persist', storage = localStorage, converter = JSON } = config;\n    const persistAtom = ({ onSet, node, trigger, setSelf }) => {\n        if (trigger === 'get') {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => {\n                    if (s.hasOwnProperty(node.key)) {\n                        setSelf(s[node.key]);\n                    }\n                });\n            }\n            if (state.hasOwnProperty(node.key)) {\n                setSelf(state[node.key]);\n            }\n        }\n        onSet(async (newValue, _, isReset) => {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => updateState(newValue, s, node.key, isReset));\n            }\n            else {\n                updateState(newValue, state, node.key, isReset);\n            }\n        });\n    };\n    const updateState = (newValue, state, key, isReset) => {\n        if (isReset) {\n            delete state[key];\n        }\n        else {\n            state[key] = newValue;\n        }\n        setState(state);\n    };\n    const getState = () => {\n        const toParse = storage.getItem(key);\n        if (toParse === null || toParse === undefined) {\n            return {};\n        }\n        if (typeof toParse === 'string') {\n            return parseState(toParse);\n        }\n        if (typeof toParse.then === 'function') {\n            return toParse.then(parseState);\n        }\n        return {};\n    };\n    const parseState = (state) => {\n        if (state === undefined) {\n            return {};\n        }\n        try {\n            return converter.parse(state);\n        }\n        catch (e) {\n            console.error(e);\n            return {};\n        }\n    };\n    const setState = (state) => {\n        try {\n            if (typeof storage.mergeItem === 'function') {\n                storage.mergeItem(key, converter.stringify(state));\n            }\n            else {\n                storage.setItem(key, converter.stringify(state));\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    return { persistAtom };\n};\nexports.recoilPersist = recoilPersist;\n"],"names":["NotiWrap","styled","div","_templateObject","_taggedTemplateLiteral","NotiIcon","_templateObject2","props","state","css","_templateObject3","animationSwing","colors","orangeDeep","NotiList","_templateObject4","boxStyle","NotiItemWrap","_templateObject5","NotiItem","_templateObject6","grayBar","ellipsis","line2","EmptyList","_templateObject7","persistAtom","recoilPersist","atom","key","default","pushList","effects_UNSTABLE","dangerouslyAllowMutability","NotiAlarm","notiPush","setNotiPush","useRecoilState","pushState","isListOpen","setIsListOpen","useState","isLogin","loginState","useCustomLogin","iuser","userNm","iteacher","iparent","data","filter","obj","Object","prototype","hasOwnProperty","call","notiList","totalCnt","length","listRef","useRef","console","log","useEffect","_jsxs","ref","children","_jsx","onClick","handleClickOpen","prev","updatedPushList","map","item","src","className","Array","isArray","index","Link","to","concat","imemory","inotice","ikid","createdAt","cmtCreatedAt","kidNm","noticeComment","noticeTitle","memoryTitle","updatedNotiList","slice","notiItem","idx","handleClickDelete","alt","SERVER_URL","NavBar","navigate","useNavigate","currentYear","Date","getFullYear","moveToPath","doLogout","isName","isAdminLogin","isParentLogin","isTeacherLogin","refreshAccessToken","ikidList","kidList","iclass","handleLogout","NavWrap","HeaderBtn","_Fragment","GrayBtn","e","PurpleBtn","OrangeBtn","PinkBtn","GreenBtn","Footer","FooterWrap","FooterBus","FooterBg","SideMenu","getItem","label","icon","type","teacherItems","items","push","Menu","defaultSelectedKeys","mode","style","border","SideBar","collapsed","setCollapsed","sideMenuRef","handleOutsideClose","window","innerWidth","current","contains","target","document","addEventListener","removeEventListener","SideBarWrap","Sider","breakpoint","onCollapse","trigger","collapsible","theme","LogoWrap","AllBtn","_ref","AllLayout","Layout","WrapMain","Outlet","exports","config","arguments","undefined","storage","localStorage","converter","JSON","updateState","newValue","isReset","setState","getState","toParse","parseState","then","parse","error","mergeItem","stringify","setItem","onSet","node","setSelf","s","async","_"],"sourceRoot":""}