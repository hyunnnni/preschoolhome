{"version":3,"file":"static/js/1428.7e7d273d.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/individualNotice/IndivNotiModify.js","styles/album/album.js","styles/ui/buttons.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nconst path = `${SERVER_URL}/api/full`;\n\n// 유치원소식 불러오기\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 리스트 불러오기\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 등록하기\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 유치원소식 게시글 삭제하기\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\n    const status = res.status.toString();\n\n    if (status.charAt(0) === \"2\") {\n      successFn();\n    } else {\n      failFn(\"삭제 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 수정하기\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, data, header);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import React, { useRef, useState } from \"react\";\nimport ContentLayout from \"../../layouts/common/ContentLayout\";\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\nimport { useNavigate } from \"react-router\";\nimport { postNotice } from \"../../api/notice/notice_api\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { FileListStyle } from \"../../styles/album/album\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\nimport { SERVER_URL } from \"../../api/config\";\nimport { Link } from \"react-router-dom\";\n\nconst path = `${SERVER_URL}/api/full`;\n\nconst IndivNotiModify = () => {\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\n  const navigate = useNavigate();\n\n  const formRef = useRef(); // Form 컴포넌트에 대한 ref 생성\n\n  const handleGreenButtonClick = () => {\n    formRef.current.submit(); // Form의 submit 메서드 호출\n  };\n\n  const onChange = e => {\n    console.log(`checked = ${e.target.checked}`);\n    setFullNoticeFix(e.target.checked);\n  };\n\n  const handleChange = info => {\n    let fileList = [...info.fileList].filter(file => !!file.status);\n    setFileList(fileList);\n  };\n\n  const customRequest = ({ onSuccess }) => {\n    onSuccess(\"ok\");\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancelConfirmation = () => {\n    Modal.confirm({\n      title: \"정말 취소할까요?\",\n      content: \"작성된 내용은 저장되지 않습니다.\",\n      onOk: () => handleCancelOk(),\n      okText: \"확인\",\n      cancelText: \"취소\",\n      onCancel: () => {},\n    });\n  };\n\n  const onFinish = async data => {\n    console.log(\"fileList\", fileList);\n    console.log(\"fullNoticeFix\", fullNoticeFix); // 확인용 로그\n\n    const formData = new FormData();\n\n    // 글 정보를 담은 dto Blob객체 생성\n    const dto = new Blob(\n      [\n        JSON.stringify({\n          iteacher: 1,\n          fullTitle: data.fullTitle,\n          fullContents: data.fullContents,\n          fullNoticeFix: fullNoticeFix ? 1 : 0,\n        }),\n      ],\n      // JSON 형식으로 설정\n      { type: \"application/json\" },\n    );\n\n    // dto 객체를 FormData에 추가\n    formData.append(\"dto\", dto);\n\n    // fileList에 있는 각 파일을 formData에 추가\n    fileList.forEach(file => {\n      // originFileObj가 실제 파일 데이터를 가지고 있음\n      formData.append(\"pics\", file.originFileObj);\n    });\n\n    // formData를 서버에 전송\n    postNotice({\n      product: formData,\n      successFn: handleSuccess,\n      failFn: handleFail,\n      errorFn: handleError,\n    });\n  };\n\n  const handleCancelOk = () => {\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\n\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\n    navigate(\"/notice\");\n\n    setIsModalVisible(false);\n  };\n\n  const handleSuccess = response => {\n    setIsModalVisible(true);\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\n  };\n\n  const handleFail = errorMessage => {\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\n    Modal.error({\n      title: \"유치원소식 업로드 실패\",\n      content: errorMessage,\n    });\n  };\n\n  const handleError = error => {\n    console.error(\"유치원소식 업로드 오류:\", error);\n    Modal.error({\n      title: \"유치원소식 업로드 중 오류 발생\",\n      content: error,\n    });\n  };\n\n  return (\n    <div>\n      <PageTitle>알림장</PageTitle>\n      <div\n        style={{\n          width: \"100%\",\n          height: 600,\n          padding: 16,\n          borderTop: \"1.5px solid #00876D\",\n          borderBottom: \"1.5px solid #00876D\",\n          background: \"#FAFAFA\",\n          marginTop: 30,\n        }}\n      >\n        <Checkbox onChange={onChange} style={{ marginBottom: 10 }}>\n          상단고정\n        </Checkbox>\n\n        <Form ref={formRef} form={form} onFinish={onFinish}>\n          <Form.Item\n            name=\"fullTitle\"\n            rules={[\n              {\n                required: true,\n                message: \"제목을 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input placeholder=\"제목 입력\" />\n          </Form.Item>\n\n          <Form.Item\n            style={{ height: \"150px\" }}\n            name=\"fullContents\"\n            rules={[\n              {\n                required: true,\n                message: \"내용을 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input.TextArea\n              placeholder=\"내용 입력\"\n              style={{ height: \"150px\" }}\n            />\n          </Form.Item>\n\n          <FileListStyle>\n            <Upload.Dragger\n              action={`${path}`}\n              listType=\"picture\"\n              fileList={fileList}\n              onChange={handleChange}\n              customRequest={customRequest}\n              className=\"upload-list-inline\"\n              // maxCount={3}\n              multiple={true}\n            >\n              <Button icon={<UploadOutlined />}>업로드</Button>\n            </Upload.Dragger>\n          </FileListStyle>\n        </Form>\n\n        <div\n          style={{\n            marginTop: 35,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <GreenBtn onClick={handleGreenButtonClick}>수정</GreenBtn>\n          <PinkBtn\n            onClick={handleCancelConfirmation}\n            style={{ marginLeft: 20 }}\n          >\n            취소\n          </PinkBtn>\n        </div>\n      </div>\n\n      <Link to=\"/notice\">\n        <Modal\n          title=\"등록 완료\"\n          open={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          okText=\"확인\"\n          cancelButtonProps={{ style: { display: \"none\" } }}\n          width={350}\n        >\n          <p>성공적으로 등록되었습니다.</p>\n        </Modal>\n      </Link>\n    </div>\n  );\n};\n\nexport default IndivNotiModify;\n","/* eslint-disable no-undef */\nimport styled from \"@emotion/styled\";\nimport { colors, fonts, shadow } from \"../basic\";\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  font-family: \"KOTRAHOPE\";\n  padding-top: ${props => props.paddingTop + \"px\"};\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n  input {\n    padding: 8px;\n    border: 1px solid ${colors.grayLight};\n    border-radius: 10px;\n  }\n  input::placeholder {\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 3.75rem;\n  padding: 1.8rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n// export const HeaderLeft = styled.div`\n\nexport const AlbumList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\n  gap: 0.4rem;\n  margin: 0px auto;\n  position: relative;\n  z-index: 2;\n\n  .image-grid {\n    gap: 1.6rem;\n    margin: 1.6rem;\n    text-align: center;\n  }\n  .image-grid > p {\n    font-size: 1.8rem;\n    margin: 1rem 0;\n    font-family: ${fonts.pretendard};\n    color: ${colors.black};\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .image-item img {\n    border-radius: 5%;\n    width: 100%;\n    text-align: center;\n  }\n\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 40px;\n    padding-bottom: 60px;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 300px;\n    height: 300px;\n  }\n\n  .swiper-slide img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  margin-top: 2rem;\n  background: #fff;\n\n  border-top: 0.2rem solid ${colors.greenDeep};\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  height: 4rem;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 3.5rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    font-size: 2.7rem;\n    font-weight: 400;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    position: absolute;\n    right: 2rem;\n    font-family: Pretendard;\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-bottom: 0.2rem solid ${colors.greenDeep};\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  font-family: Pretendard;\n  font-size: 2rem;\n\n  p {\n    line-height: 1.8;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  margin-bottom: 9rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  background-color: #fafafa;\n  padding-bottom: 2rem;\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n","import styled from \"@emotion/styled\";\nimport { colors, shadow } from \"../basic\";\nimport { Button, Modal, Space } from \"antd\";\n// 버튼 기본 스타일 정의\nconst defaultBtnStyle = {\n  fontSize: \"1.8rem\",\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\n  background: \"#fff\",\n  border: 0,\n  padding: \"1rem 1.5rem\",\n  borderRadius: \"1rem\",\n  cursor: \"pointer\",\n  minWidth: \"8rem\",\n};\n\n// 버튼 마우스오버 효과\nconst buttonHover = {\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\n};\n\nexport const BtnWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\n// 색상 별 버튼 style\nexport const GreenBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const OrangeBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.orangeLight};\n  color: ${colors.orangeDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.pinkLight};\n  color: ${colors.pinkDeep};\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const BlueBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.blueLight};\n  color: ${colors.blueDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const RedBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.redLight};\n  color: ${colors.redDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PurpleBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.purpleLight};\n  color: ${colors.purpleDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const GrayBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayLight};\n  color: ${colors.grayDeep};\n  transition: 0.2s;\n  :hover {\n    ${shadow}\n  }\n`;\nexport const BlackBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayDeep};\n  color: ${colors.white};\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메인 배너 버튼\nexport const MainPinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffadc7;\n  color: #fe77a2;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const MainBrownBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffcc58;\n  color: #db8400;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메뉴 접기 버튼\nexport const AllBtn = styled.button`\n  ${defaultBtnStyle}\n  position: absolute;\n  right: -2.5rem;\n  top: 2.5rem;\n  padding: 1rem 0.5rem;\n  font-size: 1.6rem;\n  border-radius: 0 0.5rem 0.5rem 0;\n  min-width: auto;\n  width: 2.5rem;\n  height: 7rem;\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  z-index: 11;\n  word-break: break-all;\n  line-height: 1;\n`;\n\nexport const StyledeleteModal = styled(Modal)`\n  ant-btn {\n    color: red;\n  }\n`;\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","postNotice","product","_ref3","post","response","message","deleteNotice","_ref4","delete","IndivNotiModify","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","fullNoticeFix","setFullNoticeFix","navigate","useNavigate","formRef","useRef","handleCancelOk","handleSuccess","handleFail","errorMessage","Modal","title","content","handleError","console","_jsxs","children","_jsx","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","Checkbox","onChange","e","log","target","checked","marginBottom","ref","onFinish","formData","FormData","dto","Blob","JSON","stringify","iteacher","fullTitle","fullContents","type","append","forEach","file","originFileObj","Item","name","rules","required","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","info","filter","customRequest","onSuccess","className","multiple","Button","icon","UploadOutlined","display","justifyContent","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","confirm","onOk","okText","cancelText","onCancel","marginLeft","Link","to","open","handleOk","handleCancel","cancelButtonProps","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","paddingTop","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","defaultBtnStyle","fontSize","fontFamily","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn","CheckOutlined","React","AntdIcon","_extends","CheckOutlinedSvg"],"sourceRoot":""}