{"version":3,"file":"static/js/341.db5e17cc.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/ModifyAlbum.js","pages/album/AlbumModify.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn({ ...res.data });\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// album/listall?page=1\n// 활동 앨범 전체 조회 get\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\nexport const getSearchListAll = async ({\n  page,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n    // console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    // console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path /comment\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, obj);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // &iteacher=${iteacher}&iparent=${iparent}\n    const iwriter = () => {\n      if (iteacher) {\n        return `&iteacher=${iteacher}`;\n      }\n      if (iparent) {\n        return `&iparent=${iparent}`;\n      }\n    };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { getEditAlbum, putAlbum } from \"../../api/album/album_api\";\nimport { IMG_URL } from \"../../api/config\";\nimport { AlbumWrap, FileListStyle, WriteWrap } from \"../../styles/album/album\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\nconst path = `${IMG_URL}/api/album`;\nconst imgpath = `${IMG_URL}/pic/album`;\nconst customRequest = ({ onSuccess }) => {\n  onSuccess(\"ok\");\n};\nconst initAlbumCommnet = [\n  {\n    albumTitle: \"\",\n    albumContents: \"\",\n    albumPic: [],\n    albumComments: [],\n    createdAt: \"\",\n  },\n];\n\nconst ModifyAlbum = () => {\n  const { pno } = useParams();\n  const formRef = useRef();\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // albumData 상태를 추가\n\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const navigate = useNavigate();\n  const [albumTitle, setAlbumTitle] = useState(\"\");\n  const [albumContents, setAlbumContents] = useState(\"\");\n  const [albumPics, setAlbumPics] = useState([]);\n  const [newPics, setNewPics] = useState([]);\n  const [deletedPics, setDeletedPics] = useState([]);\n  const [isEditConfirmModalVisible, setIsEditConfirmModalVisible] =\n    useState(false);\n  const [isSuccessModalVisible, setIsSuccessModalVisible] = useState(false);\n  const [isMinimumWarningVisible, setIsMinimumWarningVisible] = useState(false);\n  const [isNoChangeWarningVisible, setIsNoChangeWarningVisible] =\n    useState(false);\n  const [showCancelConfirmModal, setShowCancelConfirmModal] = useState(false);\n  const uploadAreaStyle = {\n    lineHeight: \"15rem\",\n  };\n  const handleGreenButtonClick = () => {\n    setIsEditConfirmModalVisible(true); // 수정 확인 모달을 표시\n  };\n  const handleEditCancel = () => {\n    setIsEditConfirmModalVisible(false); // 모달 닫기\n  };\n  const handleEditConfirm = () => {\n    // 모달에서 '확인' 버튼 클릭 시 호출될 함수\n    formRef.current.submit(); // Form의 submit 메서드 호출\n    setIsEditConfirmModalVisible(false); // 모달 닫기\n  };\n\n  const handleSuccess = response => {\n    setIsSuccessModalVisible(true); // 성공 메시지 모달 표시\n  };\n\n  const handleModalClose = () => {\n    setIsSuccessModalVisible(false); // 모달 닫기\n    navigate(`/album/details/${pno}`); // 성공 후 상세 페이지로 이동\n  };\n\n  // 이미지 삭제 시 최소 파일 수 검증 경고 모달을 닫는 함수\n  const handleCloseMinimumWarning = e => {\n    e.stopPropagation();\n    setIsMinimumWarningVisible(false); // 경고 모달 상태를 false로 변경하여 닫음\n    // 여기에 필요한 추가 로직을 배치할 수 있음\n  };\n\n  // 파일 업로드가 완료되었을 때 호출될 함수입니다.\n  const handleUploadChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList); // 기존 파일 리스트 업데이트\n    const newUploadedPics = newFileList\n      .filter(file => file.originFileObj) // 새로 업로드된 파일만 선택\n      .map(file => file.name); // 파일 이름 추출\n    setNewPics(newUploadedPics); // 새로 업로드된 파일 이름을 상태에 저장\n  };\n\n  const handleFailure = errorMessage => {\n    Modal.error({\n      title: \"앨범 업로드 실패\",\n      content: errorMessage,\n    });\n  };\n\n  const handleError = error => {\n    console.error(\"앨범 업로드 오류:\", error);\n    Modal.error({\n      title: \"앨범 업로드 중 오류 발생\",\n      content:\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\n    });\n  };\n\n  const handleCancelConfirmation = () => {\n    setShowCancelConfirmModal(true); // 취소 확인 모달 표시\n  };\n\n  const onFinish = async data => {\n    const formData = new FormData();\n    const albumInfo = {\n      iteacher: 1, // 이 값은 예시입니다. 실제 값으로 변경해주세요.\n      albumTitle: data.albumTitle,\n      albumContents: data.albumContents,\n      ialbum: pno,\n    };\n\n    // deletedPics 배열에 항목이 있는 경우에만 delPics 속성을 추가\n    if (deletedPics.length > 0) {\n      albumInfo.delPics = deletedPics;\n    }\n\n    const dto = new Blob([JSON.stringify(albumInfo)], {\n      type: \"application/json\",\n    });\n    formData.append(\"dto\", dto);\n\n    // 새로 추가된 이미지 파일이 있을 경우에만 pics 속성을 추가. 즉, pics를 아예 제외시키고 발송.\n    fileList.forEach(file => {\n      if (file.originFileObj) {\n        // 새로운 파일인 경우에만 추가\n        formData.append(\"pics\", file.originFileObj, file.name);\n      }\n    });\n\n    // 서버에 요청을 보냅니다.\n    try {\n      const response = await putAlbum({\n        product: formData,\n        successFn: handleSuccess,\n        failFn: handleFailure,\n        errorFn: handleError,\n      });\n\n      // 응답 처리\n      // console.log(\"Response from putAlbum:\", response);\n    } catch (error) {\n      handleError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchAlbumData = async () => {\n      getEditAlbum({\n        pno: pno,\n        successFn: data => {\n          // setAlbumData(data); // Set the album data in state\n          setAlbumData({ ...data });\n          setAlbumTitle(data.albumTitle);\n          setAlbumContents(data.albumContents);\n          // Update form fields with the album data\n          form.setFieldsValue({\n            albumTitle: data.albumTitle,\n            albumContents: data.albumContents,\n          });\n\n          // Transform album pictures for the fileList state\n          const newData = data.albumPic;\n          const transformedFileList = newData.map((albumPic, index) => ({\n            uid: albumPic.ialbumPic, // uid is required to be unique\n            name: albumPic.albumPic, // file name\n            status: \"done\", // upload status\n            url: `${imgpath}/${pno}/${albumPic.albumPic}`, // file URL, adjust the path as needed\n          }));\n          console.log(\"transformedFileList\", transformedFileList);\n          setFileList(transformedFileList);\n        },\n        failFn: errorMessage => {\n          console.error(\"Album fetch failed:\", errorMessage);\n          // Handle failure (show error message to user, etc.)\n        },\n        errorFn: errorData => {\n          console.error(\"Error fetching album:\", errorData);\n          // Handle error (show error message to user, etc.)\n        },\n      });\n    };\n\n    fetchAlbumData();\n  }, [pno, form]);\n  const beforeUpload = file => {\n    // 새로 업로드되는 파일을 fileList에 추가\n    const newFileList = [\n      ...fileList,\n      {\n        uid: file.uid, // 파일의 고유 ID\n        name: file.name, // 파일 이름\n        status: \"done\", // 파일 상태\n        originFileObj: file, // 파일 객체\n      },\n    ];\n    setFileList(newFileList);\n    return false; // 파일을 자동으로 업로드하지 않음\n  };\n\n  // 이미지 파일을 삭제할 때 호출될 함수\n  const handleRemove = file => {\n    console.log(\"file.uid\", typeof file.uid);\n    // 이미지 파일 리스트의 길이가 2개 이상일 때만 삭제 처리\n    if (fileList.length > 1) {\n      const newFileList = fileList.filter(item => item.uid !== file.uid);\n      setFileList(newFileList);\n      if (typeof file.uid === \"number\") {\n        setDeletedPics([...deletedPics, file.uid]);\n      }\n      return true; // 삭제 처리를 진행\n    } else {\n      // 이미지 파일이 1개만 남았을 경우, 경고 모달 표시\n      setIsMinimumWarningVisible(true);\n      return false; // 삭제 처리를 중지\n    }\n  };\n\n  return (\n    <AlbumWrap>\n      <PageTitle>활동앨범</PageTitle>\n      <Form ref={formRef} form={form} onFinish={onFinish}>\n        <WriteWrap>\n          <Form.Item\n            name=\"albumTitle\"\n            initialValue={albumData.albumTitle} // 기존 값 설정\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\n          >\n            <Input placeholder=\"제목 입력\" />\n          </Form.Item>\n          <Form.Item\n            name=\"albumContents\"\n            initialValue={albumData.albumContents} // 기존 값 설정\n            style={{ height: \"150px\" }}\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\n          >\n            <Input.TextArea\n              placeholder=\"내용 입력\"\n              style={{ height: \"150px\" }}\n            />\n          </Form.Item>\n          <FileListStyle>\n            <Upload.Dragger\n              action={`${path}`}\n              listType=\"picture\"\n              fileList={fileList}\n              beforeUpload={beforeUpload}\n              onRemove={handleRemove}\n              onChange={handleUploadChange}\n              customRequest={customRequest}\n              className=\"upload-list-inline\"\n              multiple={true}\n              style={uploadAreaStyle}\n              // onPreview={handlePreview}\n            >\n              <Button icon={<UploadOutlined />}>업로드 </Button>\n            </Upload.Dragger>\n          </FileListStyle>\n        </WriteWrap>\n        <BtnWrap right>\n          <GreenBtn type=\"button\" onClick={handleGreenButtonClick}>\n            수정\n          </GreenBtn>\n          <PinkBtn type=\"button\" onClick={handleCancelConfirmation}>\n            취소\n          </PinkBtn>\n        </BtnWrap>\n      </Form>\n      <ModalTwoBtn\n        isOpen={isEditConfirmModalVisible}\n        handleOk={handleEditConfirm}\n        handleCancel={handleEditCancel}\n        title=\"앨범 수정 확인\"\n        subTitle={`앨범을 수정하시겠습니까? \\n수정하신 내용은 되돌릴 수 없습니다.`}\n        maskClosable={false}\n      ></ModalTwoBtn>\n      {/* ModalTwoBtn 사용하여 취소 확인 모달 표시 */}\n      <ModalTwoBtn\n        isOpen={showCancelConfirmModal}\n        handleOk={() => {\n          setShowCancelConfirmModal(false); // 모달 닫기\n          navigate(\"/album\"); // 사용자를 앨범 목록 페이지로 이동\n        }}\n        handleCancel={() => {\n          setShowCancelConfirmModal(false); // 모달 닫기\n        }}\n        title=\"정말 취소하시겠습니까?\"\n        subTitle=\"수정 내용이 저장되지 않습니다.\"\n        maskClosable={false}\n      />\n      <Link to=\"/album\">\n        <ModalOneBtn\n          isOpen={isSuccessModalVisible}\n          handleOk={handleModalClose}\n          title=\"앨범 수정 완료\"\n          subTitle={`성공적으로 수정되었습니다. \\n 수정 내용을 확인하시려면 확인 버튼을 클릭해주세요.`}\n          maskClosable={false}\n        />\n        <ModalOneBtn\n          isOpen={isMinimumWarningVisible}\n          handleOk={handleCloseMinimumWarning}\n          title=\"이미지 파일 경고\"\n          subTitle={`최소 하나의 이미지파일은 업로드 되어야 합니다.`}\n          maskClosable={false}\n        />\n        {/* <Modal\n          title=\"수정 완료\"\n          open={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          okText=\"확인\"\n          cancelButtonProps={{ style: { display: \"none\" } }}\n          width={350}\n        >\n          <p>성공적으로 수정되었습니다.</p>\n        </Modal> */}\n      </Link>\n    </AlbumWrap>\n  );\n};\n\nexport default ModifyAlbum;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport ModifyAlbum from \"../../components/album/ModifyAlbum\";\nimport { getAlbum } from \"../../api/album/album_api\"; // 데이터를 가져오는 API 함수를 import\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst AlbumModify = () => {\n  const { pno } = useParams();\n  const [albumData, setAlbumData] = useState(null); // 앨범 데이터를 위한 상태\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\n  useEffect(() => {\n    // 데이터 가져오기\n    getAlbum({\n      pno: pno,\n      successFn: data => {\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\n      },\n      // 에러 처리는 필요에 따라 추가\n    });\n  }, [pno]);\n\n  return albumData ? (\n    <ModifyAlbum albumData={albumData} isLogin={isLogin} />\n  ) : null; // 데이터가 있을 때만 ModifyAlbum 렌더링\n};\n\nexport default AlbumModify;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","IMG_URL","imgpath","customRequest","onSuccess","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","ModifyAlbum","useParams","formRef","useRef","albumData","setAlbumData","useState","form","Form","useForm","fileList","setFileList","isModalVisible","setIsModalVisible","navigate","useNavigate","setAlbumTitle","setAlbumContents","albumPics","setAlbumPics","newPics","setNewPics","deletedPics","setDeletedPics","isEditConfirmModalVisible","setIsEditConfirmModalVisible","isSuccessModalVisible","setIsSuccessModalVisible","isMinimumWarningVisible","setIsMinimumWarningVisible","isNoChangeWarningVisible","setIsNoChangeWarningVisible","showCancelConfirmModal","setShowCancelConfirmModal","handleSuccess","handleFailure","errorMessage","Modal","title","content","handleError","useEffect","setFieldsValue","transformedFileList","map","index","uid","ialbumPic","name","url","errorData","fetchAlbumData","_jsxs","AlbumWrap","children","_jsx","PageTitle","ref","onFinish","formData","FormData","albumInfo","length","delPics","dto","Blob","JSON","stringify","type","append","forEach","file","originFileObj","message","WriteWrap","Item","initialValue","rules","required","Input","placeholder","style","height","TextArea","FileListStyle","Upload","Dragger","action","listType","beforeUpload","newFileList","onRemove","filter","item","onChange","newUploadedPics","className","multiple","lineHeight","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleGreenButtonClick","PinkBtn","handleCancelConfirmation","ModalTwoBtn","isOpen","handleOk","handleEditConfirm","current","submit","handleCancel","handleEditCancel","subTitle","maskClosable","Link","to","ModalOneBtn","handleModalClose","e","stopPropagation","AlbumModify","isLogin","useCustomLogin","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","_templateObject15"],"sourceRoot":""}