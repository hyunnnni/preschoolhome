{"version":3,"file":"static/js/557.08d0941b.chunk.js","mappings":"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","sources":["pages/user/Accounts.js","styles/ui/buttons.js","styles/user/login.js"],"sourcesContent":["import React from \"react\";\r\nimport { FormWrap } from \"../../styles/user/login\";\r\nimport { ContentInner, LogoWrap } from \"../../styles/basic\";\r\nimport { Form, Input } from \"antd\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Accounts = () => {\r\n  const navigate = useNavigate();\r\n  const onFinish = values => {\r\n    console.log(\"Success:\", values);\r\n    navigate(\"/user/signup\");\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <ContentInner>\r\n      <FormWrap>\r\n        <LogoWrap>\r\n          <h3>식별코드 입력</h3>\r\n          <p>식별코드를 입력해주세요.</p>\r\n        </LogoWrap>\r\n        <Form\r\n          name=\"account\"\r\n          style={{\r\n            maxWidth: 600,\r\n          }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"code\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"식별코드를 입력해주세요. (15글자)\",\r\n                max: 15,\r\n              },\r\n            ]}\r\n          >\r\n            <Input size=\"large\" placeholder=\"코드입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <GreenBtn htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n              확인\r\n            </GreenBtn>\r\n          </Form.Item>\r\n        </Form>\r\n      </FormWrap>\r\n    </ContentInner>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors } from \"../basic\";\r\n\r\nexport const FormWrap = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 3rem 5rem;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  ${boxStyle}\r\n  background:#fafafa;\r\n  border: 1px solid #f1f1f1;\r\n  h3 {\r\n    text-align: center;\r\n    color: ${colors.greenDeep};\r\n  }\r\n  p {\r\n    margin-top: 2rem;\r\n  }\r\n  a {\r\n    float: right;\r\n    color: ${colors.grayDeep};\r\n    &:hover {\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .ant-form-item .ant-form-item-explain-error {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const PrivacyWrap = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n  padding: 2rem;\r\n  margin: 3rem 0;\r\n  font-size: 1.3rem;\r\n  div {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n"],"names":["Accounts","navigate","useNavigate","_jsx","ContentInner","children","_jsxs","FormWrap","LogoWrap","Form","name","style","maxWidth","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","rules","required","message","max","Input","size","placeholder","GreenBtn","htmlType","width","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","OrangeBtn","_templateObject3","orangeLight","orangeDeep","PinkBtn","_templateObject4","pinkLight","pinkDeep","BlueBtn","_templateObject5","blueLight","blueDeep","PurpleBtn","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","GrayBtn","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","AllBtn","_templateObject12","Modal","_templateObject13","boxStyle","black","PrivacyWrap"],"sourceRoot":""}