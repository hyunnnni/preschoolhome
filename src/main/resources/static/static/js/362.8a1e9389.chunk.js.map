{"version":3,"file":"static/js/362.8a1e9389.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","api/notice/notice_api.js","components/user/MyClass.js","components/individualNotice/IndWriteComponent.js","pages/individualNotice/IndivNotiWrite.js","styles/album/album.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}&fromTo=${fromTo}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&fromTo=${fromTo}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/tea`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data\", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정시 정보 조회하기\r\nexport const editNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../styles/basic\";\r\n\r\nconst MyClass = ({ state }) => {\r\n  const ClassTitle = styled.div`\r\n    h3 {\r\n      padding-left: 3.2rem;\r\n      background-repeat: no-repeat;\r\n      background-position: left center;\r\n      background-size: 2.8rem;\r\n\r\n      &.hibiscus {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_hibiscus.svg\"});\r\n        color: #ff73a1;\r\n      }\r\n      &.sunflower {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_sunflower.svg\"});\r\n        color: ${colors.orangeDeep};\r\n      }\r\n      &.rose {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_rose.svg\"});\r\n        color: #f5062c;\r\n      }\r\n      &.discharge {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_bag.svg\"});\r\n        color: ${colors.grayDeep};\r\n      }\r\n      &.graduation {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_graduation.svg\"});\r\n        color: ${colors.black};\r\n      }\r\n      &.none {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n  `;\r\n  return (\r\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\r\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\r\n    <>\r\n      <ClassTitle>\r\n        <h3\r\n          className={\r\n            state === 1\r\n              ? \"hibiscus\"\r\n              : state === 2\r\n              ? \"sunflower\"\r\n              : state === 3\r\n              ? \"rose\"\r\n              : state === -1\r\n              ? \"discharge\"\r\n              : state === -2\r\n              ? \"graduation\"\r\n              : \"none\"\r\n          }\r\n        >\r\n          {state === 1\r\n            ? \"무궁화반\"\r\n            : state === 2\r\n            ? \"해바라기반\"\r\n            : state === 3\r\n            ? \"장미반\"\r\n            : state === -1\r\n            ? \"퇴소\"\r\n            : state === -2\r\n            ? \"졸업\"\r\n            : \"지정된 반이 없습니다.\"}\r\n        </h3>\r\n      </ClassTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyClass;\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport { postNotice } from \"../../api/notice/notice_api\";\r\nimport { FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { postIndNotice } from \"../../api/individualNotice/indivNoticeApi\";\r\nimport MyClass from \"../user/MyClass\";\r\n\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\nconst IndWriteComponent = () => {\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  // 현재 kid 값 체크\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const iclass = parseInt(serchParams.get(\"iclass\"));\r\n  const kidNm = serchParams.get(\"kidNm\");\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const navigate = useNavigate();\r\n\r\n  const formRef = useRef(); // Form 컴포넌트에 대한 ref 생성\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n  };\r\n\r\n  const onChange = e => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].filter(file => !!file.status);\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    navigate(`/ind?year=2024&page=1&iclass=0`);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: () => handleCancelOk(),\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    console.log(\"fileList\", fileList);\r\n    console.log(\"fullNoticeFix\", fullNoticeFix); // 확인용 로그\r\n\r\n    const formData = new FormData();\r\n\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          ikid: ikid,\r\n          noticeTitle: data.noticeTitle,\r\n          noticeContents: data.noticeContents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postIndNotice({\r\n      product: formData,\r\n      successFn: handleSuccess,\r\n      failFn: handleFail,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancelOk = res => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\r\n    navigate(`/ind?year=2024&page=1&iclass=0`);\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsModalVisible(true);\r\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\r\n  };\r\n\r\n  const handleFail = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"알림장 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"알림장 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"알림장 업로드 중 오류 발생\",\r\n      content: error,\r\n    });\r\n  };\r\n\r\n  console.log(iclass);\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>알림장</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 600,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"1rem\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"2rem\",\r\n          }}\r\n        >\r\n          <MyClass state={iclass} />\r\n          <h4 style={{ color: \"#555\" }}>{kidNm}</h4>\r\n        </div>\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"noticeTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"noticeContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              // maxCount={3}\r\n              multiple={true}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n        <div\r\n          style={{\r\n            marginTop: 35,\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <GreenBtn onClick={handleGreenButtonClick}>등록</GreenBtn>\r\n          <PinkBtn\r\n            onClick={handleCancelConfirmation}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            취소\r\n          </PinkBtn>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/ind?year=2024&page=1&iclass=0\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndWriteComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport IndWriteComponent from \"../../components/individualNotice/IndWriteComponent\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst IndivNotiWrite = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin || isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"관리자 전용 페이지\");\r\n      setSubTitle(\"관리자만 접근 가능합니다.\");\r\n    } else {\r\n      // 다른 상황에 대한 처리가 필요한 경우 여기에 추가\r\n      // 예를 들어, 기본 오류 메시지 설정 등\r\n      // setTitle(\"에러\");\r\n      // setSubTitle(\"리스트를 불러오는 중 오류가 발생했습니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && isParentLogin) {\r\n      navigate(\"/\"); // 메인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <IndWriteComponent isLogin={isLogin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndivNotiWrite;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","fromTo","search","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","_ref6","delete","getIndDetail","_ref7","getDetail","console","log","getList","postNotice","deleteNotice","_ref4","putNotice","_ref5","put","editNotice","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_jsx","_Fragment","children","className","IndWriteComponent","serchParams","setSearchParams","useSearchParams","parseInt","kidNm","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","fullNoticeFix","setFullNoticeFix","navigate","useNavigate","formRef","useRef","handleCancelOk","handleSuccess","handleFail","errorMessage","Modal","title","content","handleError","_jsxs","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","display","gap","alignItems","marginBottom","MyClass","color","ref","onFinish","formData","FormData","dto","Blob","JSON","stringify","noticeTitle","noticeContents","type","append","forEach","file","originFileObj","Item","name","rules","required","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","filter","customRequest","onSuccess","multiple","Button","icon","UploadOutlined","justifyContent","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","confirm","onOk","okText","cancelText","onCancel","marginLeft","Link","to","open","handleOk","handleCancel","cancelButtonProps","IndivNotiWrite","isLogin","isParentLogin","useCustomLogin","isOpen","setIsOpen","setTitle","subTitle","setSubTitle","useEffect","ModalOneBtn","AlbumWrap","props","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","WriteWrap","_templateObject15"],"sourceRoot":""}