{"version":3,"file":"static/js/8765.9e422e16.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","components/common/Comment.js","hooks/useCustomLogin.js","components/individualNotice/IndivDetailsComponent.js","pages/individualNotice/IndivNotiDetails.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteNotice = async ({ ikid, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${ikid}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MessageBox, Input, Button } from \"react-chat-elements\";\r\nimport \"react-chat-elements/dist/main.css\";\r\nimport { colors, fonts } from \"../../styles/basic\";\r\nimport { CommentWrap } from \"../../styles/album/album\";\r\n\r\nconst Comment = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (message) {\r\n      const newComment = {\r\n        title: `선생님`,\r\n        position: \"left\",\r\n        type: \"text\",\r\n        text: message,\r\n        date: new Date(),\r\n      };\r\n      setComments([...comments, newComment]);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [comments]);\r\n\r\n  return (\r\n    <CommentWrap>\r\n      <div>\r\n        {comments.map((comment, index) => (\r\n          <MessageBox\r\n            lockable={true}\r\n            key={index}\r\n            position={comment.title === \"선생님\" ? \"left\" : \"right\"}\r\n            type={\"text\"}\r\n            text={comment.text}\r\n            title={comment.title}\r\n            date={comment.date}\r\n            dateString={comment.date.toLocaleTimeString()}\r\n            dataSource={[\r\n              {\r\n                avatar: \"https://avatars.githubusercontent.com/u/80540635?v=4\",\r\n                unread: 3,\r\n              },\r\n            ]}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef}></div>\r\n      </div>\r\n      <Input\r\n        inputStyle={{\r\n          fontFamily: `${fonts.kotraHope}`,\r\n          fontSize: \"1.5rem\",\r\n          minheight: \"3rem\",\r\n          color: `${colors.grayDeep}`,\r\n        }}\r\n        placeholder=\"내용을 입력하세요...\"\r\n        color={`colors.orangeLight`}\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n        onKeyPress={e => {\r\n          if (e.key === \"Enter\") {\r\n            handleSendMessage();\r\n          }\r\n        }}\r\n        rightButtons={\r\n          <Button\r\n            color={`${colors.orangeLight}`}\r\n            backgroundColor={`${colors.orangeDeep}`}\r\n            text=\"발송\"\r\n            onClick={handleSendMessage}\r\n          />\r\n        }\r\n      />\r\n    </CommentWrap>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-cube\";\r\nimport \"swiper/css/pagination\";\r\n\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AlbumTitle,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  ContentWrap,\r\n  DetailsText,\r\n  Footer,\r\n  MainContent,\r\n  TitleWrap,\r\n  SwiperWrap,\r\n} from \"../../styles/album/album\";\r\nimport Comment from \"../common/Comment\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport {\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nconst path = `${IMG_URL}/pic/notice`;\r\n\r\nconst host = `${SERVER_URL}/notice`;\r\n// import required modules\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst IndivDetailsComponent = ({ pno }) => {\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 현재 출력 년도, kid 값 params에서 체크\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n  const iclass = serchParams.get(\"iclass\");\r\n\r\n  // 로그인 체크\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [parentList, setParentList] = useState(null);\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [myData, setMyData] = useState(null);\r\n\r\n  // 컴포넌트 마운트 시 데이터 불러오기\r\n  console.log(\"pno\", pno);\r\n  // 데이터 화면출력, 로그인체크\r\n  useEffect(() => {\r\n    if (isParentLogin) {\r\n      // 학부모 로그인\r\n      if (ikid === \"0\") {\r\n        // 연결된 아이가 없을경우\r\n        setTitle(\"연결 오류\");\r\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\r\n        setIsNavigate(-1);\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n      getIndParentList({ page, year, ikid, errorFn, successFn });\r\n    } else if (isLogin) {\r\n      // 선생님 로그인\r\n      getIndTeacherList({ page, year, iclass, errorFn, successFn });\r\n    } else {\r\n      // 로그인 안했을때\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  }, [year, ikid, iclass, page]);\r\n\r\n  // 데이터연동 성공\r\n  const successFn = result => {\r\n    setMyData(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"조회 실패\");\r\n    setSubTitle(result);\r\n  };\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = () => {\r\n    console.log(\"delete\");\r\n    //   setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\r\n\r\n    //   deleteAlbum({\r\n    //     ialbum: pno,\r\n    //     successFn: res => {\r\n    //       // 삭제 성공 시 처리\r\n    //       console.log(\"Album deleted:\", res);\r\n    //       setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\r\n\r\n    //       // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\r\n    //       setTimeout(() => {\r\n    //         setIsDeleteSuccessModalOpen(false);\r\n    //         navigate(\"/album\");\r\n    //       }, 2000);\r\n    //     },\r\n    //     failFn: error => {\r\n    //       // 삭제 실패 시 처리\r\n    //       Modal.error({\r\n    //         title: \"앨범 삭제 실패\",\r\n    //         content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\r\n    //       });\r\n    //     },\r\n    //     errorFn: error => {\r\n    //       console.error(\"Error deleting album:\", error);\r\n    //       Modal.error({\r\n    //         title: \"오류 발생\",\r\n    //         content:\r\n    //           \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\r\n    //       });\r\n    //     },\r\n    //   });\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteSuccessOk = () => {\r\n    setIsDeleteSuccessModalOpen(false);\r\n  };\r\n\r\n  console.log(\"albumData\", albumData);\r\n  return (\r\n    <AlbumWrap paddingTop={40}>\r\n      <AlbumTopBar padding={1}>\r\n        <AlbumTitle>알림장 - 상세</AlbumTitle>\r\n      </AlbumTopBar>\r\n      <ContentWrap>\r\n        <TitleWrap>\r\n          <h3>{albumData.albumTitle}</h3>\r\n          <p>{albumData.createdAt}</p>\r\n        </TitleWrap>\r\n        <MainContent>\r\n          <DetailsText>\r\n            <p>{albumData.albumContents}</p>\r\n          </DetailsText>\r\n          <Comment />\r\n        </MainContent>\r\n        {/* 삭제 모달 */}\r\n        <Modal\r\n          title=\"정말 삭제할까요?\"\r\n          open={isDeleteModalOpen}\r\n          onOk={handleDeleteOk}\r\n          onCancel={handleDeleteCancel}\r\n          okText=\"확인\"\r\n          cancelText=\"취소\"\r\n        >\r\n          <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n        </Modal>\r\n\r\n        {/* 삭제 성공 모달 */}\r\n        <Modal\r\n          title=\"삭제 완료\"\r\n          open={isDeleteSuccessModalOpen}\r\n          onOk={handleDeleteSuccessOk}\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          okText=\"확인\"\r\n        >\r\n          <p>삭제가 완료되었습니다.</p>\r\n        </Modal>\r\n        <Footer>\r\n          <Link to=\"/album\">\r\n            <GreenBtn>목록보기</GreenBtn>\r\n          </Link>\r\n          {isLogin ? (\r\n            <>\r\n              <Link to={`${host}/modify/${pno}`}>\r\n                <BlueBtn>수정</BlueBtn>\r\n              </Link>\r\n              <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n            </>\r\n          ) : null}\r\n        </Footer>\r\n      </ContentWrap>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default IndivDetailsComponent;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport IndivDetailsComponent from \"../../components/individualNotice/IndivDetailsComponent\";\r\n\r\nconst IndivNotiDetails = () => {\r\n  let { pno } = useParams();\r\n  // 로그인 상태에서 iteacher 값을 확인합니다.\r\n  return <IndivDetailsComponent pno={pno} />;\r\n};\r\n\r\nexport default IndivNotiDetails;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  margin-bottom: 9rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","Comment","comments","setComments","useState","setMessage","messagesEndRef","useRef","handleSendMessage","newComment","title","position","type","text","date","Date","useEffect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsxs","CommentWrap","children","map","comment","index","_jsx","MessageBox","lockable","dateString","toLocaleTimeString","dataSource","avatar","unread","ref","Input","inputStyle","fontFamily","fonts","kotraHope","fontSize","minheight","color","colors","grayDeep","placeholder","value","onChange","e","target","onKeyPress","key","rightButtons","Button","orangeLight","backgroundColor","orangeDeep","onClick","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","console","log","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","IMG_URL","host","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","pno","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","serchParams","setSearchParams","useSearchParams","parentList","setParentList","albumData","setAlbumData","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","myData","setMyData","result","AlbumWrap","paddingTop","AlbumTopBar","padding","AlbumTitle","ContentWrap","TitleWrap","MainContent","DetailsText","Modal","open","onOk","handleDeleteOk","onCancel","handleDeleteCancel","okText","cancelText","handleDeleteSuccessOk","cancelButtonProps","style","display","Footer","Link","GreenBtn","_Fragment","BlueBtn","PinkBtn","showDeleteModal","IndivNotiDetails","useParams","IndivDetailsComponent","styled","div","_templateObject","_taggedTemplateLiteral","props","width","height","grayLight","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","pretendard","black","SwiperWrap","_templateObject6","_templateObject7","greenDeep","h3","_templateObject8","_templateObject9","grayBar","_templateObject10","_templateObject11","_templateObject12","_templateObject13","FileListStyle","_templateObject14","defaultBtnStyle","background","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","pinkLight","pinkDeep","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn"],"sourceRoot":""}