{"version":3,"file":"static/js/520.14518f94.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","hooks/useCustomLogin.js","components/notice/DetailsNotice.js","pages/notice/NoticeDetails.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { deleteNotice, getDetail } from \"../../api/notice/notice_api\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport \"../../styles/notice/gallery.css\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nconst path = `${IMG_URL}/pic/fullnotice`;\r\nexport const obj = {\r\n  pics: [\"\"],\r\n  dto: {\r\n    ifullNotice: 0,\r\n    fullTitle: \"\",\r\n    fullContents: \"\",\r\n    fullNoticeFix: 0,\r\n    iteacher: 0,\r\n  },\r\n};\r\n\r\nconst DetailsNotice = ({ isLogin }) => {\r\n  const params = useSearchParams();\r\n  const slideInterval = 1700;\r\n\r\n  const [postNumber, setPostNumber] = useState(0);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [detailData, setDetailData] = useState(obj);\r\n  const [detailImage, setDetailImage] = useState([]);\r\n  const { tno } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = async () => {\r\n    try {\r\n      await deleteNotice({\r\n        tno,\r\n        successFn: () => {\r\n          navigate(\"/notice\");\r\n        },\r\n        failFn: error => {\r\n          console.error(\"삭제실패:\", error);\r\n        },\r\n        errorFn: error => {\r\n          console.error(\"삭제 에러:\", error);\r\n          // 에러 시, 필요한 처리를 추가할 수 있습니다.\r\n        },\r\n      });\r\n      setIsDeleteModalOpen(false);\r\n    } catch (error) {\r\n      console.error(\"삭제 처리 중 에러 발생:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const successFn = result => {\r\n    setDetailData(result);\r\n    const pics = result.pics;\r\n    // console.log(\"사진 경로\", pics);\r\n    const newImages = pics.map((pic, index) => ({\r\n      original: `${path}/${tno}/` + pic.pic,\r\n      thumbnail: `${path}/${tno}/` + pic.pic,\r\n    }));\r\n\r\n    setDetailImage(prevDetailImage => [...prevDetailImage, ...newImages]);\r\n    setPostNumber(pics.length); // 이미지 번호를 1부터 시작하도록 수정\r\n  };\r\n\r\n  // console.log(\"!!!!\", detailImage);\r\n  const failFn = result => {};\r\n  const errorFn = result => {};\r\n  useEffect(() => {\r\n    getDetail({ tno, successFn, failFn, errorFn });\r\n  }, [tno]);\r\n  // console.log(detailData);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>유치원 소식</PageTitle>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderTop: \"1.5px solid #00876D\",\r\n            borderBottom: \"1.5px solid #00876D\",\r\n            width: \"100%\",\r\n            background: \"white\",\r\n            textAlign: \"center\",\r\n            paddingTop: 20,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"auto\" }}>\r\n              <p style={{ margin: 0, fontSize: 27 }}>{detailData.fullTitle}</p>\r\n            </div>\r\n            <p style={{ marginRight: 20, fontSize: 15, color: \"#999\" }}>\r\n              {detailData.createdAt}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              borderTop: \"1.5px solid #DDDDDD\",\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            <div\r\n              key={postNumber}\r\n              style={{ margin: 40, maxWidth: 500, display: \"inline-block\" }}\r\n            >\r\n              {detailData.pics.length >= 1 ? (\r\n                <ImageGallery\r\n                  items={detailImage}\r\n                  thumbnailPosition=\"left\"\r\n                  slideInterval={slideInterval}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <p style={{ margin: 30, textAlign: \"center\", fontSize: 20 }}>\r\n            {detailData.fullContents}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <div style={{ marginRight: 10 }}>\r\n            <Link to=\"/notice\">\r\n              <GreenBtn>목록보기</GreenBtn>\r\n            </Link>\r\n          </div>\r\n          {isLogin ? (\r\n            <>\r\n              <div style={{ marginRight: 10 }}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/notice/modify/${tno}`,\r\n                    state: {\r\n                      detailData: detailData,\r\n                    },\r\n                  }}\r\n                >\r\n                  <BlueBtn>수정</BlueBtn>\r\n                </Link>\r\n              </div>\r\n\r\n              <div>\r\n                {isLogin ? (\r\n                  <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n                ) : null}\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 삭제 모달 */}\r\n      <Modal\r\n        title=\"정말 삭제할까요?\"\r\n        open={isDeleteModalOpen}\r\n        onOk={handleDeleteOk}\r\n        onCancel={handleDeleteCancel}\r\n        okText=\"확인\"\r\n        cancelText=\"취소\"\r\n      >\r\n        <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsNotice;\r\n","import React from \"react\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport DetailsNotice from \"../../components/notice/DetailsNotice\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport \"../../styles/notice/gallery.css\";\r\n\r\nconst NoticeDetails = () => {\r\n  const { isLogin } = useCustomLogin();\r\n\r\n  return <DetailsNotice isLogin={isLogin} />;\r\n};\r\n\r\nexport default NoticeDetails;\r\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","_jsx","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","IMG_URL","obj","pics","dto","ifullNotice","fullTitle","fullContents","fullNoticeFix","iteacher","useSearchParams","postNumber","setPostNumber","useState","isDeleteModalOpen","setIsDeleteModalOpen","detailData","setDetailData","detailImage","setDetailImage","useParams","result","newImages","map","pic","index","original","thumbnail","prevDetailImage","length","useEffect","_jsxs","_Fragment","children","PageTitle","style","display","flexDirection","alignItems","marginTop","borderTop","borderBottom","width","background","textAlign","paddingTop","justifyContent","margin","fontSize","marginRight","color","createdAt","maxWidth","ImageGallery","items","thumbnailPosition","slideInterval","Link","GreenBtn","BlueBtn","PinkBtn","onClick","showDeleteModal","Modal","title","open","onOk","onCancel","handleDeleteCancel","okText","cancelText","NoticeDetails","DetailsNotice"],"sourceRoot":""}