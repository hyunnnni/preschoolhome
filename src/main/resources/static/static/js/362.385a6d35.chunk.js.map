{"version":3,"file":"static/js/362.385a6d35.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","components/individualNotice/IndWriteComponent.js","pages/individualNotice/IndivNotiWrite.js","styles/album/album.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}&fromTo=${fromTo}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&fromTo=${fromTo}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 리스트(원아)\r\nexport const getIndchildrenList = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/tag`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/tea`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal, Upload, TreeSelect, Checkbox } from \"antd\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport {\r\n  getIndchildrenList,\r\n  postIndNotice,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport { FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\nconst IndWriteComponent = () => {\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [treeData, setTreeData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [noticeCheck, setNoticeCheck] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchChildrenList();\r\n  }, []);\r\n\r\n  const fetchChildrenList = async () => {\r\n    try {\r\n      const response = await getIndchildrenList({\r\n        product: {}, // 필요한 경우에는 요청에 필요한 데이터를 여기에 전달하세요\r\n        successFn: handleChildrenListSuccess,\r\n        failFn: handleChildrenListFail,\r\n        errorFn: handleChildrenListError,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching children list:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChildrenListSuccess = data => {\r\n    const groupedData = groupChildrenByClass(data);\r\n    const treeData = groupedData.map(classItem => ({\r\n      title: getClassTitle(classItem.classNumber),\r\n      value: classItem.classNumber,\r\n      key: classItem.classNumber,\r\n      children: classItem.children.map(child => ({\r\n        title: child.kidNm,\r\n        value: child.ikid,\r\n        key: child.ikid,\r\n      })),\r\n    }));\r\n    setTreeData(treeData);\r\n  };\r\n\r\n  const getClassTitle = classNumber => {\r\n    switch (classNumber) {\r\n      case 1:\r\n        return \"무궁화반\";\r\n      case 2:\r\n        return \"해바라기반\";\r\n      case 3:\r\n        return \"장미반\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    setNoticeCheck(e.target.checked);\r\n  };\r\n\r\n  const handleChildrenListFail = errorMessage => {\r\n    console.error(\"Failed to fetch children list:\", errorMessage);\r\n    // 실패했을 때 적절한 처리를 수행하세요\r\n  };\r\n\r\n  const handleChildrenListError = error => {\r\n    console.error(\"Error while fetching children list:\", error);\r\n    // 에러가 발생했을 때 적절한 처리를 수행하세요\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit();\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].filter(file => !!file.status);\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          ikid: ikid,\r\n          noticeTitle: data.noticeTitle,\r\n          noticeContents: data.noticeContents,\r\n          noticeCheck: noticeCheck ? 1 : 0,\r\n        }),\r\n      ],\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n    fileList.forEach(file => {\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    postIndNotice({\r\n      product: formData,\r\n      successFn: handleSuccess,\r\n      failFn: handleFail,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancelOk = () => {\r\n    navigate(`/ind?year=2024&page=1&iclass=0`);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleFail = errorMessage => {\r\n    Modal.error({\r\n      title: \"알림장 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"알림장 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"알림장 업로드 중 오류 발생\",\r\n      content: error,\r\n    });\r\n  };\r\n\r\n  const groupChildrenByClass = children => {\r\n    const grouped = children.reduce((acc, child) => {\r\n      const { iclass } = child;\r\n      if (!acc[iclass]) {\r\n        acc[iclass] = [];\r\n      }\r\n      acc[iclass].push(child);\r\n      return acc;\r\n    }, {});\r\n    return Object.keys(grouped).map(classNumber => ({\r\n      classNumber: parseInt(classNumber),\r\n      children: grouped[classNumber],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>알림장</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 600,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginBottom: \"2rem\",\r\n          }}\r\n        >\r\n          <TreeSelect\r\n            style={{ width: \"100%\" }}\r\n            treeData={treeData}\r\n            placeholder=\"유치원생 선택\"\r\n            treeCheckable={true}\r\n            showCheckedStrategy={TreeSelect.SHOW_PARENT}\r\n            onChange={value => console.log(value)}\r\n          />\r\n        </div>\r\n        <Checkbox onChange={onChange} style={{ marginBottom: 10 }}>\r\n          중요\r\n        </Checkbox>\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"noticeTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"noticeContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n        <div\r\n          style={{\r\n            marginTop: 35,\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <GreenBtn onClick={handleGreenButtonClick}>등록</GreenBtn>\r\n          <PinkBtn\r\n            onClick={() => setIsModalVisible(true)}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            취소\r\n          </PinkBtn>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/ind?year=2024&page=1&iclass=0\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          visible={isModalVisible}\r\n          onOk={handleCancelOk}\r\n          onCancel={() => setIsModalVisible(false)}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndWriteComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport IndWriteComponent from \"../../components/individualNotice/IndWriteComponent\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst IndivNotiWrite = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin || isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"관리자 전용 페이지\");\r\n      setSubTitle(\"관리자만 접근 가능합니다.\");\r\n    } else {\r\n      // 다른 상황에 대한 처리가 필요한 경우 여기에 추가\r\n      // 예를 들어, 기본 오류 메시지 설정 등\r\n      // setTitle(\"에러\");\r\n      // setSubTitle(\"리스트를 불러오는 중 오류가 발생했습니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && isParentLogin) {\r\n      navigate(\"/\"); // 메인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <IndWriteComponent isLogin={isLogin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndivNotiWrite;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","fromTo","search","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","getIndchildrenList","product","_ref3","postIndNotice","_ref4","header","headers","post","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","_ref7","delete","getIndDetail","_ref8","IndWriteComponent","serchParams","setSearchParams","useSearchParams","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","treeData","setTreeData","navigate","useNavigate","noticeCheck","setNoticeCheck","useEffect","fetchChildrenList","handleChildrenListSuccess","handleChildrenListFail","handleChildrenListError","console","groupChildrenByClass","map","classItem","title","getClassTitle","classNumber","value","key","children","child","kidNm","errorMessage","formRef","useRef","handleSuccess","handleFail","Modal","content","handleError","grouped","reduce","acc","push","Object","keys","parseInt","_jsxs","_jsx","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","marginBottom","TreeSelect","placeholder","treeCheckable","showCheckedStrategy","SHOW_PARENT","onChange","log","Checkbox","e","target","checked","ref","onFinish","formData","FormData","dto","Blob","JSON","stringify","noticeTitle","noticeContents","type","append","forEach","file","originFileObj","Item","name","rules","required","Input","TextArea","FileListStyle","Upload","Dragger","action","listType","info","filter","customRequest","onSuccess","className","multiple","Button","icon","UploadOutlined","display","justifyContent","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","marginLeft","Link","to","visible","onOk","handleCancelOk","onCancel","okText","cancelButtonProps","IndivNotiWrite","isLogin","isParentLogin","useCustomLogin","isOpen","setIsOpen","setTitle","subTitle","setSubTitle","_Fragment","ModalOneBtn","handleOk","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","WriteWrap","_templateObject15"],"sourceRoot":""}