{"version":3,"file":"static/js/405.a4175eeb.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","components/main/MainAlbumComponent.js","components/common/TemporaryData.js","components/main/MainVisualComponent.js","components/main/MainNoticeComponent.js","components/main/MainBannerComponent.js","components/main/MainPopComponent.js","api/mainApi.js","pages/Main.js","styles/main.js","styles/ui/buttons.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  MainAlbum,\r\n  MainAlbumImage,\r\n  MainAlbumList,\r\n  MainAlbumText,\r\n} from \"../../styles/main\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst MainAlbumComponent = ({ albumDate }) => {\r\n  // 로그인 체크\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  useEffect(() => {\r\n    // 배열 거꾸로 순서변경\r\n    if (Array.isArray(albumDate)) {\r\n      albumDate.reverse();\r\n    }\r\n  }, []);\r\n  return (\r\n    <MainAlbum>\r\n      <PageTitle>\r\n        <Link to=\"/album\">활동앨범</Link>\r\n      </PageTitle>\r\n      <MainAlbumList>\r\n        {albumDate[0].ialbum === 0 ? (\r\n          <div style={{ textAlign: \"center\", marginTop: \"5rem\" }}>\r\n            게시글이 없습니다.\r\n          </div>\r\n        ) : (\r\n          Array.isArray(albumDate) &&\r\n          albumDate.map(item => {\r\n            return (\r\n              <li key={item.ialbum}>\r\n                <Link to={`/album/details/${item.ialbum}`}>\r\n                  <MainAlbumImage>\r\n                    <img\r\n                      src={`${IMG_URL}/pic/album/${item.ialbum}/${item.albumPic}`}\r\n                    />\r\n                    {!isLogin && !isParentLogin ? <div></div> : null}\r\n                  </MainAlbumImage>\r\n                  <MainAlbumText>\r\n                    <b>{item.albumTitle}</b>\r\n                    <p>{item.albumContents}</p>\r\n                    <span>{item.createdAt}</span>\r\n                  </MainAlbumText>\r\n                </Link>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </MainAlbumList>\r\n    </MainAlbum>\r\n  );\r\n};\r\n\r\nexport default MainAlbumComponent;\r\n","export const commentList = [\r\n  { user: \"love_penguin\", content: \"감기 조심해!!\" },\r\n  { user: \"love_penguin2\", content: \"오늘 진짜 너무 춥다 ㅠㅠ\" },\r\n  { user: \"love_penguin3\", content: \"내일이 월요일이라니 끔찍해\" },\r\n];\r\n\r\nexport const VisualPopImage = [\r\n  \"/images/main/main_pop.jpg\",\r\n  \"/images/main/main_pop.jpg\",\r\n];\r\n\r\nexport const VisualImage = [\r\n  \"/images/main/main_visual01.jpg\",\r\n  \"/images/main/main_visual02.jpg\",\r\n];\r\n\r\nexport const NoticeDate = [\r\n  {\r\n    ifull_notice: 1,\r\n    full_title: \"첫번째제목입니다.\",\r\n    created_at: \"2024-01-10\",\r\n  },\r\n  {\r\n    ifull_notice: 2,\r\n    full_title: \"두번째제목입니다.\",\r\n    created_at: \"2024-01-20\",\r\n  },\r\n  {\r\n    ifull_notice: 3,\r\n    full_title: \"세번째제목입니다.\",\r\n    created_at: \"2024-01-22\",\r\n  },\r\n];\r\n\r\nexport const AlbumDate = [\r\n  {\r\n    ialbum: 1,\r\n    album_title:\r\n      \"첫번째제목입니다.첫번째제목입니다.첫번째제목입니다.첫번째제목입니다.첫번째제목입니다.첫번째제목입니다.\",\r\n    album_content:\r\n      \"활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용\",\r\n    album_pic: \"/images/main/album/main_album01.jpg\",\r\n    create_at: \"2024-00-00\",\r\n  },\r\n  {\r\n    ialbum: 2,\r\n    album_title:\r\n      \"두번째제목입니다.두번째제목입니다.두번째제목입니다.두번째제목입니다.두번째제목입니다.두번째제목입니다.\",\r\n    album_content:\r\n      \"활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용\",\r\n    album_pic: \"/images/main/album/main_album01.jpg\",\r\n    create_at: \"2024-00-00\",\r\n  },\r\n  {\r\n    ialbum: 3,\r\n    album_title:\r\n      \"세번째제목입니다.세번째제목입니다.세번째제목입니다.세번째제목입니다.세번째제목입니다.세번째제목입니다.\",\r\n    album_content:\r\n      \"활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용활동앨범 내용 활동앨범 내용 활동앨범 내용\",\r\n    album_pic: \"/images/main/album/main_album01.jpg\",\r\n    create_at: \"2024-00-00\",\r\n  },\r\n];\r\n\r\nexport const NoticeImageData = [\r\n  {\r\n    original: \"/images/main/album/main_album01.jpg\",\r\n    thumbnail: \"/images/main/album/main_album01.jpg\",\r\n  },\r\n  {\r\n    original: \"/images/main/album/main_album02.jpg\",\r\n    thumbnail: \"/images/main/album/main_album02.jpg\",\r\n  },\r\n  {\r\n    original: \"/images/main/album/main_album03.jpg\",\r\n    thumbnail: \"/images/main/album/main_album03.jpg\",\r\n  },\r\n];\r\n\r\n// 대체할 이미지 데이터 배열\r\n// const AlbumData = [...Array(30).keys()].map((id) => ({\r\n//   src: `https://placeimg.com/640/480/any?id=${id}`, // 임의의 이미지 URL\r\n//   title: `이미지 ${id + 1}`\r\n// }));\r\n\r\nexport const AlbumData = [\r\n  [\r\n    {\r\n      ialbum: 1,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 2,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 3,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 4,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      ialbum: 1,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 2,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 3,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n    {\r\n      ialbum: 4,\r\n      albumTitle: \"소풍\",\r\n      albumPic:\r\n        \"https://cdn.dongnamns.co.kr/news/photo/202106/4788_5959_3943.jpg\",\r\n    },\r\n  ],\r\n];\r\n","import React from \"react\";\r\nimport { ImgBox, MainVisual, SlideBtn } from \"../../styles/main\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, Navigation, EffectFade } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-fade\";\r\nimport { VisualImage } from \"../common/TemporaryData\";\r\n\r\nexport const MainVisualComponent = () => {\r\n  return (\r\n    <MainVisual>\r\n      <Swiper\r\n        spaceBetween={50}\r\n        slidesPerView={1}\r\n        loop=\"true\"\r\n        speed={800}\r\n        autoplay={{\r\n          delay: 3000,\r\n\r\n          disableOnInteraction: false,\r\n        }}\r\n        effect=\"fade\"\r\n        navigation={{\r\n          nextEl: \".next\",\r\n          prevEl: \".prev\",\r\n        }}\r\n        modules={[Autoplay, Navigation, EffectFade]}\r\n      >\r\n        {Array.isArray(VisualImage) &&\r\n          VisualImage.map((item, index) => {\r\n            return (\r\n              <SwiperSlide key={index}>\r\n                <ImgBox>\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + item}\r\n                    alt={`image${index + 1}`}\r\n                  ></img>\r\n                </ImgBox>\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n      </Swiper>\r\n      <SlideBtn className=\"prev\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/main/slide_btn_prev.svg\"}\r\n          alt=\"이전\"\r\n        />\r\n      </SlideBtn>\r\n      <SlideBtn className=\"next\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/main/slide_btn_next.svg\"}\r\n          alt=\"다음\"\r\n        />\r\n      </SlideBtn>\r\n    </MainVisual>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MainNoticeItem,\r\n  MainNoticeList,\r\n  MainNoticeTitle,\r\n  MainNoticeWrap,\r\n} from \"../../styles/main\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\n\r\nexport const MainNoticeComponent = ({ noticeDate }) => {\r\n  return (\r\n    <MainNoticeWrap>\r\n      <MainNoticeTitle>\r\n        <Link to=\"/notice\">유치원소식</Link>\r\n      </MainNoticeTitle>\r\n      <MainNoticeList>\r\n        <Swiper\r\n          direction={\"vertical\"}\r\n          speed={600}\r\n          autoplay={{\r\n            delay: 3000,\r\n            reverseDirection: true,\r\n            disableOnInteraction: false,\r\n          }}\r\n          loop={true}\r\n          modules={[Autoplay]}\r\n        >\r\n          {Array.isArray(noticeDate) &&\r\n            noticeDate.map((item, index) => {\r\n              return (\r\n                <SwiperSlide key={`key_${item.ifullNotice}`}>\r\n                  <MainNoticeItem>\r\n                    <Link to={`/notice/details/${item.ifullNotice}`}>\r\n                      <p>{item.fullTitle}</p>\r\n                      <span>{item.createdAt}</span>\r\n                    </Link>\r\n                  </MainNoticeItem>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n      </MainNoticeList>\r\n    </MainNoticeWrap>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MainBanner, MainBannerWrap } from \"../../styles/main\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BlueBtn, MainBrownBtn, MainPinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nconst MainBannerComponent = () => {\r\n  return (\r\n    <MainBannerWrap>\r\n      <MainBanner className=\"bnr1\">\r\n        <Link to=\"/info\">\r\n          <h3>유치원소개</h3>\r\n          <MainBrownBtn>바로가기</MainBrownBtn>\r\n        </Link>\r\n      </MainBanner>\r\n      <MainBanner className=\"bnr2\">\r\n        <Link to=\"/edu\">\r\n          <h3>교육과정</h3>\r\n          <MainPinkBtn>바로가기</MainPinkBtn>\r\n        </Link>\r\n      </MainBanner>\r\n      <MainBanner className=\"bnr3\">\r\n        <Link to=\"/edu/specialact\">\r\n          <h3>방과후수업</h3>\r\n          <BlueBtn>바로가기</BlueBtn>\r\n        </Link>\r\n      </MainBanner>\r\n    </MainBannerWrap>\r\n  );\r\n};\r\n\r\nexport default MainBannerComponent;\r\n","import React from \"react\";\r\nimport { ImgBox, MainPopSlide } from \"../../styles/main\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, Navigation, Pagination } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport { VisualPopImage } from \"../common/TemporaryData\";\r\n\r\nconst MainPopComponent = () => {\r\n  return (\r\n    <MainPopSlide>\r\n      <Swiper\r\n        slidesPerView={1}\r\n        loop=\"true\"\r\n        speed={800}\r\n        pagination={true}\r\n        autoplay={{\r\n          delay: 4000,\r\n          disableOnInteraction: false,\r\n        }}\r\n        modules={[Autoplay, Navigation, Pagination]}\r\n      >\r\n        {Array.isArray(VisualPopImage) &&\r\n          VisualPopImage.map((item, index) => {\r\n            return (\r\n              <SwiperSlide key={index}>\r\n                <ImgBox>\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + item}\r\n                    alt={`image${index + 1}`}\r\n                  ></img>\r\n                </ImgBox>\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n      </Swiper>\r\n    </MainPopSlide>\r\n  );\r\n};\r\n\r\nexport default MainPopComponent;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"./config\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api`;\r\n\r\n// 메인 최신글\r\nexport const getMain = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await axios.get(`${path}/main?page=1`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n      // RTK 업데이트 처리를 위해 값 전달\r\n      return res.data;\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MainContainer,\r\n  MainFlexWrap,\r\n  MainInner,\r\n  MainLocation,\r\n} from \"../styles/main\";\r\nimport MainAlbumComponent from \"../components/main/MainAlbumComponent\";\r\nimport { MainVisualComponent } from \"../components/main/MainVisualComponent\";\r\nimport { MainNoticeComponent } from \"../components/main/MainNoticeComponent\";\r\nimport MainBannerComponent from \"../components/main/MainBannerComponent\";\r\nimport MainPopComponent from \"../components/main/MainPopComponent\";\r\nimport { Outlet } from \"react-router\";\r\nimport { getMain } from \"../api/mainApi\";\r\n\r\nconst initdata = {\r\n  albumMainVoList: [\r\n    {\r\n      ialbum: 0,\r\n      albumTitle: \"\",\r\n      albumContents: \"\",\r\n      createdAt: \"\",\r\n      albumPic: \"\",\r\n    },\r\n  ],\r\n  fullNoticeVoList: [\r\n    {\r\n      fullTitle: \"\",\r\n      writer: \"\",\r\n      fullNoticeFix: 0,\r\n      createdAt: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Main = () => {\r\n  const [mainData, setMainData] = useState(initdata);\r\n  useEffect(() => {\r\n    getMain({ successFn, failFn, errorFn });\r\n  }, [initdata]);\r\n\r\n  const successFn = result => {\r\n    setMainData(result);\r\n  };\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    console.log(result);\r\n  };\r\n  return (\r\n    <MainInner>\r\n      <MainContainer>\r\n        {/* 비주얼 */}\r\n        <MainVisualComponent />\r\n        {/* 유치원소식 */}\r\n        <MainNoticeComponent noticeDate={mainData.fullNoticeVoList} />\r\n        {/* 배너 */}\r\n        <MainBannerComponent />\r\n        <MainFlexWrap>\r\n          {/* 팝업존 */}\r\n          <MainPopComponent />\r\n          {/* 오시는길 */}\r\n          <MainLocation>\r\n            <Outlet />\r\n          </MainLocation>\r\n        </MainFlexWrap>\r\n      </MainContainer>\r\n      {/* 활동앨범 */}\r\n      <MainAlbumComponent albumDate={mainData.albumMainVoList} />\r\n    </MainInner>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, ellipsis, shadow } from \"./basic\";\r\n\r\nexport const MainInner = styled.div`\r\n  height: 100%;\r\n  padding-right: 40rem;\r\n`;\r\n\r\n// 활동앨범\r\nexport const MainAlbum = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 7.5rem;\r\n  padding: 2rem;\r\n  width: 40rem;\r\n  height: 100vh;\r\n  background: url(${process.env.PUBLIC_URL +\r\n    \"/images/main/album/main_album_bg.jpg\"})\r\n    repeat top;\r\n  h3 {\r\n    border-bottom: 1px solid ${colors.greenDeep};\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const MainAlbumList = styled.ul`\r\n  position: relative;\r\n  width: 100%;\r\n  max-height: 78vh;\r\n  overflow-y: auto;\r\n\r\n  li {\r\n    background: #fff;\r\n    border-radius: 1rem;\r\n    margin-top: 2rem;\r\n    ${shadow}\r\n  }\r\n  a {\r\n    display: block;\r\n    padding: 2rem;\r\n    :hover img {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n`;\r\nexport const MainAlbumImage = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  aspect-ratio: 16/9;\r\n  border-radius: 1rem;\r\n  img {\r\n    width: 100%;\r\n    transition: 0.2s;\r\n  }\r\n  div {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(30px);\r\n    &:after {\r\n      content: \"로그인 후 확인하세요\";\r\n      color: #555;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainAlbumText = styled.div`\r\n  margin-top: 1.5rem;\r\n  b {\r\n    display: block;\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n    ${ellipsis.line1}\r\n  }\r\n  p {\r\n    font-size: 1.4rem;\r\n    color: ${colors.grayDeep};\r\n    font-weight: 300;\r\n    margin-bottom: 1rem;\r\n    ${ellipsis.line3}\r\n  }\r\n  span {\r\n    color: ${colors.grayDeep};\r\n    font-weight: 300;\r\n  }\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  position: relative;\r\n  max-width: 110rem;\r\n  padding-bottom: 15rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\n// 비주얼슬라이드\r\nexport const MainVisual = styled.div`\r\n  position: relative;\r\n  border-radius: 2rem;\r\n  overflow: hidden;\r\n  ${shadow}\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const ImgBox = styled.div`\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// 메인 유치원소식\r\nexport const MainNoticeWrap = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  background: ${colors.greenLight2};\r\n  border-radius: 2rem;\r\n  padding: 1.5rem 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${shadow}\r\n`;\r\nexport const MainNoticeTitle = styled.h3`\r\n  padding-left: 3.5rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/common/sidebar/news.svg\"})\r\n    no-repeat left 0.25rem/2.8rem;\r\n  color: ${colors.greenDeep};\r\n  margin-right: 2rem;\r\n  a {\r\n    color: ${colors.greenDeep};\r\n  }\r\n`;\r\n\r\nexport const MainNoticeList = styled.div`\r\n  width: 100%;\r\n\r\n  height: 2.8rem;\r\n  font-size: 1.6rem;\r\n  overflow: hidden;\r\n  a {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  span {\r\n    font-size: 1.4rem;\r\n    color: ${colors.grayDeep};\r\n  }\r\n  .swiper,\r\n  .swiper-slide {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const MainNoticeItem = styled.div`\r\n  line-height: 2.8rem;\r\n  height: 100%;\r\n`;\r\n\r\n// 메인배너\r\nexport const MainBannerWrap = styled.div`\r\n  position: relative;\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nexport const MainBanner = styled.div`\r\n  background: #f2f2f2;\r\n  width: 32%;\r\n  border-radius: 2rem;\r\n  ${shadow}\r\n  h3 {\r\n    font-size: 3rem;\r\n    margin-bottom: 3rem;\r\n  }\r\n  a {\r\n    padding: 3rem 4rem;\r\n    display: block;\r\n  }\r\n  &.bnr1 {\r\n    background: ${colors.orangeLight}\r\n      url(${process.env.PUBLIC_URL + \"/images/main/grid_bg.png\"});\r\n    h3 {\r\n      color: #fb417c;\r\n    }\r\n    a {\r\n      background: url(${process.env.PUBLIC_URL + \"/images/main/main_bnr01.svg\"})\r\n        no-repeat 90% 80%;\r\n    }\r\n  }\r\n  &.bnr2 {\r\n    background: #ffd6e3\r\n      url(${process.env.PUBLIC_URL + \"/images/main/grid_bg.png\"});\r\n    h3 {\r\n      color: #01a78b;\r\n    }\r\n    a {\r\n      background: url(${process.env.PUBLIC_URL + \"/images/main/main_bnr02.svg\"})\r\n        no-repeat 90% 80%;\r\n    }\r\n  }\r\n  &.bnr3 {\r\n    background: #d8ebf9\r\n      url(${process.env.PUBLIC_URL + \"/images/main/grid_bg.png\"});\r\n    h3 {\r\n      color: #a36bff;\r\n    }\r\n    a {\r\n      background: url(${process.env.PUBLIC_URL + \"/images/main/main_bnr03.svg\"})\r\n        no-repeat 90% 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainFlexWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\n// 팝업슬라이드\r\nexport const MainPopSlide = styled.div`\r\n  position: relative;\r\n  width: 32%;\r\n  border-radius: 2rem;\r\n  overflow: hidden;\r\n  ${shadow}\r\n`;\r\n\r\n// 메인 오시는길\r\nexport const MainLocation = styled.div`\r\n  width: calc(100% - 34%);\r\n  border-radius: 2rem;\r\n  overflow: hidden;\r\n  ${shadow}\r\n  background: url(${process.env.PUBLIC_URL + \"/images/main/main_location.jpg\"})\r\n        no-repeat center/cover;\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SlideBtn = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  z-index: 9;\r\n  cursor: pointer;\r\n  &.prev {\r\n    left: 2%;\r\n  }\r\n  &.next {\r\n    right: 2%;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","_ref","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","doParentLogin","_ref2","postParentLoginAsync","moveToPath","path","pathname","replace","moveToLogin","console","log","_jsx","Navigate","to","refreshAccessToken","async","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","error","albumDate","useEffect","Array","isArray","reverse","_jsxs","MainAlbum","children","PageTitle","Link","MainAlbumList","ialbum","style","textAlign","marginTop","map","item","concat","MainAlbumImage","src","IMG_URL","albumPic","MainAlbumText","albumTitle","albumContents","createdAt","VisualPopImage","VisualImage","MainVisualComponent","MainVisual","Swiper","spaceBetween","slidesPerView","loop","speed","autoplay","delay","disableOnInteraction","effect","navigation","nextEl","prevEl","modules","Autoplay","Navigation","EffectFade","index","SwiperSlide","ImgBox","process","alt","SlideBtn","className","MainNoticeComponent","noticeDate","MainNoticeWrap","MainNoticeTitle","MainNoticeList","direction","reverseDirection","MainNoticeItem","ifullNotice","fullTitle","MainBannerComponent","MainBannerWrap","MainBanner","MainBrownBtn","MainPinkBtn","BlueBtn","MainPopComponent","MainPopSlide","pagination","Pagination","SERVER_URL","initdata","albumMainVoList","fullNoticeVoList","writer","fullNoticeFix","Main","mainData","setMainData","useState","res","axios","get","status","toString","charAt","data","response","message","getMain","result","MainInner","MainContainer","MainFlexWrap","MainLocation","Outlet","MainAlbumComponent","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","colors","greenDeep","ul","_templateObject3","shadow","_templateObject4","_templateObject5","ellipsis","line1","grayDeep","line3","_templateObject6","_templateObject7","_templateObject8","_templateObject9","greenLight2","h3","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","orangeLight","_templateObject15","_templateObject16","_templateObject17","span","_templateObject18","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","GreenBtn","button","greenLight","OrangeBtn","orangeDeep","PinkBtn","pinkLight","pinkDeep","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","grayLight","white","AllBtn","Modal"],"sourceRoot":""}