{"version":3,"file":"static/js/615.df9267c0.chunk.js","mappings":"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","sources":["styles/user/notialarm.js","atoms/pushState.js","components/user/NotiAlarm.js","api/user/pushApi.js","components/common/NavBar.js","components/common/Footer.js","components/common/SideMenu.js","components/common/SideBar.js","layouts/MainLayout.js","../node_modules/recoil-persist/dist/index.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { boxStyle, colors } from \"../basic\";\n\nexport const NotiWrap = styled.div`\n  position: relative;\n`;\n\nexport const NotiIcon = styled.div`\n  position: relative;\n  width: 3rem;\n  /* margin-right: -0.5rem; */\n  cursor: pointer;\n  img {\n    width: 100%;\n  }\n\n  :after {\n    content: \"\";\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 0.7rem;\n    height: 0.7rem;\n    background: ${colors.orangeDeep};\n    border-radius: 50%;\n    display: ${props => (props.state ? \"block\" : \"none\")};\n  }\n`;\n\nexport const NotiList = styled.div`\n  position: absolute;\n  top: calc(100% + 1rem);\n  left: 50%;\n  transform: translateX(-50%);\n  min-width: 25rem;\n  ${boxStyle}\n  box-shadow: 0 -2px 10px 1px rgba(0,0,0,0.1);\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s;\n  &.active {\n    overflow: inherit;\n    max-height: 30rem;\n  }\n  &.active:before {\n    display: block;\n  }\n  &:before {\n    content: \"\";\n    display: none;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    top: -12px;\n    width: 0;\n    height: 0;\n    border-bottom: 6px solid #fff;\n    border-top: 6px solid transparent;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n  }\n`;\nexport const NotiItemWrap = styled.div`\n  padding: 2rem 1.5rem;\n  max-height: 0;\n  transition: max-height 0.2s;\n  &.active {\n    overflow-y: auto;\n    max-height: 25rem;\n  }\n`;\nexport const NotiItem = styled.div`\n  position: relative;\n  border-bottom: 1px dashed ${colors.grayBar};\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n  cursor: pointer;\n  :last-of-type {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n  button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0;\n    font-size: 0;\n    width: 1.7rem;\n    opacity: 0.5;\n    img {\n      width: 100%;\n    }\n\n    :hover {\n      opacity: 1;\n    }\n  }\n  .noti-kid {\n    color: #999999;\n    margin-bottom: 0.25rem;\n    font-size: 1.2rem;\n  }\n  .noti-title {\n    font-size: 1.3rem;\n    font-weight: 500;\n    span {\n      padding-right: 0.5rem;\n    }\n  }\n`;\nexport const EmptyList = styled.div`\n  font-size: 1.2rem;\n  text-align: center;\n`;\n","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\nconst initState = {\n  pushList: [],\n};\n\nconst { persistAtom } = recoilPersist();\nconst pushState = atom({\n  key: \"pushState\",\n  default: initState,\n  effects_UNSTABLE: [persistAtom],\n  dangerouslyAllowMutability: true,\n});\n\nexport default pushState;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  EmptyList,\n  NotiBox,\n  NotiIcon,\n  NotiItem,\n  NotiItemWrap,\n  NotiList,\n  NotiWrap,\n} from \"../../styles/user/notialarm\";\nimport { useRecoilState } from \"recoil\";\nimport pushState from \"../../atoms/pushState\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { Link } from \"react-router-dom\";\n\nconst NotiAlarm = () => {\n  const [notiPush, setNotiPush] = useRecoilState(pushState);\n  const [isListOpen, setIsListOpen] = useState(false);\n  // 로그인체크\n  const { isLogin, loginState } = useCustomLogin();\n  const iuser = isLogin ? \"iteacher\" : \"iparent\";\n  const userNm = isLogin ? loginState.iteacher : loginState.iparent;\n  // 유저와 일치하는 data\n  const data = notiPush.pushList.filter(\n    obj =>\n      Object.prototype.hasOwnProperty.call(obj, iuser) && obj[iuser] === userNm,\n  );\n  // data\n  let notiList = [];\n  let totalCnt = false;\n  if (data.length > 0) {\n    notiList = data[0].data;\n    totalCnt = !data[0].totalCnt || data[0].totalCnt === 0 ? false : true;\n  }\n\n  const listRef = useRef(null);\n  console.log(notiList);\n  // 화면 나오면 data 값 넣기\n  useEffect(() => {\n    // const handleOutsideClose = e => {\n    //   if (isListOpen && !listRef.current.contains(e.target))\n    //     setIsListOpen(false);\n    // };\n    // document.addEventListener(\"click\", handleOutsideClose);\n    // return () => document.removeEventListener(\"click\", handleOutsideClose);\n  }, [totalCnt]);\n\n  // 알림 리스트\n  const handleClickOpen = () => {\n    setIsListOpen(!isListOpen);\n  };\n\n  // 알림삭제\n  const handleClickDelete = index => {\n    // 클릭한 객체 제외하고 새로 배열 저장\n    const updatedNotiList = [\n      ...notiList.slice(0, index),\n      ...notiList.slice(index + 1),\n    ];\n    notiList = updatedNotiList;\n\n    // notiPush 업데이트\n    setNotiPush(prev => {\n      const updatedPushList = prev.pushList.map(item => {\n        if (item[iuser] === userNm) {\n          item.data = item.data.filter((notiItem, idx) => idx !== index);\n          item.totalCnt--;\n        }\n        return item;\n      });\n      return { ...prev, pushList: updatedPushList };\n    });\n  };\n\n  console.log(isListOpen);\n\n  return (\n    <NotiWrap ref={listRef}>\n      <NotiIcon state={totalCnt} onClick={handleClickOpen}>\n        <img src={process.env.PUBLIC_URL + \"/images/common/bell_icon.svg\"} />\n      </NotiIcon>\n      <NotiList className={isListOpen ? \"active\" : \"\"}>\n        <NotiItemWrap className={isListOpen ? \"active\" : \"\"}>\n          {notiList.length === 0 ? (\n            <EmptyList>알림이 없습니다.</EmptyList>\n          ) : (\n            Array.isArray(notiList) &&\n            notiList.map((item, index) => (\n              <NotiItem key={index}>\n                <Link\n                  to={`/ind${item.imemory ? \"/album\" : \"\"}/details/${\n                    item.inotice || item.imemory\n                  }?ikid=${item.ikid}&year=2024&page=1`}\n                >\n                  <ul>\n                    <li className=\"noti-kid\">\n                      {item.kidNm} {item.noticeTitle ? \"알림장\" : \"추억앨범\"}\n                    </li>\n                    <li className=\"noti-title\">\n                      <span className=\"noti-date\">\n                        {item.createdAt.split(\" \")[0]}\n                      </span>\n                      {item.noticeTitle || item.memoryTitle}\n                    </li>\n                    {/* <li className=\"noti-writer\">{item.writerNm}</li> */}\n                  </ul>\n                </Link>\n                <button onClick={() => handleClickDelete(index)}>\n                  <img\n                    src={\n                      process.env.PUBLIC_URL + \"/images/common/close_icon.svg\"\n                    }\n                    alt=\"알림삭제\"\n                  />\n                  알림삭제\n                </button>\n              </NotiItem>\n            ))\n          )}\n        </NotiItemWrap>\n      </NotiList>\n    </NotiWrap>\n  );\n};\n\nexport default NotiAlarm;\n","import { getFirebaseToken, onMessageListener } from \"../../fb/fbconfig\";\nimport jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nconst parentFbPath = `${SERVER_URL}/api/parent/firebase-token`;\nconst teacherFbPath = `${SERVER_URL}/api/teacher/firebase-token`;\n\nexport const patchTeacherFbToken = async ({ params, successFn }) => {\n  try {\n    const res = await jwtAxios.patch(`${teacherFbPath}`, params);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchParentFbToken = async ({ params, successFn }) => {\n  try {\n    const res = await jwtAxios.patch(`${parentFbPath}`, params);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFbToken = async successFn => {\n  try {\n    const firebaseToken = await getFirebaseToken();\n    successFn(firebaseToken);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { HeaderBtn, NavWrap } from \"../../styles/basic\";\nimport {\n  GrayBtn,\n  GreenBtn,\n  OrangeBtn,\n  PinkBtn,\n  PurpleBtn,\n} from \"../../styles/ui/buttons\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport NotiAlarm from \"../user/NotiAlarm\";\nimport { useRecoilState } from \"recoil\";\nimport pushState from \"../../atoms/pushState\";\nimport { onMessageListener } from \"../../fb/fbconfig\";\nimport {\n  patchParentFbToken,\n  patchTeacherFbToken,\n  getFbToken,\n} from \"../../api/user/pushApi\";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n  const currentYear = new Date().getFullYear();\n  // 로그인정보 체크\n  const {\n    moveToPath,\n    doLogout,\n    loginState,\n    isLogin,\n    isName,\n    isAdminLogin,\n    isParentLogin,\n    isTeacherLogin,\n    refreshAccessToken,\n  } = useCustomLogin();\n  const ikidList = loginState.kidList;\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\n  const iteacher = loginState.iteacher;\n\n  // 로그아웃\n  const handleLogout = () => {\n    doLogout();\n    moveToPath(\"/\");\n  };\n  // // 푸시알림 State\n  // const [notiPush, setNotiPush] = useRecoilState(pushState);\n  // // console.log(notiPush);\n\n  // // 알림사용 승인 후 firebase 토큰 가져오기\n  // useEffect(() => {\n  //   // setNotiPush({\n  //   //   pushList: [],\n  //   // });\n  //   if (Notification.permission !== \"granted\") {\n  //     Notification.requestPermission().then(permission => {\n  //       if (permission === \"granted\") {\n  //         getFbToken(successFn);\n  //       }\n  //     });\n  //   } else {\n  //     getFbToken(successFn);\n  //   }\n  // }, [loginState]);\n  // //가져온 firebase 토큰이 로그인정보에 있는 토큰값과 다르면 서버로 토큰정보 전달\n  // const successFn = res => {\n  //   const userFirebaseToken = isParentLogin\n  //     ? loginState.prFirebaseToken\n  //     : loginState.firebaseToken;\n\n  //   if (userFirebaseToken !== res && loginState.accessToken) {\n  //     let params = {\n  //       iteacher: loginState.iteacher,\n  //       firebaseToken: res,\n  //     };\n  //     if (isParentLogin) {\n  //       params = {\n  //         iparent: loginState.iparent,\n  //         firebaseToken: res,\n  //       };\n  //       patchParentFbToken({ params, successFn: successrefrash });\n  //     } else {\n  //       patchTeacherFbToken({ params, successFn: successrefrash });\n  //     }\n  //     console.log(params);\n  //   }\n  // };\n\n  // // firebase 토큰 갱신에 성공하면 로그인 정보 다시 가져옴\n  // const successrefrash = res => {\n  //   const resultNum = res.data.result;\n  //   if (resultNum === 1) {\n  //     refreshAccessToken();\n  //   } else {\n  //     console.log(\"firebase 토큰업데이트 실패\");\n  //   }\n  //   // refreshAccessToken();\n  // };\n\n  // // 푸시알림감지 후 알림 리스트 업데이트\n  // onMessageListener()\n  //   .then(payload => {\n  //     const newData = JSON.parse(payload.notification.body);\n  //     setNotiPush(prev => {\n  //       let pushListUpdated = false;\n  //       const updatedPushList = prev.pushList.map(item => {\n  //         // iteacher,iparent 값 확인\n  //         if (\n  //           item.iteacher === loginState.iteacher ||\n  //           item.iparent === loginState.iparent\n  //         ) {\n  //           // 일치하면 원래 있던 객체에 data, totalCnt만 추가\n  //           item.data.push(newData);\n  //           item.totalCnt++;\n  //           pushListUpdated = true;\n  //         }\n  //         return item;\n  //       });\n\n  //       // 일치하는 iteacher,iparent 값이 없을경우\n  //       // 선생님, 학부모에 따라 값 추가\n  //       if (!pushListUpdated) {\n  //         const newItem = {};\n  //         if (isParentLogin) {\n  //           newItem.iparent = loginState.iparent;\n  //         }\n  //         if (isLogin) {\n  //           newItem.iteacher = loginState.iteacher;\n  //         }\n  //         newItem.totalCnt = 1;\n  //         newItem.data = [newData];\n  //         updatedPushList.push(newItem);\n  //       }\n\n  //       return { ...prev, pushList: updatedPushList };\n  //     });\n  //   })\n  //   .catch(error => console.log(error));\n\n  // console.log(notiPush);\n\n  return (\n    <NavWrap>\n      <Link to={\"/\"} className=\"nav-logo\">\n        <img src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"} />\n      </Link>\n      <p>{isLogin || isParentLogin ? `${isName}님 환영합니다.` : null}</p>\n      {/* 푸시알림 */}\n      {isParentLogin || isTeacherLogin ? <NotiAlarm /> : null}\n\n      <HeaderBtn>\n        {isLogin ? (\n          <>\n            <GrayBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(`/ind?year=${currentYear}&page=1&iclass=${iclass}`)\n              }\n            >\n              알림장목록\n            </GrayBtn>\n\n            <PurpleBtn\n              className=\"nav-btn\"\n              onClick={e => navigate(`/admin?page=1&iclass=${iclass}`)}\n            >\n              학부모관리\n            </PurpleBtn>\n            <OrangeBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(`/admin/student?page=1&kidCheck=${iclass}`)\n              }\n            >\n              원생관리\n            </OrangeBtn>\n            {isTeacherLogin ? (\n              <PinkBtn\n                className=\"nav-btn\"\n                onClick={e =>\n                  navigate(`/admin/teacher/edit?iteacher=${iteacher}`)\n                }\n              >\n                정보수정\n              </PinkBtn>\n            ) : null}\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : isParentLogin ? (\n          <>\n            <GrayBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(\n                  `/ind?year=${currentYear}&page=1&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              알림장\n            </GrayBtn>\n            <OrangeBtn\n              className=\"nav-btn\"\n              onClick={e =>\n                navigate(\n                  `/mypage?year=${currentYear}&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              마이페이지\n            </OrangeBtn>\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : (\n          <>\n            <OrangeBtn onClick={e => navigate(\"user/accounts\")}>\n              회원가입\n            </OrangeBtn>\n            <GreenBtn onClick={e => navigate(\"login\")}>로그인</GreenBtn>\n          </>\n        )}\n      </HeaderBtn>\n    </NavWrap>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { FooterBg, FooterBus, FooterWrap } from \"../../styles/basic\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterBus />\n      <FooterBg>\n        <Link to=\"/\">copyright 떡잎방범대</Link>\n      </FooterBg>\n    </FooterWrap>\n  );\n};\n\nexport default Footer;\n","import { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst SideMenu = () => {\n  const { isLogin, isParentLogin, isTeacherLogin, loginState } =\n    useCustomLogin();\n  const currentYear = new Date().getFullYear();\n  const ikidList = loginState.kidList;\n  const iclass = isLogin && !isTeacherLogin ? 0 : loginState.iclass;\n  function getItem(label, key, icon, children, type) {\n    return {\n      key,\n      icon,\n      children,\n      label,\n      type,\n    };\n  }\n\n  const teacherItems = [\n    getItem(\n      <Link to={`/admin?page=1&iclass=${iclass}`}>학부모 관리</Link>,\n      \"5-1\",\n    ),\n    getItem(\n      <Link to={`/admin/student?page=1&kidCheck=${iclass}`}>원생 관리</Link>,\n      \"5-2\",\n    ),\n    getItem(<Link to=\"/admin/student/create\">원생 등록</Link>, \"5-3\"),\n    getItem(\n      <Link to={`/ind?year=${currentYear}&page=1&iclass=${iclass}`}>\n        알림장 목록\n      </Link>,\n      \"5-4\",\n    ),\n  ];\n  const items = [\n    getItem(\n      \"유치원 안내\",\n      \"1\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/info_icon.svg\"}\n      />,\n      [\n        getItem(<Link to=\"/info/\">유치원 소개</Link>, \"1-1\"),\n        getItem(<Link to=\"/info/class\">유치원 현황</Link>, \"1-2\"),\n        getItem(<Link to=\"/info/location\">오시는 길</Link>, \"1-3\"),\n      ],\n    ),\n    getItem(\n      \"육아정보\",\n      \"2\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/education.svg\"}\n      />,\n      [\n        // getItem(<Link to=\"/edu\">교육과정</Link>, \"2-1\"),\n        // getItem(<Link to=\"/edu/specialact\">방과후활동</Link>, \"2-2\"),\n        getItem(<Link to=\"/edu/hospital?page=1\">예방접종기관정보</Link>, \"2-3\"),\n        getItem(\n          <Link to=\"/edu/nighthospital?page=1\">야간진료병원정보</Link>,\n          \"2-4\",\n        ),\n      ],\n    ),\n    getItem(\n      \"활동앨범\",\n      \"3\",\n      <Link to=\"/album\">\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/gallery.svg\"}\n        />\n      </Link>,\n    ),\n    getItem(\n      \"유치원 소식\",\n      \"4\",\n      <Link to=\"/notice\">\n        <img src={process.env.PUBLIC_URL + \"/images/common/sidebar/news.svg\"} />\n      </Link>,\n    ),\n  ];\n  if (isLogin && !isTeacherLogin) {\n    items.push(\n      getItem(\n        \"관리자\",\n        \"5\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\n        />,\n        teacherItems.concat([\n          getItem(\n            <Link to={`/admin/teacher?page=1&iclass=${iclass}&tcIsDel=0`}>\n              선생님 관리\n            </Link>,\n            \"5-5\",\n          ),\n        ]),\n      ),\n    );\n  }\n  if (isTeacherLogin) {\n    items.push(\n      getItem(\n        \"관리자\",\n        \"5\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\n        />,\n        teacherItems,\n      ),\n    );\n  }\n  if (isParentLogin) {\n    items.push(\n      getItem(\n        \"회원전용\",\n        \"6\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/user.svg\"}\n        />,\n        [\n          getItem(\n            <Link\n              to={`/ind?year=${currentYear}&page=1&ikid=${\n                ikidList[0] ? ikidList[0].ikid : 0\n              }`}\n            >\n              알림장\n            </Link>,\n            \"6-1\",\n          ),\n          getItem(\n            <Link\n              to={`/mypage?year=${currentYear}&ikid=${\n                ikidList[0] ? ikidList[0].ikid : 0\n              }`}\n            >\n              마이페이지\n            </Link>,\n            \"6-2\",\n          ),\n        ],\n      ),\n    );\n  }\n\n  return (\n    <Menu\n      defaultSelectedKeys={[\"\"]}\n      mode=\"inline\"\n      items={items}\n      style={{ border: 0 }}\n    />\n  );\n};\n\nexport default SideMenu;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LogoWrap, SideBarWrap } from \"../../styles/basic\";\nimport Sider from \"antd/es/layout/Sider\";\nimport SideMenu from \"./SideMenu\";\nimport { AllBtn } from \"../../styles/ui/buttons\";\n\nconst SideBar = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const sideMenuRef = useRef(null);\n  useEffect(() => {\n    const handleOutsideClose = e => {\n      if (\n        window.innerWidth <= 798 &&\n        !collapsed &&\n        !sideMenuRef.current.contains(e.target)\n      )\n        setCollapsed(true);\n    };\n    document.addEventListener(\"click\", handleOutsideClose);\n\n    return () => document.removeEventListener(\"click\", handleOutsideClose);\n  }, [collapsed]);\n\n  return (\n    <SideBarWrap ref={sideMenuRef}>\n      <Sider\n        breakpoint=\"lg\"\n        onCollapse={(collapsed, type) => {\n          setCollapsed(true);\n        }}\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n        theme=\"light\"\n      >\n        <LogoWrap>\n          <Link to={\"/\"}>\n            {collapsed ? (\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/images/common/header/smallLogo.svg\"\n                }\n              />\n            ) : (\n              <img\n                src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"}\n              />\n            )}\n          </Link>\n        </LogoWrap>\n        <SideMenu />\n        <AllBtn type=\"text\" onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? \"펼치기\" : \"접기\"}\n        </AllBtn>\n      </Sider>\n    </SideBarWrap>\n  );\n};\n\nexport default SideBar;\n","import { Layout, theme } from \"antd\";\nimport { AllLayout, WrapMain } from \"../styles/basic\";\nimport NavBar from \"../components/common/NavBar\";\nimport Footer from \"../components/common/Footer\";\nimport SideBar from \"../components/common/SideBar\";\nimport { Outlet } from \"react-router\";\nconst MainLayout = ({ children }) => {\n  return (\n    <AllLayout className=\"layout-wrap\">\n      {/* 사이드바(전체메뉴)영역 */}\n      <SideBar />\n      <Layout>\n        {/* 상단네비영역 */}\n        <NavBar />\n        {/* 컨텐츠영역 */}\n        <WrapMain>\n          <Outlet />\n        </WrapMain>\n      </Layout>\n      {/* 하단푸터 */}\n      <Footer />\n    </AllLayout>\n  );\n};\nexport default MainLayout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoilPersist = void 0;\n/**\n * Recoil module to persist state to storage\n *\n * @param config Optional configuration object\n * @param config.key Used as key in local storage, defaults to `recoil-persist`\n * @param config.storage Local storage to use, defaults to `localStorage`\n */\nconst recoilPersist = (config = {}) => {\n    if (typeof window === 'undefined') {\n        return {\n            persistAtom: () => { },\n        };\n    }\n    const { key = 'recoil-persist', storage = localStorage, converter = JSON } = config;\n    const persistAtom = ({ onSet, node, trigger, setSelf }) => {\n        if (trigger === 'get') {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => {\n                    if (s.hasOwnProperty(node.key)) {\n                        setSelf(s[node.key]);\n                    }\n                });\n            }\n            if (state.hasOwnProperty(node.key)) {\n                setSelf(state[node.key]);\n            }\n        }\n        onSet(async (newValue, _, isReset) => {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => updateState(newValue, s, node.key, isReset));\n            }\n            else {\n                updateState(newValue, state, node.key, isReset);\n            }\n        });\n    };\n    const updateState = (newValue, state, key, isReset) => {\n        if (isReset) {\n            delete state[key];\n        }\n        else {\n            state[key] = newValue;\n        }\n        setState(state);\n    };\n    const getState = () => {\n        const toParse = storage.getItem(key);\n        if (toParse === null || toParse === undefined) {\n            return {};\n        }\n        if (typeof toParse === 'string') {\n            return parseState(toParse);\n        }\n        if (typeof toParse.then === 'function') {\n            return toParse.then(parseState);\n        }\n        return {};\n    };\n    const parseState = (state) => {\n        if (state === undefined) {\n            return {};\n        }\n        try {\n            return converter.parse(state);\n        }\n        catch (e) {\n            console.error(e);\n            return {};\n        }\n    };\n    const setState = (state) => {\n        try {\n            if (typeof storage.mergeItem === 'function') {\n                storage.mergeItem(key, converter.stringify(state));\n            }\n            else {\n                storage.setItem(key, converter.stringify(state));\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    return { persistAtom };\n};\nexports.recoilPersist = recoilPersist;\n"],"names":["NotiWrap","styled","div","_templateObject","_taggedTemplateLiteral","NotiIcon","_templateObject2","colors","orangeDeep","props","state","NotiList","_templateObject3","boxStyle","NotiItemWrap","_templateObject4","NotiItem","_templateObject5","grayBar","EmptyList","_templateObject6","persistAtom","recoilPersist","atom","key","default","pushList","effects_UNSTABLE","dangerouslyAllowMutability","NotiAlarm","notiPush","setNotiPush","useRecoilState","pushState","isListOpen","setIsListOpen","useState","isLogin","loginState","useCustomLogin","iuser","userNm","iteacher","iparent","data","filter","obj","Object","prototype","hasOwnProperty","call","notiList","totalCnt","length","listRef","useRef","console","log","useEffect","_jsxs","ref","children","_jsx","onClick","handleClickOpen","src","className","Array","isArray","map","item","index","Link","to","concat","imemory","inotice","ikid","kidNm","noticeTitle","createdAt","split","memoryTitle","updatedNotiList","slice","prev","updatedPushList","notiItem","idx","handleClickDelete","alt","SERVER_URL","NavBar","navigate","useNavigate","currentYear","Date","getFullYear","moveToPath","doLogout","isName","isAdminLogin","isParentLogin","isTeacherLogin","refreshAccessToken","ikidList","kidList","iclass","handleLogout","NavWrap","HeaderBtn","_Fragment","GrayBtn","e","PurpleBtn","OrangeBtn","PinkBtn","GreenBtn","Footer","FooterWrap","FooterBus","FooterBg","SideMenu","getItem","label","icon","type","teacherItems","items","push","Menu","defaultSelectedKeys","mode","style","border","SideBar","collapsed","setCollapsed","sideMenuRef","handleOutsideClose","window","innerWidth","current","contains","target","document","addEventListener","removeEventListener","SideBarWrap","Sider","breakpoint","onCollapse","trigger","collapsible","theme","LogoWrap","AllBtn","_ref","AllLayout","Layout","WrapMain","Outlet","exports","config","arguments","undefined","storage","localStorage","converter","JSON","updateState","newValue","isReset","setState","getState","toParse","parseState","then","parse","error","mergeItem","stringify","setItem","onSet","node","setSelf","s","async","_"],"sourceRoot":""}