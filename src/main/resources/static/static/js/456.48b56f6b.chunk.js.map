{"version":3,"file":"static/js/456.48b56f6b.chunk.js","mappings":"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","sources":["api/indivAlbum/indivalbum_api.js","components/indivAlbum/ReadAllIndAlbum.js","pages/indivalbum/IndivAlbumList.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\nconst path = `${SERVER_URL}/api/memory`;\n\n// 추억 앨범 교사 전체 조회\nexport const getIndAlbumList = async ({\n  page,\n  iclass,\n  ikid,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&ikid=0&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 학부모 전체 조회\nexport const getIndAlbumParentList = async ({\n  page,\n  iclass,\n  ikid,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&ikid=${ikid}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 수정 하기.\nexport const putIndAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 추억 앨범 등록하기\nexport const postIndAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    console.log(\"res\", res);\n    if (res.code === \"PUSH_FAIL\") {\n      errorFn(\"푸쉬알림에 비동의 상태입니다.\");\n    } else {\n      errorFn(res.message);\n    }\n  }\n};\n\n// 추억 앨범 글 삭제\n// ?ialbum=1\nexport const deleteIndAlbum = async ({\n  ialbum,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 추억 앨범 댓글 등록하기\nexport const postIndAlbumComment = async ({\n  product,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 앨범 댓글 삭제하기\nexport const deleteIndAlbumComment = async ({\n  inoticeComment,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\n    );\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn();\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 추억 앨범 원아 태그 리스트\nexport const getIndAlubmTagList = async ({\n  page,\n  year,\n  iclass,\n  fromTo,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&fromTo=${fromTo}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 수정 전 정보 불러오기\nexport const getIndchildrenList = async ({\n  product,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/tag`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 상세 조회\nexport const getIndAlbumDetail = async ({\n  page,\n  year,\n  ikid,\n  fromTo,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&ikid=${ikid}&year=${year}&fromTo=${fromTo}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\n// export const getIndSearchListAll = async ({\n//   page,\n//   search,\n//   successFn,\n//   failFn,\n//   errorFn,\n// }) => {\n//   try {\n//     const res = await jwtAxios.get(\n//       `${path}/listall?page=${page}&search=${search}`,\n//     );\n//     const status = res.status.toString();\n//     if (status.charAt(0) === \"2\") {\n//       // console.log(\"res.data임 : \", res.data);\n//       successFn(res.data);\n//     } else {\n//       failFn(\"자료 호출 에러입니다.\");\n//     }\n//   } catch (error) {\n//     errorFn(error);\n//     // console.log(error);\n//   }\n// };\n","import React, { useState } from \"react\";\nimport MyClass from \"../user/MyClass\";\nimport {\n  IndBot,\n  IndCon,\n  IndIcon,\n  IndList,\n  IndListBox,\n  IndListWrap,\n  IndName,\n  IndTitle,\n  IndTop,\n} from \"../../styles/individualNotice/ind\";\nimport { Link } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst ReadAllIndAlbum = ({ listData, year, ikid, iclass, page }) => {\n  const { loginState, isLogin, isParentLogin } = useCustomLogin();\n  const classState = state => {\n    const className =\n      state === 1\n        ? \"무궁화반\"\n        : state === 2\n        ? \"해바라기반\"\n        : state === 3\n        ? \"장미반\"\n        : state === -1\n        ? \"퇴소\"\n        : state === -2\n        ? \"졸업\"\n        : \"\";\n    return className;\n  };\n\n  return (\n    <IndListWrap>\n      <IndList>\n        {\n          console.log(\"listData\", listData)\n          // Array.isArray(listData) }} listData[0].inotice === 0 ? (\n          //   <div\n          //     style={{ textAlign: \"center\", width: \"100%\", marginTop: \"5rem\" }}\n          //   >\n          //     알림장 내용이 없습니다.\n          //   </div>\n          // ) : (\n          //   Array.isArray(listData) &&\n          //   listData.map(item => (\n          //     <IndListBox\n          //       key={item.inotice}\n          //       className={item.noticeCheck === 1 ? \"notice\" : \"\"}\n          //     >\n          //       <Link\n          //         to={\n          //           isLogin\n          //             ? `/ind/details/${item.inotice}?year=${year}&page=${page}&iclass=${iclass}`\n          //             : `/ind/details/${item.inotice}?year=${year}&page=${page}&ikid=${ikid}`\n          //         }\n          //       >\n          //         <IndTop>\n          //           <IndName>\n          //             {classState(item.iclass)} {item.kidNm}\n          //           </IndName>\n          //           <IndTitle>\n          //             {item.noticeCheck === 1 ? (\n          //               <img\n          //                 src={\n          //                   process.env.PUBLIC_URL +\n          //                   \"/images/common/warning_icon.svg\"\n          //                 }\n          //                 alt=\"file\"\n          //               />\n          //             ) : null}\n          //             <span>{item.createdAt.split(\" \")[0]}</span>\n          //             <b>{item.noticeTitle}</b>\n          //           </IndTitle>\n          //           <IndIcon>\n          //             {item.picCheck === 1 ? (\n          //               <img\n          //                 src={\n          //                   process.env.PUBLIC_URL +\n          //                   \"/images/common/file_icon.svg\"\n          //                 }\n          //                 alt=\"file\"\n          //               />\n          //             ) : null}\n          //             {item.cmtCheck === 1 ? (\n          //               <img\n          //                 src={\n          //                   process.env.PUBLIC_URL +\n          //                   \"/images/common/chat_icon.svg\"\n          //                 }\n          //                 alt=\"file\"\n          //               />\n          //             ) : null}\n          //           </IndIcon>\n          //         </IndTop>\n          //         <IndCon>\n          //           <span>{item.noticeContents}</span>\n          //         </IndCon>\n          //       </Link>\n          //     </IndListBox>\n          //   ))\n          // )\n        }\n      </IndList>\n    </IndListWrap>\n  );\n};\n\nexport default ReadAllIndAlbum;\n","import { Pagination, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\nimport { PageTitle } from \"../../styles/basic\";\nimport {\n  FromToBtnWrap,\n  IndWrap,\n  TabWrap,\n} from \"../../styles/individualNotice/ind\";\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\nimport {\n  Link,\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport ReadAllIndAlbum from \"../../components/indivAlbum/ReadAllIndAlbum\";\nimport {\n  getIndParentList,\n  getIndTeacherList,\n} from \"../../api/individualNotice/indivNoticeApi\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\nimport Search from \"antd/es/input/Search\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\nimport {\n  getIndAlbumList,\n  getIndAlbumParentList,\n} from \"../../api/indivAlbum/indivalbum_api\";\n\nconst initData = [\n  {\n    cmtCheck: 0,\n    createdAt: \"\",\n    iclass: 0,\n    inotice: 0,\n    kidNm: \"\",\n    noticeCheck: 0,\n    noticeContents: \"\",\n    noticeTitle: \"\",\n    picCheck: 0,\n  },\n];\n// const initData = [\n//   {\n//     inotice: 0,\n//     noticeTitle: \"\",\n//     noticeContents: \"\",\n//     kidNm: \"\",\n//     iclass: 0,\n//     picCheck: 0,\n//     cmtCheck: 0,\n//     noticeCheck: 0,\n//     createdAt: \"\",\n//   },\n// ];\nconst IndivAlbumList = () => {\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [indList, setIndList] = useState(initData);\n  const [fromTo, setFromTo] = useState(3 || serchParams.get(\"fromTo\"));\n  const [count, setCount] = useState(0);\n  const currentYear = new Date().getFullYear();\n\n  // 현재 출력 년도, kid 값 params에서 체크\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n  const page = serchParams.get(\"page\");\n  const iclass = serchParams.get(\"iclass\");\n  const searchValue = serchParams.get(\"searchValue\") || \"\";\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const { loginState, isLogin, isParentLogin, isTeacherLogin, isAdminLogin } =\n    useCustomLogin();\n  const ikidList = loginState.kidList;\n\n  // 페이지네이션\n  const handlePageChange = (page, pageSize) => {\n    if (isLogin) {\n      navigate(\n        `/ind?year=${year}&page=${page}&iclass=${iclass}&fromTo=${fromTo}`,\n      );\n    } else {\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}&fromTo=${fromTo}`);\n    }\n  };\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  // 데이터 화면출력, 로그인체크\n  useEffect(() => {\n    if (isParentLogin) {\n      // 학부모 로그인\n      if (ikid === \"0\") {\n        // 연결된 아이가 없을경우\n        setTitle(\"연결 오류\");\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n      getIndAlbumParentList({\n        page,\n        iclass,\n        ikid,\n        search: searchValue,\n        errorFn,\n        successFn,\n      });\n    } else if (isLogin) {\n      // 선생님 로그인\n      if ((isTeacherLogin && iclass == loginState.iclass) || isAdminLogin) {\n        getIndAlbumList({\n          page,\n          iclass,\n          ikid,\n          search: searchValue,\n          errorFn,\n          successFn,\n        });\n      } else {\n        setTitle(\"접근 제한\");\n        setSubTitle(\"담당한 반 앨범만 열람 가능합니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n    } else {\n      // 로그인 안했을때\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n      setIsNavigate(\"/login\");\n    }\n  }, [year, ikid, iclass, page, fromTo]);\n\n  // 데이터연동 결과\n  const successFn = res => {\n    setIndList(res.list);\n    setCount(res.noticeCnt);\n  };\n  const errorFn = res => {\n    console.log(res);\n    // setIsOpen(true);\n    // setTitle(\"데이터 없음\");\n    // setSubTitle(res);\n\n    const url = isLogin\n      ? `/ind/album?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}`\n      : `/ind/album?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}`;\n\n    if (fromTo != 3) {\n      setFromTo(3);\n      setIsNavigate(url);\n    } else {\n      setIsNavigate(-1);\n    }\n  };\n\n  // 작성자 분류\n  // 식별코드정보값 가져오기\n\n  const handleFromTo = e => {\n    const writer = e.target.value;\n    const url = isLogin\n      ? `/ind/album?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}&fromTo=`\n      : `/ind/album?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}&fromTo=`;\n    const num =\n      isLogin && writer == \"teacher\"\n        ? 1\n        : isLogin && writer == \"parent\"\n        ? 0\n        : isParentLogin && writer == \"parent\"\n        ? 1\n        : isParentLogin && writer == \"teacher\"\n        ? 0\n        : 3;\n    // const num = writer == \"teacher\" ? 1 : writer == \"parent\" ? 0 : 3;\n\n    navigate(url + num, { state: { writer } });\n    setFromTo(num);\n  };\n\n  // 검색\n  const handleSearch = value => {\n    if (isParentLogin) {\n      getIndParentList({\n        page: 1,\n        year,\n        ikid,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, ikid, fromTo, searchValue: value });\n    } else if (isLogin) {\n      // 선생님 로그인\n      getIndTeacherList({\n        page: 1,\n        year,\n        iclass,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, iclass, fromTo, searchValue: value });\n    }\n  };\n\n  const errorSerchFn = res => {\n    setIsOpen(true);\n    setTitle(\"데이터 없음\");\n    setSubTitle(res);\n    setSearchParams({ page: 1, year, iclass, fromTo, searchValue: \"\" });\n  };\n\n  return (\n    <IndWrap>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <TabWrap>\n        {/* <Link to={pathname + search}>알림장</Link> */}\n        {isParentLogin ? (\n          <Link\n            to={`/ind?year=${currentYear}&page=1&iclass=${iclass}&ikid=${ikid}`}\n          >\n            알림장\n          </Link>\n        ) : (\n          <Link to={`/ind?year=${currentYear}&page=1&iclass=${iclass}`}>\n            알림장\n          </Link>\n        )}\n        <Link to={`/ind/album${search}`} className=\"active\">\n          추억앨범\n        </Link>\n      </TabWrap>\n      <TitleWrap className=\"ind-btn-wrap\">\n        {isLogin ? (\n          <FromToBtnWrap fromTo={fromTo} isLogin={isLogin}>\n            {/* <button\n              onClick={e => handleFromTo(e)}\n              value={\"teacher\"}\n              className=\"teacher\"\n            >\n              {isLogin ? \"내가 쓴\" : \"내가 받은\"} 글\n            </button>\n            <button\n              onClick={e => handleFromTo(e)}\n              value={\"parent\"}\n              className=\"parent\"\n            >\n              {isLogin ? \"내가 받은\" : \"내가 쓴\"} 글\n            </button>\n            {fromTo != 3 ? (\n              <button onClick={e => handleFromTo(e)} value={\"all\"}>\n                모아보기\n              </button>\n            ) : null} */}\n          </FromToBtnWrap>\n        ) : (\n          <FromToBtnWrap fromTo={fromTo} isLogin={isParentLogin}>\n            {/* <button\n              onClick={e => handleFromTo(e)}\n              value={\"parent\"}\n              className=\"parent\"\n            ></button>\n            {fromTo != 3 ? (\n              <button onClick={e => handleFromTo(e)} value={\"all\"}>\n                모아보기\n              </button>\n            ) : null} */}\n          </FromToBtnWrap>\n        )}\n        <FlexBox>\n          {/* 권한별 서치버튼 */}\n          {isLogin ? (\n            <IndTeacherBtnComponent\n              iclass={iclass}\n              indList={indList}\n              year={year}\n              page={page}\n            />\n          ) : (\n            <IndParentBtnComponent\n              ikidList={ikidList}\n              indList={indList}\n              ikid={ikid}\n              year={year}\n              page={page}\n            />\n          )}\n          <Search\n            placeholder=\"이름을 입력하세요.\"\n            allowClear\n            onSearch={value => {\n              handleSearch(value);\n            }}\n            size={\"large\"}\n          />\n          {isLogin ? (\n            <GreenBtn\n              onClick={() => {\n                navigate(\"/ind/album/write\");\n              }}\n              className=\"btn\"\n            >\n              글쓰기\n            </GreenBtn>\n          ) : null}\n        </FlexBox>\n      </TitleWrap>\n      <ReadAllIndAlbum\n        listData={indList}\n        year={year}\n        ikid={ikid}\n        iclass={iclass}\n        page={page}\n      />\n      <PageNum>\n        <Pagination\n          defaultCurrent={page}\n          total={count}\n          pageSize={12}\n          onChange={handlePageChange}\n        />\n      </PageNum>\n    </IndWrap>\n  );\n};\n\nexport default IndivAlbumList;\n"],"names":["path","concat","SERVER_URL","getIndAlbumList","async","page","iclass","ikid","search","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndAlbumParentList","_ref2","postIndAlbum","product","_ref4","post","console","log","code","listData","year","loginState","isLogin","isParentLogin","useCustomLogin","_jsx","IndListWrap","children","IndList","initData","cmtCheck","createdAt","inotice","kidNm","noticeCheck","noticeContents","noticeTitle","picCheck","IndivAlbumList","navigate","useNavigate","pathname","useLocation","serchParams","setSearchParams","useSearchParams","indList","setIndList","useState","fromTo","setFromTo","count","setCount","currentYear","Date","getFullYear","searchValue","isTeacherLogin","isAdminLogin","ikidList","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","list","noticeCnt","url","errorSerchFn","_jsxs","IndWrap","ModalOneBtn","handleOk","TabWrap","Link","to","className","TitleWrap","FromToBtnWrap","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","Search","placeholder","allowClear","onSearch","value","getIndParentList","getIndTeacherList","handleSearch","size","GreenBtn","onClick","ReadAllIndAlbum","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}