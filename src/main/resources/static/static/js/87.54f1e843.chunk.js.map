{"version":3,"file":"static/js/87.54f1e843.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeDetails.js","pages/notice/NoticeList.js","pages/notice/NoticeModify.js","styles/ui/buttons.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nexport const path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=1`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\nexport const getTitlesFromExternalAPI = async () => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // API가 제목의 배열을 반환한다고 가정하고, 실제 API 응답 구조에 따라 수정하세요.\r\n      return res.data.map(item => item.fullTitle);\r\n    } else {\r\n      console.error(\"외부 API에서 제목을 가져오는 데 실패했습니다.\");\r\n      return [];\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"외부 API에서 제목을 가져오는 동안 오류가 발생했습니다:\",\r\n      error,\r\n    );\r\n    return [];\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getDetail } from \"../../api/notice/notice_api\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport \"../../styles/notice/gallery.css\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nexport const obj = {\r\n  fullTitle: \"\",\r\n  fullContents: \"\",\r\n  writer: \"\",\r\n  createdAt: \"\",\r\n  pics: [\"\"],\r\n};\r\n\r\nconst NoticeDetails = () => {\r\n  const params = useSearchParams();\r\n\r\n  const [postNumber, setPostNumber] = useState(0);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [detailData, setDetailData] = useState(obj);\r\n  const [detailImage, setDetailImage] = useState([]);\r\n  const { tno } = useParams();\r\n  console.log(\"tno:\", tno);\r\n  const navigate = useNavigate();\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\r\n    navigate(\"/notice\");\r\n\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const successFn = result => {\r\n    setDetailData(result);\r\n    const pics = result.pics;\r\n    const newImages = pics.map((pic, index) => ({\r\n      original: `http://192.168.0.144:5224/pic/fullnotice/${tno}/` + pic,\r\n      thumbnail: `http://192.168.0.144:5224/pic/fullnotice/${tno}/` + pic,\r\n    }));\r\n\r\n    setDetailImage(prevDetailImage => [...prevDetailImage, ...newImages]);\r\n    setPostNumber(pics.length); // 이미지 번호를 1부터 시작하도록 수정\r\n  };\r\n\r\n  // console.log(\"!!!!\", detailImage);\r\n  const failFn = result => {};\r\n  const errorFn = result => {};\r\n  useEffect(() => {\r\n    getDetail({ tno, successFn, failFn, errorFn });\r\n  }, [tno]);\r\n  // console.log(detailData);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>유치원 소식</PageTitle>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderTop: \"1.5px solid #00876D\",\r\n            borderBottom: \"1.5px solid #00876D\",\r\n            width: \"100%\",\r\n            background: \"white\",\r\n            textAlign: \"center\",\r\n            paddingTop: 20,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"auto\" }}>\r\n              <p style={{ margin: 0, fontSize: 27 }}>{detailData.fullTitle}</p>\r\n            </div>\r\n            <p style={{ marginRight: 20, fontSize: 15, color: \"#999\" }}>\r\n              {detailData.createdAt}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              borderTop: \"1.5px solid #DDDDDD\",\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            <div style={{ margin: 40, maxWidth: 500, display: \"inline-block\" }}>\r\n              <ImageGallery items={detailImage} thumbnailPosition=\"left\" />\r\n            </div>\r\n          </div>\r\n          <p style={{ margin: 30, textAlign: \"center\", fontSize: 20 }}>\r\n            {detailData.fullContents}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <div style={{ marginRight: 10 }}>\r\n            <Link to=\"/notice\">\r\n              <GreenBtn>목록보기</GreenBtn>\r\n            </Link>\r\n          </div>\r\n          <div style={{ marginRight: 10 }}>\r\n            <Link to={`/notice/modify/${tno}`}>\r\n              <BlueBtn>수정</BlueBtn>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 삭제 모달 */}\r\n      <Modal\r\n        title=\"정말 삭제할까요?\"\r\n        open={isDeleteModalOpen}\r\n        onOk={handleDeleteOk}\r\n        onCancel={handleDeleteCancel}\r\n        okText=\"확인\"\r\n        cancelText=\"취소\"\r\n      >\r\n        <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeDetails;\r\n","import { Avatar, Button, Flex, Input, List, Pagination } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\"; // useNavigate 추가\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport NoticeDetails from \"./NoticeDetails\";\r\nimport NoticeModify from \"./NoticeModify\"; // NoticeModify 컴포넌트 import\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { getList } from \"../../api/notice/notice_api\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst onSearch = (value, _e, info) => console.log(info?.source, value);\r\n\r\nconst initData = [\r\n  {\r\n    fullTitle: \"\",\r\n    writer: \"\",\r\n    fullNoticeFix: 0,\r\n    createdAt: \"\",\r\n    ifullNotice: 0,\r\n  },\r\n];\r\n\r\nconst pageSize = 10;\r\n\r\nconst NoticeList = () => {\r\n  const [current, setCurrent] = useState(1);\r\n  const [currentPageData, setCurrentPageData] = useState([]);\r\n  const [listData, setListData] = useState(initData);\r\n\r\n  const onChange = page => {\r\n    setCurrent(page);\r\n    updateCurrentPageData(page);\r\n  };\r\n\r\n  const size = \"small\";\r\n\r\n  const updateCurrentPageData = page => {\r\n    const startIndex = (page - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    // setCurrentPageData(data.slice(startIndex, endIndex));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // updateCurrentPageData(current);\r\n    const page = 1;\r\n    getList({ page, successFn, failFn, errorFn });\r\n  }, [current]);\r\n\r\n  const successFn = result => {\r\n    console.log(result);\r\n    setListData([...result]);\r\n  };\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  console.log(listData);\r\n\r\n  return (\r\n    <div style={{ marginTop: 60 }}>\r\n      <Flex\r\n        gap=\"small\"\r\n        justify=\"space-between\"\r\n        style={{\r\n          width: \"100%\",\r\n          marginBottom: 20,\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <PageTitle>유치원소식</PageTitle>\r\n        <Flex gap=\"small\" alignitems=\"center\">\r\n          <Search\r\n            placeholder=\"제목을 입력하세요.\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n            style={{\r\n              width: 330,\r\n              marginRight: 20,\r\n            }}\r\n          />\r\n          <Link to=\"/notice/write/\">\r\n            <GreenBtn\r\n              type=\"primary\"\r\n              size={size}\r\n              style={{\r\n                background: \"#D3ECC8\",\r\n                borderColor: \"#D3ECC8\",\r\n                padding: \"15px 30px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"1rem\",\r\n                color: \"#00876D\",\r\n              }}\r\n            >\r\n              글쓰기\r\n            </GreenBtn>\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <List\r\n        size=\"large\"\r\n        itemLayout=\"vertical\"\r\n        style={{\r\n          width: \"100%\",\r\n          margin: \"0 auto\",\r\n          background: \"white\",\r\n          borderTop: \"1px solid #00876D\",\r\n          borderBottom: \"1px solid #00876D\",\r\n        }}\r\n        dataSource={listData}\r\n        renderItem={(item, index) => (\r\n          <Link\r\n            to={`/notice/details/${item.ifullNotice}`}\r\n            key={item.ifullNotice}\r\n          >\r\n            <List.Item\r\n              style={{\r\n                borderLeft: \"none\",\r\n                borderRight: \"none\",\r\n                borderBottom: \"1px solid #e8e8e8\",\r\n                padding: \"12px 0\",\r\n                background: item.fullNoticeFix === 1 ? \"#E7F6ED\" : \"white\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <Link to={`/notice/details/${item.ifullNotice}`}>\r\n                <span\r\n                  style={{\r\n                    marginLeft: 20,\r\n                    color: item.fullNoticeFix === 1 ? \"#00876D\" : \"#000000\",\r\n                    fontWeight: item.fullNoticeFix === 1 ? \"bold\" : \"normal\",\r\n                  }}\r\n                >\r\n                  {item.fullTitle}\r\n                </span>\r\n              </Link>\r\n              <div style={{ marginRight: 20, color: \"gray\" }}>\r\n                <img\r\n                  src=\"/images/common/notice/clock.svg\"\r\n                  alt=\"\"\r\n                  style={{ height: 30, marginRight: 10 }}\r\n                />\r\n                {item.createdAt}\r\n              </div>\r\n            </List.Item>\r\n          </Link>\r\n        )}\r\n      ></List>\r\n\r\n      <Pagination\r\n        current={current}\r\n        onChange={onChange}\r\n        // total={data.length}\r\n        pageSize={pageSize}\r\n        style={{\r\n          marginTop: 35,\r\n          textAlign: \"center\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React, { useState } from \"react\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Upload, Modal } from \"antd\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst NoticeWrite = () => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [setIsDeleteModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const onChange = e => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList];\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess();\r\n    }, 1000);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: handleCancleOk,\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then(() => {\r\n        const { Input, TextArea } = form.getFieldsValue();\r\n        if (!Input || !TextArea) {\r\n          Modal.warning({\r\n            title: \"입력 오류\",\r\n            content: \"제목과 내용을 입력해주세요.\",\r\n          });\r\n        } else {\r\n          showModal();\r\n        }\r\n      })\r\n      .catch(errorInfo => {\r\n        console.log(\"Validation failed:\", errorInfo);\r\n      });\r\n  };\r\n  const handleCancleOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\r\n    navigate(\"/notice\");\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>유치원 소식</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Checkbox onChange={onChange} style={{ marginBottom: 10 }}>\r\n          상단고정\r\n        </Checkbox>\r\n\r\n        <Form form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"Input\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"TextArea\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Upload\r\n            action=\"http://localhost:3000/notice/write\"\r\n            listType=\"picture\"\r\n            fileList={fileList}\r\n            onChange={handleChange}\r\n            customRequest={customRequest}\r\n            className=\"upload-list-inline\"\r\n            maxCount={3}\r\n          >\r\n            <Button icon={<UploadOutlined />}>업로드 (최대 3개 파일)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: 35,\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <GreenBtn htmlType=\"submit\" onClick={onFinish}>\r\n          수정\r\n        </GreenBtn>\r\n        <PinkBtn onClick={handleCancelConfirmation} style={{ marginLeft: 20 }}>\r\n          취소\r\n        </PinkBtn>\r\n      </div>\r\n\r\n      <Link to=\"/notice\">\r\n        <Modal\r\n          title=\"수정 완료\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 수정되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeWrite;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","obj","fullTitle","fullContents","writer","createdAt","pics","NoticeDetails","useSearchParams","postNumber","setPostNumber","useState","isDeleteModalOpen","setIsDeleteModalOpen","detailData","setDetailData","detailImage","setDetailImage","useParams","console","log","navigate","useNavigate","result","newImages","map","pic","index","original","thumbnail","prevDetailImage","length","useEffect","_jsxs","_Fragment","children","_jsx","PageTitle","style","display","flexDirection","alignItems","marginTop","borderTop","borderBottom","width","background","textAlign","paddingTop","justifyContent","margin","fontSize","marginRight","color","maxWidth","ImageGallery","items","thumbnailPosition","Link","to","GreenBtn","BlueBtn","PinkBtn","onClick","showDeleteModal","Modal","title","open","onOk","handleDeleteOk","onCancel","handleDeleteCancel","okText","cancelText","Search","Input","onSearch","value","_e","info","source","initData","fullNoticeFix","ifullNotice","NoticeList","current","setCurrent","currentPageData","setCurrentPageData","listData","setListData","updateCurrentPageData","Flex","gap","justify","marginBottom","alignitems","placeholder","allowClear","type","size","borderColor","padding","borderRadius","List","itemLayout","dataSource","renderItem","item","Item","borderLeft","borderRight","cursor","marginLeft","fontWeight","src","alt","height","Pagination","onChange","pageSize","NoticeWrite","form","Form","useForm","fileList","setFileList","isModalVisible","setIsModalVisible","onFinish","validateFields","then","TextArea","getFieldsValue","warning","content","catch","errorInfo","handleCancleOk","Checkbox","e","target","checked","name","rules","required","message","Upload","action","listType","customRequest","file","onSuccess","setTimeout","className","maxCount","Button","icon","UploadOutlined","htmlType","handleCancelConfirmation","confirm","visible","handleOk","handleCancel","cancelButtonProps","defaultBtnStyle","fontFamily","border","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","OrangeBtn","_templateObject3","orangeLight","orangeDeep","_templateObject4","pinkLight","pinkDeep","_templateObject5","blueLight","blueDeep","PurpleBtn","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","GrayBtn","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","AllBtn","_templateObject12","_templateObject13"],"sourceRoot":""}