{"version":3,"file":"static/js/733.fedfa5ee.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/LightBox.js","components/album/DetailsAlbum.js","pages/album/AlbumDetails.js","styles/album/album.js","styles/ui/comment.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn({ ...res.data });\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// album/listall?page=1\n// 활동 앨범 전체 조회 get\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\nexport const getSearchListAll = async ({\n  page,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n    // console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    // console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path /comment\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, obj);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // &iteacher=${iteacher}&iparent=${iparent}\n    const iwriter = () => {\n      if (iteacher) {\n        return `&iteacher=${iteacher}`;\n      }\n      if (iparent) {\n        return `&iparent=${iparent}`;\n      }\n    };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import React from \"react\";\n\nconst LightBox = ({ imgSrc, open, closeLightbox }) => {\n  if (!open) return null;\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000,\n      }}\n      onClick={closeLightbox}\n    >\n      <img\n        src={imgSrc}\n        style={{\n          maxWidth: \"100%\",\n          maxHeight: \"100%\",\n          objectFit: \"contain\",\n        }}\n      />\n      <button\n        onClick={closeLightbox}\n        style={{\n          position: \"fixed\",\n          top: \"20px\",\n          right: \"20px\",\n          zIndex: 1010,\n        }}\n      >\n        닫기\n      </button>\n    </div>\n  );\n};\n\nexport default LightBox;\n","import { Form, Modal } from \"antd\";\nimport React, { useEffect, useState, useRef } from \"react\";\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/effect-cube\";\nimport \"swiper/css/pagination\";\nimport { EffectCoverflow, Keyboard, Pagination } from \"swiper/modules\";\nimport LightBox from \"./LightBox\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport {\n  AlbumTitle,\n  AlbumTopBar,\n  AlbumWrap,\n  ContentWrap,\n  DetailsText,\n  Footer,\n  MainContent,\n  TitleWrap,\n  SwiperWrap,\n} from \"../../styles/album/album\";\nimport {\n  BlueBtn,\n  GreenBtn,\n  PinkBtn,\n  BtnWrap,\n  OrangeBtn,\n} from \"../../styles/ui/buttons\";\nimport Comment from \"../common/Comment\";\nimport {\n  deleteAlbum,\n  deleteAlbumComment,\n  getAlbum,\n  postAlbumComment,\n} from \"../../api/album/album_api\";\nimport Loading from \"../loading/Loading\";\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\nimport { PageTitle } from \"../../styles/basic\";\nimport {\n  CommentBox,\n  CommentView,\n  CommentWrap,\n  CommentWrite,\n} from \"../../styles/ui/comment\";\nimport TextArea from \"antd/es/input/TextArea\";\nconst path = `${IMG_URL}/pic/album`;\n\nconst host = `${SERVER_URL}/album`;\n// import required modules\nconst initAlbumCommnet = [\n  {\n    albumTitle: \"\",\n    albumContents: \"\",\n    albumPic: [],\n    albumComments: [],\n    createdAt: \"\",\n  },\n];\n\nconst DetailsAlbum = ({ pno, isLogin, loginState }) => {\n  const navigate = useNavigate();\n\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\n    useState(false);\n\n  // 댓글관련\n  const [commentState, setCommentState] = useState(false);\n  const [commentNum, setCommentNum] = useState(null);\n  const iwriter = loginState.iteacher || loginState.iparent;\n  const ilevel = loginState.role === \"PARENT\" ? 1 : loginState.ilevel;\n  const [isDelComment, setIsDelComment] = useState(false); // 댓글삭제 모달\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n  // 글 삭제\n  const [delOpen, setDelOpen] = useState(false);\n\n  // 삭제 성공 상태 추가\n  const [deleteSuccess, setDeleteSuccess] = useState(false);\n\n  // lightbox\n  const [lightbox, setLightbox] = useState({ open: false, imgSrc: \"\" });\n  const openLightbox = imgSrc => setLightbox({ open: true, imgSrc: imgSrc });\n  const closeLightbox = () => setLightbox({ open: false, imgSrc: \"\" });\n  const [confirmAction, setConfirmAction] = useState(null);\n  // 컴포넌트 마운트 시 데이터 불러오기\n  // Lightbox 상태에 따라 Swiper 높이 조절\n  // console.log(\"pno\", pno);\n  useEffect(() => {\n    getAlbum({\n      pno: pno,\n      successFn: data => {\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\n        setIsLoading(false); // 로딩 상태 업데이트\n      },\n      failFn: message => {\n        console.error(message);\n        setIsLoading(false);\n      },\n      errorFn: data => {\n        console.error(data);\n        setIsLoading(false);\n      },\n    });\n    const swiperElement = document.querySelector(\".swiper\");\n    if (lightbox.open) {\n      swiperElement.style.height = \"55vh\";\n    } else {\n      swiperElement.style.height = \"100%\";\n    }\n  }, [pno, lightbox.open, commentState]); // pno 값이 변경될 때마다 getAlbum 함수를 호출\n\n  const showDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n  };\n  const handleDelOk = () => {\n    deleteAlbum({\n      ialbum: pno,\n      successFn: res => {\n        setIsDeleteModalOpen(false); // 첫 번째 모달 닫기\n        setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\n\n        // 사용자가 '확인' 버튼을 누르지 않았을 경우, 1.5초 후에 페이지 이동\n        const timeoutId = setTimeout(() => {\n          navigate(\"/album\");\n        }, 1500);\n\n        // '확인' 버튼 클릭 시 처리를 위한 함수 저장\n        setConfirmAction(() => () => {\n          clearTimeout(timeoutId); // setTimeout 취소\n          navigate(\"/album\"); // 즉시 페이지 이동\n        });\n      },\n      failFn: error => {\n        // 삭제 실패 시 처리\n        Modal.error({\n          title: \"앨범 삭제 실패\",\n          content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\n        });\n      },\n      errorFn: error => {\n        console.error(\"Error deleting album:\", error);\n        Modal.error({\n          title: \"오류 발생\",\n          content:\n            \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\n        });\n      },\n    });\n  };\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setConfirmAction(() => () => {\n      clearTimeout(); // setTimeout 취소\n      navigate(\"/album\"); // 즉시 페이지 이동\n    });\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  // 비사용 모달 관련 함수 제거\n  // const handleDeleteSuccessOk = () => {\n  //   setIsDeleteSuccessModalOpen(false); // 두 번째 모달 닫기\n  //   if (confirmAction) {\n  //     confirmAction(); // 사용자 정의 '확인' 액션 실행\n  //   } else {\n  //     navigate(\"/album\"); // 즉시 페이지 이동, confirmAction이 없으면 바로 이동\n  //   }\n  // };\n  // // 모달창 취소\n  // const handleCancel = () => {\n  //   setDelOpen(false);\n  // };\n\n  // const handleDeleteCancel = () => {\n  //   setIsDeleteModalOpen(false);\n  // };\n\n  // const handleDeleteSucccessOk = () => {\n  //   setIsDeleteSuccessModalOpen(false);\n  // };\n\n  // 댓글등록\n  const [form] = Form.useForm();\n  const handleWriteComment = value => {\n    const obj = {\n      ialbum: pno,\n      albumComment: value.albumComment,\n    };\n    // console.log(obj, \"댓글등록\");\n    postAlbumComment({\n      obj,\n      successFn,\n      errorFn,\n    });\n    form.resetFields();\n  };\n  // 댓글삭제\n  const handleDeleteComment = () => {\n    if (loginState.iteacher) {\n      deleteAlbumComment({\n        ialbumComment: commentNum,\n        ialbum: pno,\n        iteacher: loginState.iteacher,\n        successFn,\n        errorFn,\n      });\n    } else {\n      deleteAlbumComment({\n        ialbumComment: commentNum,\n        ialbum: pno,\n        iparent: loginState.iparent,\n        successFn,\n        errorFn,\n      });\n    }\n    setIsDelComment(false);\n  };\n\n  const successFn = res => {\n    setCommentState(!commentState);\n    setCommentNum(null);\n    // console.log(res);\n  };\n\n  const errorFn = res => {\n    console.log(res);\n  };\n\n  return (\n    <AlbumWrap>\n      <AlbumTopBar>\n        <PageTitle>활동앨범</PageTitle>\n      </AlbumTopBar>\n      <ContentWrap>\n        <TitleWrap>\n          <h3>{albumData.albumTitle}</h3>\n          <p>{albumData.createdAt}</p>\n        </TitleWrap>\n        <MainContent>\n          <SwiperWrap>\n            <Swiper\n              loading=\"swiper-lazy-preloader swiper-lazy-preloader-white\"\n              height={200}\n              effect={\"coverflow\"}\n              grabCursor={true}\n              centeredSlides={true}\n              slidesPerView={\"auto\"}\n              coverflowEffect={{\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows: true,\n              }}\n              pagination={true}\n              keyboard={{ enabled: true }} // 키보드 제어 활성화\n              modules={[EffectCoverflow, Pagination, Keyboard]} // Keyboard 모듈 추가\n              className=\"mySwiper\"\n              // style={{ transform: `translate3d(0px, 0px, 0px)` }} //\n            >\n              {albumData &&\n                albumData.albumPic &&\n                albumData.albumPic.map((item, index) => (\n                  <SwiperSlide key={index}>\n                    <img\n                      src={`${path}/${pno}/${item}`}\n                      onClick={() => openLightbox(`${path}/${pno}/${item}`)}\n                    />\n                  </SwiperSlide>\n                ))}\n              <LightBox\n                imgSrc={lightbox.imgSrc}\n                open={lightbox.open}\n                closeLightbox={closeLightbox}\n              />\n            </Swiper>\n          </SwiperWrap>\n          <DetailsText>\n            <pre>{albumData.albumContents}</pre>\n          </DetailsText>\n          {/* 댓글창 */}\n          <CommentWrap>\n            <CommentView>\n              {Array.isArray(albumData.albumComments) &&\n                albumData.albumComments.map((item, index) => (\n                  <CommentBox\n                    key={item.ialbumComment}\n                    className={\n                      ilevel === item.ilevel && item.writerIuser == iwriter\n                        ? \"right\"\n                        : null\n                    }\n                  >\n                    <pre className=\"text\">{item.albumComment}</pre>\n                    <ul>\n                      <li className=\"name\">{item.writerName}</li>\n                      <li className=\"date\">{item.createdAt}</li>\n                    </ul>\n                    {ilevel === item.ilevel && item.writerIuser == iwriter ? (\n                      <span\n                        className=\"delete\"\n                        onClick={() => {\n                          setCommentNum(item.ialbumComment);\n                          setIsDelComment(true);\n                        }}\n                      >\n                        댓글삭제\n                      </span>\n                    ) : null}\n                  </CommentBox>\n                ))}\n            </CommentView>\n            <CommentWrite>\n              <Form form={form} onFinish={handleWriteComment}>\n                <Form.Item name=\"albumComment\">\n                  <TextArea required placeholder=\"댓글내용을 입력해주세요.\" />\n                </Form.Item>\n                <OrangeBtn>등록</OrangeBtn>\n              </Form>\n            </CommentWrite>\n          </CommentWrap>\n        </MainContent>\n        {/* 안내창 */}\n        <ModalOneBtn\n          isOpen={isOpen}\n          handleOk={handleOk}\n          title={title}\n          subTitle={subTitle}\n        />\n        {/* 글삭제 */}\n        <ModalTwoBtn\n          isOpen={isDeleteModalOpen}\n          handleOk={handleDelOk}\n          handleCancel={() => setIsDeleteModalOpen(false)}\n          title={\"앨범 삭제\"}\n          subTitle={\n            \"삭제된 앨범은 복구할 수 없습니다. \\n정말 삭제하시겠습니까?\"\n          }\n        />\n        {/* 댓글삭제 */}\n        <ModalTwoBtn\n          isOpen={isDelComment}\n          handleOk={() => handleDeleteComment()}\n          handleCancel={() => setIsDelComment(false)}\n          title={\"댓글 삭제\"}\n          subTitle={\n            \"삭제된 댓글은 복구할 수 없습니다. \\n정말 삭제하시겠습니까?\"\n          }\n        />\n        {/* 삭제 성공 모달 */}\n        {isDeleteSuccessModalOpen && (\n          <ModalOneBtn\n            isOpen={isDeleteSuccessModalOpen}\n            handleOk={() => setIsDeleteSuccessModalOpen(false)}\n            title=\"삭제 완료\"\n            subTitle=\"앨범이 성공적으로 삭제되었습니다.\"\n          />\n        )}\n      </ContentWrap>\n      <Footer>\n        <BtnWrap style={{ justifyContent: \"flex-end\" }}>\n          <GreenBtn\n            onClick={() => {\n              navigate(\"/album\");\n            }}\n          >\n            목록보기\n          </GreenBtn>\n\n          {isLogin ? (\n            <>\n              <BlueBtn\n                onClick={() => {\n                  navigate(`${host}/modify/${pno}`);\n                }}\n              >\n                수정\n              </BlueBtn>\n              <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\n            </>\n          ) : null}\n        </BtnWrap>\n      </Footer>\n    </AlbumWrap>\n  );\n};\n\nexport default DetailsAlbum;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport DetailsAlbum from \"../../components/album/DetailsAlbum\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst AlbumDetails = () => {\n  let { pno } = useParams();\n  const { isLogin, loginState } = useCustomLogin(); // 로그인 상태를 가져옵니다.\n\n  // 로그인 상태에서 iteacher 값을 확인합니다.\n  return <DetailsAlbum pno={pno} isLogin={isLogin} loginState={loginState} />;\n};\nexport default AlbumDetails;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, mq } from \"../basic\";\n\nexport const CommentWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border-top: 1px solid ${colors.grayBar};\n  padding: 2rem 5rem;\n  ${mq.mobileBig} {\n    padding: 1rem;\n  }\n`;\n\nexport const CommentView = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-height: 50vh;\n  overflow-y: auto;\n`;\nexport const CommentBox = styled.div`\n  position: relative;\n  display: inline-block;\n  max-width: 50rem;\n  padding: 1rem;\n  ${boxStyle}\n  background: ${colors.greenLight2};\n  margin-bottom: 2rem;\n  &.right {\n    background: ${colors.orangeLight};\n    margin-left: auto;\n    text-align: right;\n    margin-bottom: 5rem;\n  }\n  &:not(.right) {\n    margin-right: auto;\n  }\n  ul {\n    margin-top: 1rem;\n    li {\n      display: inline-block;\n      font-size: 1.4rem;\n      color: ${colors.grayDeep};\n\n      &.date {\n        font-size: 1.3rem;\n        color: #ccc;\n        margin-left: 0.5rem;\n        :before {\n          content: \"|\";\n          vertical-align: 7%;\n          margin-right: 0.5rem;\n        }\n      }\n    }\n  }\n  .delete {\n    cursor: pointer;\n    font-size: 1.2rem;\n    color: ${colors.grayDeep};\n    position: absolute;\n    right: 0;\n    top: calc(100% + 1rem);\n    transition: 0.2s;\n    padding-left: 1rem;\n    :hover {\n      font-weight: 600;\n      color: ${colors.orangeDeep};\n    }\n  }\n`;\nexport const CommentWrite = styled.div`\n  position: relative;\n  button {\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n  }\n  textarea {\n    padding-right: 12rem;\n    font-size: 1.4rem !important;\n    min-height: 6rem;\n    max-height: 6rem;\n  }\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","imgSrc","open","closeLightbox","_jsxs","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","onClick","children","_jsx","src","maxWidth","maxHeight","objectFit","IMG_URL","host","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","isLogin","loginState","navigate","useNavigate","albumData","setAlbumData","useState","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","commentState","setCommentState","commentNum","setCommentNum","ilevel","role","isDelComment","setIsDelComment","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","delOpen","setDelOpen","deleteSuccess","setDeleteSuccess","lightbox","setLightbox","confirmAction","setConfirmAction","useEffect","message","swiperElement","document","querySelector","height","form","Form","useForm","AlbumWrap","AlbumTopBar","PageTitle","ContentWrap","TitleWrap","MainContent","SwiperWrap","Swiper","loading","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","keyboard","enabled","modules","EffectCoverflow","Pagination","Keyboard","className","map","item","index","SwiperSlide","openLightbox","LightBox","DetailsText","CommentWrap","CommentView","Array","isArray","CommentBox","writerIuser","albumComment","writerName","CommentWrite","onFinish","value","resetFields","Item","name","TextArea","required","placeholder","OrangeBtn","ModalOneBtn","handleOk","clearTimeout","ModalTwoBtn","handleDelOk","timeoutId","setTimeout","Modal","content","handleCancel","Footer","BtnWrap","GreenBtn","_Fragment","BlueBtn","PinkBtn","showDeleteModal","AlbumDetails","useParams","useCustomLogin","DetailsAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","_templateObject6","fonts","kotraHope","_templateObject7","white","greenDeep","h3","_templateObject8","_templateObject9","grayBar","grayDeep","_templateObject10","_templateObject11","_templateObject12","_templateObject13","FileListStyle","_templateObject14","WriteWrap","_templateObject15","boxStyle","greenLight2","orangeLight","orangeDeep"],"sourceRoot":""}