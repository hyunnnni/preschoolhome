{"version":3,"file":"static/js/118.9c71b249.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeModify.js","styles/album/album.js","styles/notice/notice.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nconst path = `${SERVER_URL}/api/full`;\n\n// 유치원소식 불러오기\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data\", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 리스트 불러오기\nexport const getList = async ({ page, search, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 유치원소식 게시글 등록하기\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 유치원소식 게시글 삭제하기\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\n    const status = res.status.toString();\n\n    if (status.charAt(0) === \"2\") {\n      successFn();\n    } else {\n      failFn(\"삭제 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 수정하기\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, data, header);\n\n    const status = res.status.toString();\n    console.log(\"res.data\", res.data);\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 수정시 정보 조회하기\nexport const editNotice = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ifullNotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { IMG_URL } from \"../../api/config\";\nimport { editNotice, putNotice } from \"../../api/notice/notice_api\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport { FileListStyle, WriteWrap } from \"../../styles/album/album\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { NoticeWrap } from \"../../styles/notice/notice\";\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\n\nconst path = `${IMG_URL}/api/full`;\nconst imgpath = `${IMG_URL}/pic/fullnotice`;\nconst customRequest = ({ onSuccess }) => {\n  onSuccess(\"ok\");\n};\nconst obj = [\n  {\n    fullTitle: \"\",\n    fullContents: \"\",\n    writer: \"\",\n    writerName: \"\",\n    createdAT: \"\",\n    fullNoticeFix: 0,\n    fullPic: [],\n  },\n];\n\nconst NoticeModify = () => {\n  const { tno } = useParams();\n  const { ifullPic } = useParams();\n  const formRef = useRef();\n  const [noticeData, setNoticeData] = useState(obj); // noticeData 상태를 추가\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [deletedPics, setDeletedPics] = useState([]);\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\n  const navigate = useNavigate();\n  const [newPics, setNewPics] = useState([]);\n\n  // 모달 상태 관리\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showCancelConfirmModal, setshowCancelConfirmModal] = useState(false);\n\n  // const [initialData, setInitialData] = useState({\n  //   fullTitle: \"\",\n  //   fullContents: \"\",\n  //   fullNoticeFix: \"\",\n  //   pics: [],\n  // });\n\n  const handleGreenButtonClick = () => {\n    formRef.current.submit(); // Form의 submit 메서드 호출\n  };\n\n  const onChange = e => {\n    // console.log(`checked = ${e.target.checked}`);\n    setFullNoticeFix(e.target.checked);\n  };\n\n  const handleSuccessModalOk = () => {\n    setShowSuccessModal(false);\n  };\n\n  // 취소 확인 모달 핸들러\n  const handleCancelConfirmModalOk = () => {\n    setshowCancelConfirmModal(false);\n    navigate(`/notice/details/${tno}`);\n  };\n\n  const handleCancelConfirmation = () => {\n    setshowCancelConfirmModal(true); // 취소 확인 모달 표시\n  };\n\n  const handleFail = errorMessage => {\n    Modal.error({\n      title: \"유치원소식 수정 실패\",\n      content: errorMessage,\n    });\n  };\n\n  const handleError = error => {\n    console.error(\"유치원소식 수정 오류:\", error);\n    Modal.error({\n      title: \"유치원소식 수정 중 오류 발생\",\n      content:\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\n    });\n  };\n\n  const onFinish = async data => {\n    const formData = new FormData();\n\n    const noticeInfo = {\n      ifullNotice: tno,\n      fullTitle: data.fullTitle,\n      fullContents: data.fullContents,\n      fullNoticeFix: data.fullNoticeFix,\n      iteacher: 1,\n    };\n\n    // deletedPics 배열에 항목이 있는 경우에만 delPics 속성을 추가\n    if (deletedPics.length > 0) {\n      noticeInfo.delPics = deletedPics;\n    }\n    const dto = new Blob([JSON.stringify(noticeInfo)], {\n      type: \"application/json\",\n    });\n    formData.append(\"dto\", dto);\n\n    console.log(\"================= 보내는 데이터 : \", dto);\n\n    // 새로 추가된 이미지 파일을 FormData에 추가합니다.\n    console.log(\"현재 남아있는 fileList \", fileList);\n    fileList.forEach(async file => {\n      console.log(\"file\", file);\n      if (file.originFileObj) {\n        // 새로운 파일인 경우, 파일 데이터를 추가합니다.\n        formData.append(\"pics\", file.originFileObj);\n      }\n    });\n\n    // 서버에 요청을 보냅니다.\n    try {\n      const response = await putNotice({\n        data: formData,\n        successFn: () => setShowSuccessModal(true), // 성공 모달 표시\n        failFn: handleFail,\n        errorFn: handleError,\n      });\n\n      // 응답 처리\n      console.log(\"Response from putNotice:\", response);\n    } catch (error) {\n      handleError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchNoticeData = async () => {\n      editNotice({\n        tno: tno,\n        successFn: data => {\n          setNoticeData(data);\n          form.setFieldsValue({\n            fullTitle: data.fullTitle,\n            fullContents: data.fullContents,\n          });\n          console.log(\"data확인\", data);\n\n          // Transform album pictures for the fileList state\n          // console.log(\"데이터 확인\", data);\n          const transformedFileList = data.fullPic.map((fullPic, index) => ({\n            ifullPic: fullPic.ifullPic, // uid is required to be unique\n            name: fullPic.fullPic, // file name\n            status: \"done\", // upload status\n            url: `${imgpath}/${tno}/${fullPic.fullPic}`, // file URL, adjust the path as needed\n          }));\n          console.log(\"transformedFileList\", transformedFileList);\n          setFileList(transformedFileList);\n        },\n        failFn: errorMessage => {\n          console.error(\"Notice fetch failed:\", errorMessage);\n          // Handle failure (show error message to user, etc.)\n        },\n        errorFn: errorData => {\n          console.error(\"Error fetching notice:\", errorData);\n          // Handle error (show error message to user, etc.)\n        },\n      });\n    };\n\n    fetchNoticeData();\n  }, [tno, form]);\n\n  const beforeUpload = file => {\n    // 새로 업로드되는 파일을 fileList에 추가\n    const newFileList = [\n      ...fileList,\n      {\n        uid: file.uid, // 파일의 고유 ID\n        name: file.name, // 파일 이름\n        status: \"done\", // 파일 상태\n        originFileObj: file, // 파일 객체\n      },\n    ];\n    setFileList(newFileList);\n    return false; // 파일을 자동으로 업로드하지 않음\n  };\n\n  const handleChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList); // 기존 파일 리스트 업데이트\n    const newUploadedPics = newFileList\n      .filter(file => file.originFileObj) // 새로 업로드된 파일만 선택\n      .map(file => file.name); // 파일 이름 추출\n    setNewPics(newUploadedPics); // 새로 업로드된 파일 이름을 상태에 저장\n  };\n  // 이미지 파일을 삭제할 때 호출될 함수\n  const onRemove = file => {\n    console.log(\"file\", file);\n\n    const newFileList = fileList.filter(\n      item => item.ifullPic !== file.ifullPic,\n    );\n    setFileList(newFileList);\n    if (typeof file.ifullPic === \"number\") {\n      setDeletedPics([...deletedPics, file.ifullPic]);\n    }\n\n    return true; // 삭제 처리를 진행\n  };\n  console.log(\"deletedPics\", deletedPics);\n  // if (file.originFileObj) {\n  //   return true;\n  // }\n\n  // if (file.ifullPic) {\n  //\n  // }\n\n  useEffect(() => {\n    // console.log(\"삭제 목록 deletedPics : \", deletedPics);\n  }, [deletedPics]);\n\n  useEffect(() => {\n    // console.log(\"현재 보이는 목록 fileList : \", fileList);\n  }, [fileList]);\n\n  return (\n    <NoticeWrap>\n      <PageTitle>유치원 소식 수정</PageTitle>\n      <WriteWrap>\n        <Checkbox\n          onChange={onChange}\n          style={{ marginBottom: 10 }}\n          checked={fullNoticeFix}\n        >\n          상단고정\n        </Checkbox>\n        <Form ref={formRef} form={form} onFinish={onFinish}>\n          <Form.Item\n            name=\"fullTitle\"\n            initialValue={noticeData.noticeTitle} // 기존 값 설정\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\n          >\n            <Input placeholder=\"제목 입력\" />\n          </Form.Item>\n          <Form.Item\n            name=\"fullContents\"\n            initialValue={noticeData.noticeContents} // 기존 값 설정\n            style={{ height: \"150px\" }}\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\n          >\n            <Input.TextArea\n              placeholder=\"내용 입력\"\n              style={{ height: \"150px\" }}\n            />\n          </Form.Item>\n          <FileListStyle>\n            <Upload.Dragger\n              action={`${path}`}\n              listType=\"picture\"\n              fileList={fileList}\n              beforeUpload={beforeUpload}\n              onRemove={onRemove}\n              onChange={handleChange}\n              customRequest={customRequest}\n              className=\"upload-list-inline\"\n              multiple={true}\n              maxCount={10}\n            >\n              <Button icon={<UploadOutlined />}>업로드</Button>\n            </Upload.Dragger>\n          </FileListStyle>\n        </Form>\n      </WriteWrap>\n      <BtnWrap right>\n        <GreenBtn onClick={handleGreenButtonClick}>수정</GreenBtn>\n        <PinkBtn type=\"button\" onClick={handleCancelConfirmation}>\n          취소\n        </PinkBtn>\n      </BtnWrap>\n\n      <Link to={`/notice/details/${tno}`}>\n        {showSuccessModal && (\n          <ModalOneBtn\n            isOpen={showSuccessModal}\n            handleOk={handleSuccessModalOk}\n            title=\"수정 완료\"\n            subTitle=\"성공적으로 수정되었습니다.\"\n          />\n        )}\n      </Link>\n\n      {/* 취소 확인 모달 */}\n      {showCancelConfirmModal && (\n        <ModalOneBtn\n          isOpen={showCancelConfirmModal}\n          handleOk={handleCancelConfirmModalOk}\n          title=\"정말 취소할까요?\"\n          subTitle=\"작성된 내용은 저장되지 않습니다.\"\n        />\n      )}\n    </NoticeWrap>\n  );\n};\n\nexport default NoticeModify;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { colors, mq } from \"../basic\";\nimport { List } from \"antd\";\n\nexport const NoticeWrap = styled.div`\n  position: relative;\n  .ant-list-lg .ant-list-item {\n    padding: 0;\n  }\n`;\nexport const ListWrap = styled(List)`\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  background: ${colors.white};\n`;\n\nexport const NoticeItem = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 1.5rem 3rem;\n  &.notice {\n    background: ${colors.greenLight2};\n    border-top: 1px solid rgba(5, 5, 5, 0.06);\n    p {\n      color: ${colors.greenDeep};\n      font-weight: 600;\n    }\n  }\n  img {\n    height: 2.5rem;\n  }\n`;\n\nexport const NoticeIcon = styled.div`\n  position: relative;\n  width: 3rem;\n  ${mq.mobileBig} {\n    display: none;\n  }\n`;\n\nexport const NoticeTitle = styled.p`\n  position: relative;\n  width: calc(100% - 25rem);\n  ${mq.mobileBig} {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const NoticeDate = styled.div`\n  position: relative;\n  text-align: right;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  color: ${colors.grayDeep};\n  img {\n    height: 2rem;\n  }\n`;\n\nexport const NoticeGallery = styled.div`\n  max-width: 60rem;\n  margin: 0 auto;\n  margin-top: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","console","log","data","error","getList","page","search","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","editNotice","_ref6","IMG_URL","imgpath","customRequest","onSuccess","obj","fullTitle","fullContents","writer","writerName","createdAT","fullNoticeFix","fullPic","NoticeModify","useParams","ifullPic","formRef","useRef","noticeData","setNoticeData","useState","isModalVisible","setIsModalVisible","deletedPics","setDeletedPics","form","Form","useForm","fileList","setFileList","setFullNoticeFix","navigate","useNavigate","newPics","setNewPics","showSuccessModal","setShowSuccessModal","showCancelConfirmModal","setshowCancelConfirmModal","handleFail","errorMessage","Modal","title","content","handleError","useEffect","setFieldsValue","transformedFileList","map","index","name","url","errorData","fetchNoticeData","_jsxs","NoticeWrap","children","_jsx","PageTitle","WriteWrap","Checkbox","onChange","e","target","checked","style","marginBottom","ref","onFinish","formData","FormData","noticeInfo","ifullNotice","iteacher","length","delPics","dto","Blob","JSON","stringify","type","append","forEach","file","originFileObj","Item","initialValue","noticeTitle","rules","required","Input","placeholder","noticeContents","height","TextArea","FileListStyle","Upload","Dragger","action","listType","beforeUpload","newFileList","uid","onRemove","filter","item","newUploadedPics","className","multiple","maxCount","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","Link","to","ModalOneBtn","isOpen","handleOk","handleSuccessModalOk","subTitle","handleCancelConfirmModalOk","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","_templateObject15","ListWrap","List","NoticeItem","greenLight2","NoticeIcon","NoticeTitle","p","NoticeDate","NoticeGallery"],"sourceRoot":""}