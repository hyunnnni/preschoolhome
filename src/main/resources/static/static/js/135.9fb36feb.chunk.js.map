{"version":3,"file":"static/js/135.9fb36feb.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","components/notice/ListNotice.js","pages/notice/NoticeList.js","styles/album/album.js","styles/notice/notice.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data\", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, search, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/listall?page=${page}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    console.log(\"res.data\", res.data);\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정시 정보 조회하기\r\nexport const editNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { Flex, Input, List, Pagination } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { getList } from \"../../api/notice/notice_api\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { AlbumTopBar, SearchBar } from \"../../styles/album/album\";\r\nimport { PageNum, UserTopRight } from \"../../styles/adminstyle/guardianlist\";\r\nimport {\r\n  ListWrap,\r\n  NoticeDate,\r\n  NoticeIcon,\r\n  NoticeItem,\r\n  NoticeTitle,\r\n  NoticeWrap,\r\n} from \"../../styles/notice/notice\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst pageSize = 10;\r\n\r\nconst NoticeList = () => {\r\n  const navigate = useNavigate();\r\n  const [fixedNotices, setFixedNotices] = useState([]);\r\n  const [normalNotices, setNormalNotices] = useState([]);\r\n  const [current, setCurrent] = useState(1);\r\n  const [listData, setListData] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const { isLogin } = useCustomLogin();\r\n\r\n  const onChange = page => {\r\n    setCurrent(page);\r\n    fetchPageData(page);\r\n  };\r\n\r\n  const handleSearch = value => {\r\n    // 검색어가 변경될 때 현재 페이지를 1페이지로 초기화하고 fetchPageData를 호출합니다.\r\n    setCurrent(1);\r\n    fetchPageData(1, value);\r\n  };\r\n\r\n  const fetchPageData = async (page, search = \"\") => {\r\n    try {\r\n      const result = await getList({\r\n        page,\r\n        search,\r\n        successFn: result => {\r\n          setListData(result.list);\r\n          setTotalCount(result.noticeCnt);\r\n          const fixed = result.list.filter(item => item.fullNoticeFix === 1);\r\n          const normal = result.list.filter(item => item.fullNoticeFix !== 1);\r\n          setFixedNotices(fixed);\r\n          setNormalNotices(normal);\r\n        },\r\n        failFn: result => {\r\n          console.error(\"List fetch failed:\", result);\r\n        },\r\n        errorFn: result => {\r\n          console.error(\"Error fetching list:\", result);\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPageData(current);\r\n  }, [current]);\r\n\r\n  return (\r\n    <NoticeWrap>\r\n      <AlbumTopBar>\r\n        <PageTitle>유치원 소식</PageTitle>\r\n        <SearchBar>\r\n          <UserTopRight>\r\n            <Search\r\n              placeholder=\"제목을 입력하세요.\"\r\n              size={\"large\"}\r\n              allowClear\r\n              onSearch={handleSearch}\r\n            />\r\n            {isLogin ? (\r\n              <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\r\n            ) : null}\r\n          </UserTopRight>\r\n        </SearchBar>\r\n      </AlbumTopBar>\r\n\r\n      <ListWrap\r\n        size=\"large\"\r\n        itemLayout=\"vertical\"\r\n        dataSource={listData}\r\n        renderItem={(item, index) => (\r\n          <List.Item>\r\n            <NoticeItem\r\n              to={`/notice/details/${item.ifullNotice}`}\r\n              key={item.ifullNotice}\r\n              className={item.fullNoticeFix === 1 ? \"notice\" : \"\"}\r\n            >\r\n              <NoticeIcon>\r\n                {item.fullNoticeFix === 1 ? (\r\n                  <img\r\n                    src=\"/images/common/notice/loudSpeaker.svg\"\r\n                    alt=\"고정글\"\r\n                  />\r\n                ) : (\r\n                  <span>{item.ifullNotice}</span>\r\n                )}\r\n              </NoticeIcon>\r\n              <NoticeTitle>{item.fullTitle}</NoticeTitle>\r\n              <NoticeDate>\r\n                <img src=\"/images/common/notice/clock.svg\" alt=\"시계아이콘\" />\r\n                {item.createdAt.substring(0, 10)}\r\n              </NoticeDate>\r\n            </NoticeItem>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <PageNum>\r\n        <Pagination\r\n          current={current}\r\n          onChange={onChange}\r\n          total={totalCount}\r\n          pageSize={pageSize}\r\n        />\r\n      </PageNum>\r\n    </NoticeWrap>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 추가\r\nimport ListNotice from \"../../components/notice/ListNotice\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst NoticeList = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin && !isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n    } else {\r\n      // 다른 상황에 대한 처리가 필요한 경우 여기에 추가\r\n      // 예를 들어, 기본 오류 메시지 설정 등\r\n      // setTitle(\"에러\");\r\n      // setSubTitle(\"리스트를 불러오는 중 오류가 발생했습니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && !isParentLogin) {\r\n      navigate(\"/login\"); // 로그인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <ListNotice isLogin={isLogin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { colors, mq } from \"../basic\";\r\nimport { List } from \"antd\";\r\n\r\nexport const NoticeWrap = styled.div`\r\n  position: relative;\r\n  .ant-list-lg .ant-list-item {\r\n    padding: 0;\r\n  }\r\n`;\r\nexport const ListWrap = styled(List)`\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  background: ${colors.white};\r\n`;\r\n\r\nexport const NoticeItem = styled(Link)`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 3rem;\r\n  &.notice {\r\n    background: ${colors.greenLight2};\r\n    border-top: 1px solid rgba(5, 5, 5, 0.06);\r\n    p {\r\n      color: ${colors.greenDeep};\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  img {\r\n    height: 2.5rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeIcon = styled.div`\r\n  position: relative;\r\n  width: 3rem;\r\n  ${mq.mobileBig} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NoticeTitle = styled.p`\r\n  position: relative;\r\n  width: calc(100% - 25rem);\r\n  ${mq.mobileBig} {\r\n    width: 100%;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeDate = styled.div`\r\n  position: relative;\r\n  text-align: right;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  color: ${colors.grayDeep};\r\n  img {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeGallery = styled.div`\r\n  max-width: 60rem;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","console","log","data","error","getList","page","search","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","editNotice","_ref6","Search","Input","NoticeList","navigate","useNavigate","fixedNotices","setFixedNotices","useState","normalNotices","setNormalNotices","current","setCurrent","listData","setListData","totalCount","setTotalCount","isLogin","useCustomLogin","fetchPageData","arguments","length","undefined","result","list","noticeCnt","fixed","filter","item","fullNoticeFix","normal","useEffect","_jsxs","NoticeWrap","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","placeholder","size","allowClear","onSearch","value","GreenBtn","onClick","e","ListWrap","itemLayout","dataSource","renderItem","index","List","Item","NoticeItem","to","ifullNotice","className","NoticeIcon","src","alt","NoticeTitle","fullTitle","NoticeDate","createdAt","substring","PageNum","Pagination","onChange","total","pageSize","isParentLogin","isOpen","setIsOpen","title","setTitle","subTitle","setSubTitle","_Fragment","ModalOneBtn","handleOk","ListNotice","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","width","height","mq","mobileBig","_templateObject2","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","FileListStyle","_templateObject13","_templateObject14","WriteWrap","_templateObject15","Link","greenLight2","p","NoticeGallery"],"sourceRoot":""}