{"version":3,"file":"static/js/341.e6cf94dc.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/ModifyAlbum.js","pages/album/AlbumModify.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n// 활동 앨범 전체 조회 get\r\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 검색 GET\r\n// listall?page=1&search=1\r\nexport const getSearchListAll = async ({\r\n  page,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/listall?page=${page}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(console.log(error));\r\n    // errorFn(\r\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    // );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path /comment\r\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}/comment`, obj);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // &iteacher=${iteacher}&iparent=${iparent}\r\n    const iwriter = () => {\r\n      if (iteacher) {\r\n        return `&iteacher=${iteacher}`;\r\n      }\r\n      if (iparent) {\r\n        return `&iparent=${iparent}`;\r\n      }\r\n    };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getEditAlbum, putAlbum } from \"../../api/album/album_api\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport { AlbumWrap, FileListStyle, WriteWrap } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\r\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\r\nconst path = `${IMG_URL}/api/album`;\r\nconst imgpath = `${IMG_URL}/pic/album`;\r\nconst customRequest = ({ onSuccess }) => {\r\n  onSuccess(\"ok\");\r\n};\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst ModifyAlbum = () => {\r\n  const { pno } = useParams();\r\n  const formRef = useRef();\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // albumData 상태를 추가\r\n\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [albumTitle, setAlbumTitle] = useState(\"\");\r\n  const [albumContents, setAlbumContents] = useState(\"\");\r\n  const [albumPics, setAlbumPics] = useState([]);\r\n  const [newPics, setNewPics] = useState([]);\r\n  const [deletedPics, setDeletedPics] = useState([]);\r\n\r\n  const [isEditConfirmModalVisible, setIsEditConfirmModalVisible] =\r\n    useState(false);\r\n  const [isSuccessModalVisible, setIsSuccessModalVisible] = useState(false);\r\n  const [isMinimumWarningVisible, setIsMinimumWarningVisible] = useState(false);\r\n  const [showCancelConfirmModal, setShowCancelConfirmModal] = useState(false);\r\n  const handleGreenButtonClick = () => {\r\n    setIsEditConfirmModalVisible(true); // 수정 확인 모달을 표시\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    // 모달에서 '확인' 버튼 클릭 시 호출될 함수\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n    setIsEditConfirmModalVisible(false); // 모달 닫기\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setIsEditConfirmModalVisible(false); // 모달 닫기\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setShowCancelConfirmModal(true); // 취소 확인 모달 표시\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsSuccessModalVisible(true); // 성공 메시지 모달 표시\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsSuccessModalVisible(false); // 모달 닫기\r\n    navigate(`/album/details/${pno}`); // 성공 후 상세 페이지로 이동\r\n  };\r\n\r\n  // 이미지 삭제 시 최소 파일 수 검증 경고 모달을 닫는 함수\r\n  const handleCloseMinimumWarning = e => {\r\n    e.stopPropagation();\r\n    setIsMinimumWarningVisible(false); // 경고 모달 상태를 false로 변경하여 닫음\r\n    // 여기에 필요한 추가 로직을 배치할 수 있음\r\n  };\r\n\r\n  // 파일 업로드가 완료되었을 때 호출될 함수입니다.\r\n  const handleUploadChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList); // 기존 파일 리스트 업데이트\r\n    const newUploadedPics = newFileList\r\n      .filter(file => file.originFileObj) // 새로 업로드된 파일만 선택\r\n      .map(file => file.name); // 파일 이름 추출\r\n    setNewPics(newUploadedPics); // 새로 업로드된 파일 이름을 상태에 저장\r\n  };\r\n\r\n  const handleFailure = errorMessage => {\r\n    Modal.error({\r\n      title: \"앨범 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"앨범 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"앨범 업로드 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n    const albumInfo = {\r\n      iteacher: 1, // 이 값은 예시입니다. 실제 값으로 변경해주세요.\r\n      albumTitle: data.albumTitle,\r\n      albumContents: data.albumContents,\r\n      ialbum: pno,\r\n    };\r\n\r\n    // deletedPics 배열에 항목이 있는 경우에만 delPics 속성을 추가\r\n    if (deletedPics.length > 0) {\r\n      albumInfo.delPics = deletedPics;\r\n    }\r\n\r\n    const dto = new Blob([JSON.stringify(albumInfo)], {\r\n      type: \"application/json\",\r\n    });\r\n    formData.append(\"dto\", dto);\r\n\r\n    // 새로 추가된 이미지 파일이 있을 경우에만 pics 속성을 추가. 즉, pics를 아예 제외시키고 발송.\r\n    fileList.forEach(file => {\r\n      if (file.originFileObj) {\r\n        // 새로운 파일인 경우에만 추가\r\n        formData.append(\"pics\", file.originFileObj, file.name);\r\n      }\r\n    });\r\n\r\n    // 서버에 요청을 보냅니다.\r\n    try {\r\n      const response = await putAlbum({\r\n        product: formData,\r\n        successFn: handleSuccess,\r\n        failFn: handleFailure,\r\n        errorFn: handleError,\r\n      });\r\n\r\n      // 응답 처리\r\n    } catch (error) {\r\n      handleError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbumData = async () => {\r\n      getEditAlbum({\r\n        pno: pno,\r\n        successFn: data => {\r\n          setAlbumData({ ...data });\r\n          setAlbumTitle(data.albumTitle);\r\n          setAlbumContents(data.albumContents);\r\n          // Update form fields with the album data\r\n          form.setFieldsValue({\r\n            albumTitle: data.albumTitle,\r\n            albumContents: data.albumContents,\r\n          });\r\n\r\n          // Transform album pictures for the fileList state\r\n          const newData = data.albumPic;\r\n          // console.log(\"newData\", newData);\r\n          const transformedFileList = newData.map((albumPic, index) => ({\r\n            uid: albumPic.ialbumPic, // uid is required to be unique\r\n            name: albumPic.albumPic, // file name\r\n            status: \"done\", // upload status\r\n            url: `${imgpath}/${pno}/${albumPic.albumPic}`, // file URL, adjust the path as needed\r\n          }));\r\n          // console.log(\"transformedFileList\", transformedFileList);\r\n          setFileList(transformedFileList);\r\n        },\r\n        failFn: errorMessage => {\r\n          console.error(\"Album fetch failed:\", errorMessage);\r\n          // Handle failure (show error message to user, etc.)\r\n        },\r\n        errorFn: errorData => {\r\n          console.error(\"Error fetching album:\", errorData);\r\n          // Handle error (show error message to user, etc.)\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchAlbumData();\r\n  }, [pno, form]);\r\n  const beforeUpload = file => {\r\n    // 새로 업로드되는 파일을 fileList에 추가\r\n    const newFileList = [\r\n      ...fileList,\r\n      {\r\n        uid: file.uid, // 파일의 고유 ID\r\n        name: file.name, // 파일 이름\r\n        status: \"done\", // 파일 상태\r\n        originFileObj: file, // 파일 객체\r\n      },\r\n    ];\r\n    setFileList(newFileList);\r\n    return false; // 파일을 자동으로 업로드하지 않음\r\n  };\r\n\r\n  // 이미지 파일을 삭제할 때 호출될 함수\r\n  const handleRemove = file => {\r\n    // console.log(\"file.uid\", typeof file.uid);\r\n    // 이미지 파일 리스트의 길이가 2개 이상일 때만 삭제 처리\r\n    if (fileList.length > 1) {\r\n      const newFileList = fileList.filter(item => item.uid !== file.uid);\r\n      setFileList(newFileList);\r\n      if (typeof file.uid === \"number\") {\r\n        setDeletedPics([...deletedPics, file.uid]);\r\n      }\r\n      return true; // 삭제 처리를 진행\r\n    } else {\r\n      // 이미지 파일이 1개만 남았을 경우, 경고 모달 표시\r\n      setIsMinimumWarningVisible(true);\r\n      return false; // 삭제 처리를 중지\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AlbumWrap>\r\n      <PageTitle>활동앨범</PageTitle>\r\n      <Form ref={formRef} form={form} onFinish={onFinish}>\r\n        <WriteWrap>\r\n          <Form.Item\r\n            name=\"albumTitle\"\r\n            initialValue={albumData.albumTitle} // 기존 값 설정\r\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"albumContents\"\r\n            initialValue={albumData.albumContents} // 기존 값 설정\r\n            style={{ height: \"150px\" }}\r\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              beforeUpload={beforeUpload}\r\n              onRemove={handleRemove}\r\n              onChange={handleUploadChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              style={{ lineHeight: \"15rem\" }}\r\n              // onPreview={handlePreview}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드 </Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </WriteWrap>\r\n        <BtnWrap right>\r\n          <GreenBtn type=\"button\" onClick={handleGreenButtonClick}>\r\n            수정\r\n          </GreenBtn>\r\n          <PinkBtn type=\"button\" onClick={handleCancelConfirmation}>\r\n            취소\r\n          </PinkBtn>\r\n        </BtnWrap>\r\n      </Form>\r\n      <ModalTwoBtn\r\n        isOpen={isEditConfirmModalVisible}\r\n        handleOk={handleEditConfirm}\r\n        handleCancel={handleEditCancel}\r\n        title=\"앨범 수정 확인\"\r\n        subTitle={`앨범을 수정하시겠습니까? \\n수정하신 내용은 되돌릴 수 없습니다.`}\r\n        maskClosable={false}\r\n      ></ModalTwoBtn>\r\n      {/* ModalTwoBtn 사용하여 취소 확인 모달 표시 */}\r\n      <ModalTwoBtn\r\n        isOpen={showCancelConfirmModal}\r\n        handleOk={() => {\r\n          setShowCancelConfirmModal(false); // 모달 닫기\r\n          navigate(\"/album\"); // 사용자를 앨범 목록 페이지로 이동\r\n        }}\r\n        handleCancel={() => {\r\n          setShowCancelConfirmModal(false); // 모달 닫기\r\n        }}\r\n        title=\"정말 취소하시겠습니까?\"\r\n        subTitle=\"수정 내용이 저장되지 않습니다.\"\r\n        maskClosable={false}\r\n      />\r\n      <Link to=\"/album\">\r\n        <ModalOneBtn\r\n          isOpen={isSuccessModalVisible}\r\n          handleOk={handleModalClose}\r\n          title=\"앨범 수정 완료\"\r\n          subTitle={`성공적으로 수정되었습니다. \\n 수정 내용을 확인하시려면 확인 버튼을 클릭해주세요.`}\r\n          maskClosable={false}\r\n        />\r\n        <ModalOneBtn\r\n          isOpen={isMinimumWarningVisible}\r\n          handleOk={handleCloseMinimumWarning}\r\n          title=\"이미지 파일 경고\"\r\n          subTitle={`최소 하나의 이미지파일은 업로드 되어야 합니다.`}\r\n          maskClosable={false}\r\n        />\r\n      </Link>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default ModifyAlbum;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ModifyAlbum from \"../../components/album/ModifyAlbum\";\r\nimport { getAlbum } from \"../../api/album/album_api\"; // 데이터를 가져오는 API 함수를 import\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst AlbumModify = () => {\r\n  const { pno } = useParams();\r\n  const [albumData, setAlbumData] = useState(null); // 앨범 데이터를 위한 상태\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n  useEffect(() => {\r\n    // 데이터 가져오기\r\n    getAlbum({\r\n      pno: pno,\r\n      successFn: data => {\r\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\r\n      },\r\n      // 에러 처리는 필요에 따라 추가\r\n    });\r\n  }, [pno]);\r\n\r\n  return albumData ? (\r\n    <ModifyAlbum albumData={albumData} isLogin={isLogin} />\r\n  ) : null; // 데이터가 있을 때만 ModifyAlbum 렌더링\r\n};\r\n\r\nexport default AlbumModify;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","IMG_URL","imgpath","customRequest","onSuccess","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","ModifyAlbum","useParams","formRef","useRef","albumData","setAlbumData","useState","form","Form","useForm","fileList","setFileList","isModalVisible","setIsModalVisible","navigate","useNavigate","setAlbumTitle","setAlbumContents","albumPics","setAlbumPics","newPics","setNewPics","deletedPics","setDeletedPics","isEditConfirmModalVisible","setIsEditConfirmModalVisible","isSuccessModalVisible","setIsSuccessModalVisible","isMinimumWarningVisible","setIsMinimumWarningVisible","showCancelConfirmModal","setShowCancelConfirmModal","handleSuccess","handleFailure","errorMessage","Modal","title","content","handleError","useEffect","setFieldsValue","transformedFileList","map","index","uid","ialbumPic","name","url","errorData","fetchAlbumData","_jsxs","AlbumWrap","children","_jsx","PageTitle","ref","onFinish","formData","FormData","albumInfo","length","delPics","dto","Blob","JSON","stringify","type","append","forEach","file","originFileObj","message","WriteWrap","Item","initialValue","rules","required","Input","placeholder","style","height","TextArea","FileListStyle","Upload","Dragger","action","listType","beforeUpload","newFileList","onRemove","filter","item","onChange","newUploadedPics","className","multiple","lineHeight","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleGreenButtonClick","PinkBtn","handleCancelConfirmation","ModalTwoBtn","isOpen","handleOk","handleEditConfirm","current","submit","handleCancel","handleEditCancel","subTitle","maskClosable","Link","to","ModalOneBtn","handleModalClose","e","stopPropagation","AlbumModify","isLogin","useCustomLogin","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","_templateObject15"],"sourceRoot":""}