{"version":3,"file":"static/js/598.7ae18e9a.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/ReadAllAlbum.js","pages/album/Album.js","styles/adminstyle/guardianlist.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn(...res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import Search from \"antd/es/input/Search\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getlistAll } from \"../../api/album/album_api\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport { UserTopRight } from \"../../styles/adminstyle/guardianlist\";\r\nimport {\r\n  AlbumList,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  SearchBar,\r\n} from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nconst path = `${IMG_URL}/pic/album`;\r\nconst ReadAllAlbum = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalAlbumCount, setTotalAlbumCount] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const loaderRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const loadImages = useCallback(async () => {\r\n    // 로딩 중이거나 모든 데이터가 로드되었다면 함수를 종료합니다.\r\n    if (\r\n      loading ||\r\n      (totalAlbumCount !== null && items.length >= totalAlbumCount)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    getlistAll({\r\n      page,\r\n      successFn: data => {\r\n        setTotalAlbumCount(data.albumCnt);\r\n        setItems(prevItems => [...prevItems, ...data.list]);\r\n        setPage(prevPage => prevPage + 1);\r\n        setHasMore(data.list.length > 0);\r\n        setLoading(false);\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n    });\r\n  }, [loading, totalAlbumCount, items, page]);\r\n\r\n  // Observer 설정\r\n  const handleObserver = useCallback(\r\n    entities => {\r\n      const target = entities[0];\r\n      if (target.isIntersecting && hasMore && !loading) {\r\n        loadImages();\r\n      }\r\n    },\r\n    [loadImages, hasMore, loading],\r\n  );\r\n\r\n  // Observer 인스턴스 생성\r\n  useEffect(() => {\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: \"0px\", // 하단 감지 영역을 위로 올립니다.\r\n      threshold: 0.5, // 필요에 따라 threshold 조정\r\n    };\r\n    const observer = new IntersectionObserver(handleObserver, observerOptions);\r\n    if (loaderRef.current) observer.observe(loaderRef.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [handleObserver]);\r\n\r\n  // 컴포넌트 마운트 시 첫 페이지 데이터 로드\r\n  useEffect(() => {\r\n    loadImages();\r\n  }, []);\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40} width={100} height={100}>\r\n      {/* 메인 콘텐츠 상단 바 컴포넌트 */}\r\n      <AlbumTopBar>\r\n        <PageTitle>활동앨범</PageTitle>\r\n        <SearchBar>\r\n          <UserTopRight>\r\n            <Search\r\n              placeholder=\"제목을 입력하세요.\"\r\n              style={{\r\n                width: 300,\r\n              }}\r\n              size={\"large\"}\r\n              allowClear\r\n              onSearch={value => console.log(value)}\r\n            />\r\n            <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\r\n          </UserTopRight>\r\n        </SearchBar>\r\n      </AlbumTopBar>\r\n      <AlbumList>\r\n        {items.map(item => (\r\n          <Link\r\n            ref={loaderRef}\r\n            key={item.ialbum}\r\n            to={`/album/details/${item.ialbum}`}\r\n          >\r\n            <ul className=\"image-grid\">\r\n              <li className=\"image-item\">\r\n                <img\r\n                  height={400}\r\n                  src={`${path}/${item.ialbum}/${item.albumPic}`}\r\n                  alt={item.albumTitle}\r\n                />\r\n              </li>\r\n              <p>{item.albumTitle}</p>\r\n            </ul>\r\n          </Link>\r\n        ))}\r\n        {loading && <Loading className=\"loading\" />}\r\n      </AlbumList>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default ReadAllAlbum;\r\n","import React from \"react\";\r\nimport ReadAllAlbum from \"../../components/album/ReadAllAlbum\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api/album/listall`;\r\n\r\nconst Album = () => {\r\n  return <ReadAllAlbum />;\r\n};\r\nexport default Album;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\n\r\nexport const UserTop = styled.div`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const UserTopRight = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const UserMain = styled.div`\r\n  position: relative;\r\n  /* min-height: 60rem; */\r\n  input {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const UserListWrap = styled.ul`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-between; */\r\n  gap: 1rem;\r\n`;\r\nexport const UserListItem = styled.li`\r\n  position: relative;\r\n  border-radius: 1rem;\r\n  border-color: #ebebeb;\r\n  width: 32%;\r\n  background: ${colors.white};\r\n  padding: 2rem;\r\n  margin-bottom: 1rem;\r\n  ${shadow}\r\n`;\r\nexport const UserListBox = styled.div`\r\n  margin: auto;\r\n  input {\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    right: 2rem;\r\n    bottom: 2rem;\r\n  }\r\n  em {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  span {\r\n    color: ${colors.greenDeep};\r\n    font-size: 1.5rem;\r\n  }\r\n  p {\r\n    color: ${colors.black};\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nexport const ChildInfo = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  p {\r\n    color: ${colors.grayDeep};\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const PageNum = styled.div`\r\n  position: absolute;\r\n  bottom: 10rem;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n\r\n  .ant-pagination-prev {\r\n    font-size: 1.5rem;\r\n    color: ${colors.grayDeep};\r\n    background-color: ${colors.grayLight};\r\n    border-radius: 50%;\r\n  }\r\n  .ant-pagination-next {\r\n    font-size: 1.5rem;\r\n    color: ${colors.grayDeep};\r\n    background-color: ${colors.grayLight};\r\n    border-radius: 50%;\r\n  }\r\n  .ant-pagination-item-active {\r\n    font-weight: 400;\r\n    border-radius: 50%;\r\n    background-color: ${colors.greenDeep};\r\n    border-color: ${colors.greenDeep};\r\n    a {\r\n      color: #fff;\r\n    }\r\n    &:hover {\r\n      border-color: ${colors.greenDeep};\r\n      a {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  .ant-pagination-item:hover {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  margin-bottom: 9rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","console","log","getlistAll","page","_ref2","postAlbum","product","_ref5","header","headers","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","IMG_URL","ReadAllAlbum","items","setItems","useState","loading","setLoading","hasMore","setHasMore","totalAlbumCount","setTotalAlbumCount","setPage","loaderRef","useRef","navigate","useNavigate","loadImages","useCallback","length","albumCnt","prevItems","list","prevPage","message","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","disconnect","_jsxs","AlbumWrap","paddingTop","width","height","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","Search","placeholder","style","size","allowClear","onSearch","value","GreenBtn","onClick","e","AlbumList","map","item","Link","ref","to","className","src","albumPic","alt","albumTitle","Loading","API_SERVER_HOST","Album","UserTop","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","UserMain","_templateObject3","UserListWrap","ul","_templateObject4","UserListItem","li","_templateObject5","colors","white","shadow","UserListBox","_templateObject6","UserInfo","_templateObject7","greenDeep","black","ChildInfo","_templateObject8","grayDeep","PageNum","_templateObject9","grayLight","props","fonts","pretendard","SwiperWrap","ContentWrap","AlbumTitle","h3","TitleWrap","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","FileListStyle","_templateObject14","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","PinkBtn","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","MainPinkBtn","MainBrownBtn","AllBtn","Modal"],"sourceRoot":""}