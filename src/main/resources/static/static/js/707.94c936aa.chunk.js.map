{"version":3,"file":"static/js/707.94c936aa.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/WriteAlbum.js","pages/album/AlbumWrite.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn({ ...res.data });\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// album/listall?page=1\n// 활동 앨범 전체 조회 get\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\nexport const getSearchListAll = async ({\n  page,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n    // console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    // console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    // console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path /comment\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, obj);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // &iteacher=${iteacher}&iparent=${iparent}\n    const iwriter = () => {\n      if (iteacher) {\n        return `&iteacher=${iteacher}`;\n      }\n      if (iparent) {\n        return `&iparent=${iparent}`;\n      }\n    };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AlbumWrap, FileListStyle, WriteWrap } from \"../../styles/album/album\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\n\nimport { postAlbum } from \"../../api/album/album_api\";\nimport { SERVER_URL } from \"../../api/config\";\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\nconst path = `${SERVER_URL}/api/album`;\n\nconst WriteAlbum = ({ albumData, submit }) => {\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const navigate = useNavigate();\n\n  // 모달 상태 관리\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showCancelConfirmModal, setShowCancelConfirmModal] = useState(false);\n  const [showExceedLimitModal, setShowExceedLimitModal] = useState(false); // 파일 제한 초과 경고 모달 상태\n  const [isImageUploadWarningVisible, setIsImageUploadWarningVisible] =\n    useState(false); // 이미지 업로드 경고 모달 상태\n  const [submitClicked, setSubmitClicked] = useState(false); // 이 줄 추가\n  const handleChange = info => {\n    let fileList = [...info.fileList].slice(-20); // 최대 20개 파일만 유지\n    setFileList(fileList);\n  };\n\n  const beforeUpload = file => {\n    const isExceedLimit = fileList.length >= 20; // 현재 파일 리스트의 길이가 20 이상인지 검사\n    if (isExceedLimit) {\n      // 파일리스트 길이가 20개를 초과하는 경우\n      setShowExceedLimitModal(true); // 경고 모달 표시\n      return Upload.LIST_IGNORE; // 파일 업로드 중단\n    }\n    return true; // 파일 추가를 계속 진행\n  };\n\n  const handleExceedLimitModalOk = e => {\n    e.stopPropagation(); // 이벤트가 상위 엘리먼트에 전달되지 않게 막기\n    setShowExceedLimitModal(false); // 경고 모달 닫기\n  };\n\n  const customRequest = ({ onSuccess }) => {\n    onSuccess(\"ok\");\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  // 앨범 등록 성공 모달 핸들러\n  const handleSuccessModalOk = () => {\n    setShowSuccessModal(false);\n    navigate(\"/album\");\n  };\n\n  const handleCancelConfirmModalOk = () => {\n    // 모달을 닫고, 사용자를 앨범 목록 페이지로 이동합니다.\n    setShowCancelConfirmModal(false);\n    navigate(\"/album\");\n  };\n\n  const handleCancelConfirmModalCancel = e => {\n    // 모달을 닫음\n    setShowCancelConfirmModal(false);\n    e.stopPropagation();\n  };\n\n  const handleCancelConfirmation = () => {\n    setSubmitClicked(false); // 제출이 클릭되지 않았다고 확인\n    setShowCancelConfirmModal(true); // 취소 확인 모달 표시\n  };\n\n  const handleFormSubmit = () => {\n    if (fileList.length === 0) {\n      setIsImageUploadWarningVisible(true);\n      return; // 파일이 업로드되지 않았다면 폼 제출 방지\n    }\n    setSubmitClicked(true); // 제출이 클릭되었다고 표시\n    form.submit(); // 폼 제출 수동으로 트리거\n  };\n\n  const onFinish = async data => {\n    if (!submitClicked) return; // 제출이 클릭되었는지 확인\n    // 이미지가 한 개 이상 업로드되지 않았을 경우 경고 모달 표시\n    if (fileList.length === 0) {\n      setIsImageUploadWarningVisible(true); // 경고 모달을 표시\n      return; // 함수 실행 종료\n    }\n    const formData = new FormData();\n    // 글 정보를 담은 dto Blob객체 생성\n    const dto = new Blob(\n      [\n        JSON.stringify({\n          iteacher: 1,\n          albumTitle: data.albumTitle,\n          albumContents: data.albumContents,\n        }),\n      ],\n      // JSON 형식으로 설정\n      { type: \"application/json\" },\n    );\n\n    // dto 객체를 FormData에 추가\n    formData.append(\"dto\", dto);\n\n    // fileList에 있는 각 파일을 formData에 추가\n    fileList.forEach(file => {\n      // originFileObj가 실제 파일 데이터를 가지고 있음\n      formData.append(\"pics\", file.originFileObj);\n    });\n\n    // formData를 서버에 전송\n    postAlbum({\n      product: formData,\n      successFn: () => setShowSuccessModal(true), // 성공 모달 표시\n      failFn: handleFailure,\n      errorFn: handleError,\n    });\n    setSubmitClicked(false); // 다음 제출을 위해 재설정\n  };\n\n  // 이미지 업로드 경고 모달 핸들러\n  const handleImageUploadWarningOk = e => {\n    setIsImageUploadWarningVisible(false); // 경고 모달 닫기\n    e.stopPropagation(); // 이벤트가 상위 엘리먼트에 전달되지 않게 막기\n  };\n\n  const handleFailure = errorMessage => {\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\n    Modal.error({\n      title: \"앨범 업로드 실패\",\n      content: errorMessage,\n    });\n  };\n\n  const handleError = error => {\n    Modal.error({\n      title: \"앨범 업로드 중 오류 발생\",\n      content:\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\n    });\n  };\n\n  return (\n    <AlbumWrap>\n      <PageTitle>활동앨범</PageTitle>\n      <Form form={form} onFinish={onFinish}>\n        <WriteWrap>\n          <Form.Item\n            name=\"albumTitle\"\n            rules={[\n              {\n                required: true,\n                message: \"제목을 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input placeholder=\"제목 입력\" />\n          </Form.Item>\n          <Form.Item\n            style={{ height: \"150px\" }}\n            name=\"albumContents\"\n            rules={[\n              {\n                required: true,\n                message: \"내용을 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input.TextArea\n              placeholder=\"내용 입력\"\n              style={{ height: \"150px\" }}\n            />\n          </Form.Item>\n          <FileListStyle>\n            <Upload.Dragger\n              action={`${path}`}\n              listType=\"picture\"\n              fileList={fileList}\n              onChange={handleChange}\n              customRequest={customRequest}\n              className=\"upload-list-inline\"\n              multiple={true}\n              style={{ lineHeight: \"15rem\" }}\n              maxCount={20}\n              beforeUpload={beforeUpload}\n            >\n              <Button icon={<UploadOutlined />}>업로드(최대 20개) </Button>\n            </Upload.Dragger>\n          </FileListStyle>\n        </WriteWrap>\n        <BtnWrap right>\n          <GreenBtn type=\"button\" onClick={handleFormSubmit}>\n            등록\n          </GreenBtn>\n          <PinkBtn onClick={handleCancelConfirmation}>취소</PinkBtn>\n        </BtnWrap>\n      </Form>\n\n      <Link to=\"/album\">\n        {/* 등록 성공 모달 */}\n        {showSuccessModal && (\n          <ModalOneBtn\n            isOpen={showSuccessModal}\n            handleOk={handleSuccessModalOk}\n            title=\"등록 완료\"\n            subTitle=\"성공적으로 등록되었습니다.\"\n            maskClosable={false}\n          />\n        )}\n\n        {/* 취소 확인 모달 */}\n        {showCancelConfirmModal && (\n          <ModalTwoBtn\n            isOpen={showCancelConfirmModal}\n            handleOk={handleCancelConfirmModalOk}\n            handleCancel={handleCancelConfirmModalCancel}\n            title=\"정말 취소할까요?\"\n            subTitle=\"작성된 내용은 저장되지 않습니다.\"\n            maskClosable={false}\n          />\n        )}\n        {/* 이미지 업로드 경고 모달 */}\n        {isImageUploadWarningVisible && (\n          <ModalOneBtn\n            isOpen={isImageUploadWarningVisible}\n            handleOk={handleImageUploadWarningOk}\n            title=\"이미지 업로드 경고\"\n            subTitle={`최소 하나의 이미지 파일은 \\n 업로드 되어야 합니다.`}\n            maskClosable={false}\n          />\n        )}\n        {/* 파일 제한 초과 경고 모달 */}\n        {showExceedLimitModal && (\n          <ModalOneBtn\n            isOpen={showExceedLimitModal}\n            handleOk={handleExceedLimitModalOk}\n            title=\"업로드 제한 초과\"\n            subTitle=\"업로드할 수 있는 파일 수는 최대 20개입니다.\"\n            maskClosable={false}\n          />\n        )}\n      </Link>\n    </AlbumWrap>\n  );\n};\n\nexport default WriteAlbum;\n","import { useEffect, useState } from \"react\";\nimport WriteAlbum from \"../../components/album/WriteAlbum\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { useNavigate } from \"react-router-dom\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nconst initAlbumWrite = [\n  {\n    pics: [\"string\"],\n    dto: {\n      iteacher: 0,\n      albumTitle: \"string\",\n      albumContents: \"string\",\n    },\n  },\n];\n\nconst AlbumWrite = () => {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n  // 로그인 상태가 false라면 로그인 페이지로 리다이렉트합니다.\n  useEffect(() => {\n    if (!isLogin) {\n      setIsOpen(true);\n      setTitle(\"교사 전용 페이지\");\n      setSubTitle(\"선생님만 접근 가능합니다.\");\n      setIsNavigate(-1);\n    }\n  });\n  // 로그인 상태가 true라면 글쓰기 컴포넌트를 렌더링합니다.\n  return (\n    <>\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <WriteAlbum isLogin={isLogin} submit=\"등록\" />\n    </>\n  );\n};\n\nexport default AlbumWrite;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","albumData","submit","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","navigate","useNavigate","showSuccessModal","setShowSuccessModal","showCancelConfirmModal","setShowCancelConfirmModal","showExceedLimitModal","setShowExceedLimitModal","isImageUploadWarningVisible","setIsImageUploadWarningVisible","submitClicked","setSubmitClicked","handleFailure","errorMessage","Modal","title","content","handleError","_jsxs","AlbumWrap","children","_jsx","PageTitle","onFinish","length","formData","FormData","dto","Blob","JSON","stringify","albumTitle","albumContents","type","append","forEach","file","originFileObj","WriteWrap","Item","name","rules","required","message","Input","placeholder","style","height","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","slice","customRequest","onSuccess","className","multiple","lineHeight","maxCount","beforeUpload","LIST_IGNORE","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleFormSubmit","PinkBtn","handleCancelConfirmation","Link","to","ModalOneBtn","isOpen","handleOk","handleSuccessModalOk","subTitle","maskClosable","ModalTwoBtn","handleCancelConfirmModalOk","handleCancel","e","stopPropagation","AlbumWrite","setTitle","setSubTitle","setIsOpen","isNavigate","setIsNavigate","isLogin","useCustomLogin","useEffect","_Fragment","WriteAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","_templateObject15"],"sourceRoot":""}