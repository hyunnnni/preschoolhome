{"version":3,"file":"static/js/2598.6f76c58a.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/ReadAllAlbum.js","pages/album/Album.js","styles/adminstyle/guardianlist.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(...res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// album/listall?page=1\n\n// 활동 앨범 전체 조회 get\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  console.log(\"product\", product);\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.post();\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  commentInfo,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\n      commentInfo,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn();\n    }\n  } catch (error) {\n    errorFn();\n  }\n};\n","import Search from \"antd/es/input/Search\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { getlistAll } from \"../../api/album/album_api\";\nimport Loading from \"../../components/loading/Loading\";\nimport { UserTopRight } from \"../../styles/adminstyle/guardianlist\";\nimport {\n  AlbumList,\n  AlbumTopBar,\n  AlbumWrap,\n  SearchBar,\n} from \"../../styles/album/album\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\nimport { IMG_URL } from \"../../api/config\";\nconst path = `${IMG_URL}/pic/album`;\nconst ReadAllAlbum = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [totalAlbumCount, setTotalAlbumCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const loaderRef = useRef(null);\n  const navigate = useNavigate();\n\n  const loadImages = useCallback(async () => {\n    // 로딩 중이거나 모든 데이터가 로드되었다면 함수를 종료합니다.\n    if (\n      loading ||\n      (totalAlbumCount !== null && items.length >= totalAlbumCount)\n    ) {\n      return;\n    }\n\n    setLoading(true);\n    getlistAll({\n      page,\n      successFn: data => {\n        setTotalAlbumCount(data.albumCnt);\n        setItems(prevItems => [...prevItems, ...data.list]);\n        setPage(prevPage => prevPage + 1);\n        setHasMore(data.list.length > 0);\n        setLoading(false);\n      },\n      failFn: message => {\n        console.error(message);\n        setLoading(false);\n        setHasMore(false);\n      },\n      errorFn: data => {\n        console.error(data);\n        setLoading(false);\n        setHasMore(false);\n      },\n    });\n  }, [loading, totalAlbumCount, items, page]);\n\n  // Observer 설정\n  const handleObserver = useCallback(\n    entities => {\n      const target = entities[0];\n      if (target.isIntersecting && hasMore && !loading) {\n        loadImages();\n      }\n    },\n    [loadImages, hasMore, loading],\n  );\n\n  // Observer 인스턴스 생성\n  useEffect(() => {\n    const observerOptions = {\n      root: null,\n      rootMargin: \"0px\", // 하단 감지 영역을 위로 올립니다.\n      threshold: 0.5, // 필요에 따라 threshold 조정\n    };\n    const observer = new IntersectionObserver(handleObserver, observerOptions);\n    if (loaderRef.current) observer.observe(loaderRef.current);\n\n    return () => observer.disconnect();\n  }, [handleObserver]);\n\n  // 컴포넌트 마운트 시 첫 페이지 데이터 로드\n  useEffect(() => {\n    loadImages();\n  }, []);\n\n  return (\n    <AlbumWrap paddingTop={40} width={100} height={100}>\n      {/* 메인 콘텐츠 상단 바 컴포넌트 */}\n      <AlbumTopBar>\n        <PageTitle>활동앨범</PageTitle>\n        <SearchBar>\n          <UserTopRight>\n            <Search\n              placeholder=\"제목을 입력하세요.\"\n              style={{\n                width: 300,\n              }}\n              size={\"large\"}\n              allowClear\n              onSearch={value => console.log(value)}\n            />\n            <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\n          </UserTopRight>\n        </SearchBar>\n      </AlbumTopBar>\n      <AlbumList>\n        {items.map(item => (\n          <Link\n            ref={loaderRef}\n            key={item.ialbum}\n            to={`/album/details/${item.ialbum}`}\n          >\n            <ul className=\"image-grid\">\n              <li className=\"image-item\">\n                <img\n                  height={400}\n                  src={`${path}/${item.ialbum}/${item.albumPic}`}\n                  alt={item.albumTitle}\n                />\n              </li>\n              <p>{item.albumTitle}</p>\n            </ul>\n          </Link>\n        ))}\n        {loading && <Loading className=\"loading\" />}\n      </AlbumList>\n    </AlbumWrap>\n  );\n};\n\nexport default ReadAllAlbum;\n","import React from \"react\";\nimport ReadAllAlbum from \"../../components/album/ReadAllAlbum\";\nexport const API_SERVER_HOST = \"\";\nconst host = `${API_SERVER_HOST}/api/album/listall`;\n\nconst Album = () => {\n  return <ReadAllAlbum />;\n};\nexport default Album;\n","import styled from \"@emotion/styled\";\nimport { colors, shadow } from \"../basic\";\n\nexport const UserTop = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const UserTopRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 1rem;\n`;\n\nexport const UserMain = styled.div`\n  position: relative;\n  /* min-height: 60rem; */\n  input {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport const UserListWrap = styled.ul`\n  margin-top: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-between; */\n  gap: 1rem;\n`;\nexport const UserListItem = styled.li`\n  position: relative;\n  border-radius: 1rem;\n  border-color: #ebebeb;\n  width: 32%;\n  background: ${colors.white};\n  padding: 2rem;\n  margin-bottom: 1rem;\n  ${shadow}\n`;\nexport const UserListBox = styled.div`\n  margin: auto;\n  input {\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n  }\n  button {\n    position: absolute;\n    right: 2rem;\n    bottom: 2rem;\n  }\n  em {\n    font-size: 1.5rem;\n  }\n`;\nexport const UserInfo = styled.div`\n  display: flex;\n  gap: 1rem;\n  span {\n    color: ${colors.greenDeep};\n    font-size: 1.5rem;\n  }\n  p {\n    color: ${colors.black};\n    font-size: 1.5rem;\n  }\n`;\nexport const ChildInfo = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  display: flex;\n  gap: 0.5rem;\n  p {\n    color: ${colors.grayDeep};\n    font-size: 1.5rem;\n  }\n`;\n\nexport const PageNum = styled.div`\n  position: relative;\n  /* bottom: 10rem;\n  left: 50%;\n  transform: translateX(-50%); */\n  margin-top: 3rem;\n  text-align: center;\n\n  .ant-pagination-prev {\n    font-size: 1.5rem;\n    color: ${colors.grayDeep};\n    background-color: ${colors.grayLight};\n    border-radius: 50%;\n  }\n  .ant-pagination-next {\n    font-size: 1.5rem;\n    color: ${colors.grayDeep};\n    background-color: ${colors.grayLight};\n    border-radius: 50%;\n  }\n  .ant-pagination-item-active {\n    font-weight: 400;\n    border-radius: 50%;\n    background-color: ${colors.greenDeep};\n    border-color: ${colors.greenDeep};\n    a {\n      color: #fff;\n    }\n    &:hover {\n      border-color: ${colors.greenDeep};\n      a {\n        color: #fff;\n      }\n    }\n  }\n  .ant-pagination-item:hover {\n    border-radius: 50%;\n  }\n`;\n","/* eslint-disable no-undef */\nimport styled from \"@emotion/styled\";\nimport { colors, fonts, shadow } from \"../basic\";\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  font-family: \"KOTRAHOPE\";\n  padding-top: ${props => props.paddingTop + \"px\"};\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n  input {\n    padding: 8px;\n    border: 1px solid ${colors.grayLight};\n    border-radius: 10px;\n  }\n  input::placeholder {\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 3.75rem;\n  padding: 1.8rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n// export const HeaderLeft = styled.div`\n\nexport const AlbumList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\n  gap: 0.4rem;\n  margin: 0px auto;\n  position: relative;\n  z-index: 2;\n\n  .image-grid {\n    gap: 1.6rem;\n    margin: 1.6rem;\n    text-align: center;\n  }\n  .image-grid > p {\n    font-size: 1.8rem;\n    margin: 1rem 0;\n    font-family: ${fonts.pretendard};\n    color: ${colors.black};\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .image-item img {\n    border-radius: 5%;\n    width: 100%;\n    text-align: center;\n  }\n\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 40px;\n    padding-bottom: 60px;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 300px;\n    height: 300px;\n  }\n\n  .swiper-slide img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  margin-top: 2rem;\n  background: #fff;\n\n  border-top: 0.2rem solid ${colors.greenDeep};\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  height: 4rem;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 3.5rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    font-size: 2.7rem;\n    font-weight: 400;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    position: absolute;\n    right: 2rem;\n    font-family: Pretendard;\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-bottom: 0.2rem solid ${colors.greenDeep};\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  font-family: Pretendard;\n  font-size: 2rem;\n\n  p {\n    line-height: 1.8;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  margin-bottom: 9rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  background-color: #fafafa;\n  padding-bottom: 2rem;\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n","import styled from \"@emotion/styled\";\nimport { colors, shadow } from \"../basic\";\nimport { Button, Modal, Space } from \"antd\";\n// 버튼 기본 스타일 정의\nconst defaultBtnStyle = {\n  fontSize: \"1.8rem\",\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\n  background: \"#fff\",\n  border: 0,\n  padding: \"1rem 1.5rem\",\n  borderRadius: \"1rem\",\n  cursor: \"pointer\",\n  minWidth: \"8rem\",\n};\n\n// 버튼 마우스오버 효과\nconst buttonHover = {\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\n};\n\nexport const BtnWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\n// 색상 별 버튼 style\nexport const GreenBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const OrangeBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.orangeLight};\n  color: ${colors.orangeDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.pinkLight};\n  color: ${colors.pinkDeep};\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const BlueBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.blueLight};\n  color: ${colors.blueDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const RedBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.redLight};\n  color: ${colors.redDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PurpleBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.purpleLight};\n  color: ${colors.purpleDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const GrayBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayLight};\n  color: ${colors.grayDeep};\n  transition: 0.2s;\n  :hover {\n    ${shadow}\n  }\n`;\nexport const BlackBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayDeep};\n  color: ${colors.white};\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메인 배너 버튼\nexport const MainPinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffadc7;\n  color: #fe77a2;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const MainBrownBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffcc58;\n  color: #db8400;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메뉴 접기 버튼\nexport const AllBtn = styled.button`\n  ${defaultBtnStyle}\n  position: absolute;\n  right: -2.5rem;\n  top: 2.5rem;\n  padding: 1rem 0.5rem;\n  font-size: 1.6rem;\n  border-radius: 0 0.5rem 0.5rem 0;\n  min-width: auto;\n  width: 2.5rem;\n  height: 7rem;\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  z-index: 11;\n  word-break: break-all;\n  line-height: 1;\n`;\n\nexport const StyledeleteModal = styled(Modal)`\n  ant-btn {\n    color: red;\n  }\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","console","log","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","IMG_URL","ReadAllAlbum","items","setItems","useState","loading","setLoading","hasMore","setHasMore","totalAlbumCount","setTotalAlbumCount","setPage","loaderRef","useRef","navigate","useNavigate","loadImages","useCallback","length","albumCnt","prevItems","list","prevPage","message","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","disconnect","_jsxs","AlbumWrap","paddingTop","width","height","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","Search","placeholder","style","size","allowClear","onSearch","value","GreenBtn","onClick","e","AlbumList","map","item","Link","ref","to","className","src","albumPic","alt","albumTitle","Loading","API_SERVER_HOST","Album","UserTop","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","UserMain","_templateObject3","UserListWrap","ul","_templateObject4","UserListItem","li","_templateObject5","colors","white","shadow","UserListBox","_templateObject6","UserInfo","_templateObject7","greenDeep","black","ChildInfo","_templateObject8","grayDeep","PageNum","_templateObject9","grayLight","props","fonts","pretendard","SwiperWrap","ContentWrap","AlbumTitle","h3","TitleWrap","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","FileListStyle","_templateObject14","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","PinkBtn","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","MainPinkBtn","MainBrownBtn","AllBtn","Modal"],"sourceRoot":""}