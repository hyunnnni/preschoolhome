{"version":3,"file":"static/js/446.651fda12.chunk.js","mappings":"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","sources":["styles/adminstyle/studentlist.js","components/adminpage/StudListComponent.js","pages/adminPage/student/StudList.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { colors, fonts, mq, shadow } from \"../basic\";\n\nexport const StudentTop = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between;\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const StudentTopRight = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 1rem;\n\n  .ant-input-group-wrapper {\n    width: 20rem;\n    height: 4rem;\n  }\n  .ant-input-affix-wrapper {\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    width: 100%;\n    margin: 1rem 0 0;\n    justify-content: flex-start;\n  }\n\n  ${mq.mobileSmall} {\n    margin: 1rem 0 -2rem;\n    justify-content: flex-end;\n    .ant-input-group-wrapper {\n      width: 65%;\n    }\n  }\n`;\n\nexport const StudentMain = styled.div`\n  position: relative;\n  margin-top: 1rem;\n  min-height: 50vh;\n  input {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport const StudentListWrap = styled.ul`\n  margin-top: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-between; */\n  gap: 2%;\n`;\nexport const StudentListItem = styled.li`\n  position: relative;\n  border-radius: 1rem;\n  border-color: #ebebeb;\n  width: 32%;\n  background: ${colors.white};\n  padding: 2rem;\n  margin-bottom: 2rem;\n  ${shadow}\n  cursor: pointer;\n  input {\n    z-index: 999;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n  ${mq.mobileBig} {\n    width: 49%;\n    padding: 1rem;\n    margin-bottom: 1rem;\n  }\n`;\nexport const StudentListBox = styled.div`\n  display: flex;\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nexport const StudentImg = styled.div`\n  width: 8rem;\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  img {\n    height: 115%;\n    margin-right: 1rem;\n  }\n  ${mq.mobileSmall} {\n    margin: 0 auto 1rem;\n  }\n`;\nexport const StudentInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 1rem;\n  p {\n    padding-left: 3rem;\n  }\n  .sunflower {\n    background: url(${process.env.PUBLIC_URL +\n      \"/images/information/sunflower.svg\"})\n      no-repeat left 0.25rem/2.3rem;\n    font-family: ${fonts.kotraHope};\n    font-size: 2rem;\n    color: ${colors.orangeDeep};\n  }\n  .rose {\n    background: url(${process.env.PUBLIC_URL + \"/images/information/rose.svg\"})\n      no-repeat left 0.25rem/2.3rem;\n    font-family: ${fonts.kotraHope};\n    font-size: 2rem;\n    color: #f5062c;\n  }\n  .hibiscus {\n    background: url(${process.env.PUBLIC_URL +\n      \"/images/information/hibiscus.svg\"})\n      no-repeat left 0.25rem/2.3rem;\n    font-family: ${fonts.kotraHope};\n    font-size: 2rem;\n    color: #ff73a1;\n  }\n  .discharge {\n    background-image: url(${process.env.PUBLIC_URL +\n    \"/images/user/class_icon_bag.svg\"});\n    color: ${colors.grayDeep};\n  }\n  .graduation {\n    background-image: url(${process.env.PUBLIC_URL +\n    \"/images/user/class_icon_graduation.svg\"});\n    color: ${colors.black};\n  }\n  .leaf {\n    background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n      no-repeat left 0.25rem/2.3rem;\n    font-family: ${fonts.kotraHope};\n    font-size: 2rem;\n    color: ${colors.black};\n  }\n\n  ${mq.mobileBig} {\n    padding: 0;\n    margin: 0 auto;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  StudentImg,\n  StudentInfo,\n  StudentListBox,\n  StudentListItem,\n  StudentListWrap,\n  StudentMain,\n} from \"../../styles/adminstyle/studentlist\";\nimport { Pagination } from \"antd\";\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { IMG_URL } from \"../../api/config\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst StudListComponent = ({\n  page,\n  kidCheck,\n  studentList,\n  oncheckedClick,\n  checkedItems,\n}) => {\n  const [selectAllChecked, setSelectAllChecked] = useState(false);\n  const navigate = useNavigate();\n  const currentYear = new Date().getFullYear();\n  const { loginState, isAdminLogin } = useCustomLogin();\n\n  // 체크박스 전체 선택 시 pk값 수집\n  const handleSelectAllChange = e => {\n    const checked = e.target.checked;\n    setSelectAllChecked(checked);\n\n    const checkboxes = document.querySelectorAll(\n      'input[type=\"checkbox\"][name^=\"ikid\"]',\n    );\n    const updatedCheckedItems = Array.from(checkboxes)\n      .filter((checkbox, index) => index !== 0 && (checkbox.checked = checked))\n      .map(checkbox => (checked ? parseInt(checkbox.value) : null))\n      .filter(value => value !== null);\n\n    // setCheckedItems(updatedCheckedItems);\n    oncheckedClick(updatedCheckedItems);\n  };\n\n  // 개별 선택 시 pk값 수집\n  const handleChangeCheck = e => {\n    const value = parseInt(e.target.value);\n    if (!e.target.checked) {\n      oncheckedClick(prevItems => prevItems.filter(item => item !== value));\n    } else {\n      oncheckedClick([...checkedItems, value]);\n    }\n    // oncheckedClick(checkedItems);\n  };\n\n  // 페이지네이션\n  const handleChangePage = page => {\n    // console.log(page);\n    navigate(`/admin/student?page=${page}&kidCheck=${kidCheck}`);\n  };\n\n  return (\n    <>\n      <StudentMain>\n        {isAdminLogin || parseInt(kidCheck) === loginState.iclass ? (\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"selectAll\"\n              name=\"ikid\"\n              checked={selectAllChecked}\n              onChange={handleSelectAllChange}\n            />\n            <label htmlFor=\"selectAll\">전체 선택</label>\n          </div>\n        ) : null}\n\n        <StudentListWrap>\n          {Array.isArray(studentList.kidPage) &&\n            studentList.kidPage.map(item => (\n              <StudentListItem key={item.ikid}>\n                {isAdminLogin || parseInt(kidCheck) === loginState.iclass ? (\n                  <input\n                    type=\"checkbox\"\n                    name=\"ikid\"\n                    value={item.ikid}\n                    onChange={e => {\n                      handleChangeCheck(e);\n                    }}\n                  />\n                ) : null}\n\n                <Link\n                  to={`/admin/student/details?year=${currentYear}&ikid=${item.ikid}`}\n                >\n                  <StudentListBox>\n                    <StudentImg>\n                      <img\n                        src={`${IMG_URL}/pic/kid/${item.ikid}/${item.profile}`}\n                      />\n                    </StudentImg>\n                    <StudentInfo>\n                      <p\n                        className={\n                          item.iclass === 1\n                            ? \"hibiscus\"\n                            : item.iclass === 2\n                            ? \"sunflower\"\n                            : item.iclass === 3\n                            ? \"rose\"\n                            : \"\"\n                        }\n                      >\n                        {item.iclass === 1\n                          ? \"무궁화반\"\n                          : item.iclass === 2\n                          ? \"해바라기반\"\n                          : item.iclass === 3\n                          ? \"장미반\"\n                          : \"\"}\n                      </p>\n                      <p className=\"leaf\">{item.kidNm}</p>\n                    </StudentInfo>\n                  </StudentListBox>\n                </Link>\n              </StudentListItem>\n            ))}\n        </StudentListWrap>\n      </StudentMain>\n      <PageNum>\n        <Pagination\n          defaultCurrent={page}\n          total={studentList.totalCnt}\n          pageSize={12}\n          onChange={handleChangePage}\n        />\n      </PageNum>\n    </>\n  );\n};\n\nexport default StudListComponent;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Dropdown, Form, Select } from \"antd\";\nimport Search from \"antd/es/input/Search\";\nimport {\n  StudentTop,\n  StudentTopRight,\n} from \"../../../styles/adminstyle/studentlist\";\nimport { PageTitle } from \"../../../styles/basic\";\nimport { BlueBtn, OrangeBtn, PurpleBtn } from \"../../../styles/ui/buttons\";\nimport StudListComponent from \"../../../components/adminpage/StudListComponent\";\nimport ModalTwoBtn from \"../../../components/ui/ModalTwoBtn\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport useCustomLogin from \"../../../hooks/useCustomLogin\";\nimport {\n  getAdminStudentList,\n  patchClass,\n} from \"../../../api/adminPage/admin_api\";\nimport ModalOneBtn from \"../../../components/ui/ModalOneBtn\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nconst initStudentList = {\n  kidPage: [\n    {\n      ikid: 0,\n      iclass: 0,\n      kidNm: \"\",\n      profile: \"\",\n    },\n  ],\n  totalCnt: 0,\n};\n\nconst StudList = () => {\n  const [studentList, setStudentList] = useState(initStudentList);\n  const [checkedItems, setCheckedItems] = useState([]);\n  const [changeState, setChangeState] = useState(0);\n  const { loginState, isLogin, isTeacherLogin, isAdminLogin } =\n    useCustomLogin();\n  const [serchParams, setSearchParams] = useSearchParams();\n\n  const page = serchParams.get(\"page\");\n  const kidCheck = serchParams.get(\"kidCheck\");\n  const iclass = serchParams.get(\"iclass\");\n\n  const navigate = useNavigate();\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 원생 리스트 GET\n  useEffect(() => {\n    if (!isLogin) {\n      setTitle(\"관리자 전용 페이지\");\n      setSubTitle(\"관리자만 접근 가능합니다.\");\n      setIsOpen(true);\n      setIsNavigate(`/login`);\n      return;\n    } else {\n      getAdminStudentList({\n        successFn,\n        errorFn,\n        page,\n        kidCheck,\n        search: \"\",\n      });\n    }\n  }, [page, kidCheck, checkedItems]);\n\n  // 검색\n  const handleSearch = value => {\n    getAdminStudentList({\n      successFn,\n      errorFn: errorSearchFn,\n      page: 1,\n      kidCheck,\n      search: value,\n    });\n    // console.log(value);\n  };\n\n  const successFn = result => {\n    setStudentList(result);\n    // console.log(\"검색결과\", result);\n  };\n\n  const errorFn = result => {\n    setIsOpen(true);\n    setTitle(\"데이터 없음\");\n  };\n  const errorSearchFn = result => {\n    setIsOpen(true);\n    setTitle(\"검색 결과 없음\");\n    setSubTitle(\"검색된 이름이 없습니다.\");\n  };\n  // 반 선택\n  const classArr = [\n    { kidCheck: 0, classNm: \"반 전체\" },\n    { kidCheck: 1, classNm: \"무궁화반\" },\n    { kidCheck: 2, classNm: \"해바라기반\" },\n    { kidCheck: 3, classNm: \"장미반\" },\n    { kidCheck: -1, classNm: \"졸업\" },\n    { kidCheck: -2, classNm: \"퇴소\" },\n  ];\n\n  const classItems =\n    Array.isArray(classArr) &&\n    classArr.map(item => {\n      return {\n        key: item.kidCheck.toString(),\n        label: (\n          <Link to={`/admin/student?page=1&kidCheck=${item.kidCheck}`}>\n            {item.classNm}\n          </Link>\n        ),\n      };\n    });\n\n  // 체크 항목 담기\n  const oncheckedClick = item => {\n    setCheckedItems(item);\n  };\n  // console.log(\"체크\", checkedItems);\n\n  // 선택 졸업 & 선택 퇴소 모달\n  const [delOpen, setDelOpen] = useState(false);\n  const [ClassOpen, setClassOpen] = useState(false);\n  const [ChangeOpen, setChangeOpen] = useState(false);\n\n  const handleClassClick = () => {\n    if (checkedItems.length === 0) {\n      // console.log(\"변경할 대상이 없습니다\");\n      setIsOpen(true);\n      setTitle(\"변경할 대상이 없습니다.\");\n      setSubTitle(\"변경할 원생을 선택해주세요.\");\n    } else if (isAdminLogin || parseInt(kidCheck) == loginState.iclass) {\n      setClassOpen(true);\n      setTitle(\"반 일괄 수정\");\n      setSubTitle(\"반 이름을 선택해주세요.\");\n    } else {\n      setIsOpen(true);\n      setTitle(\"권한 없음\");\n      setSubTitle(\"담당한 반 원생 정보만 수정가능합니다.\");\n    }\n  };\n\n  const handleChangeClick = () => {\n    if (checkedItems.length === 0) {\n      // console.log(\"변경할 대상이 없습니다\");\n      setIsOpen(true);\n      setTitle(\"변경할 대상이 없습니다.\");\n      setSubTitle(\"변경할 원생을 선택해주세요.\");\n    } else if (isAdminLogin || parseInt(kidCheck) == loginState.iclass) {\n      setChangeOpen(true);\n      setTitle(\"재원 상태 수정\");\n      setSubTitle(\"재원 상태를 선택해주세요.\");\n    } else {\n      // console.log(\"재원상태 변경\");\n      setIsOpen(true);\n      setTitle(\"권한 없음\");\n      setSubTitle(\"담당한 반 원생 정보만 수정가능합니다.\");\n    }\n  };\n  const handleDelOk = () => {\n    formRef.current.submit();\n    // const obj = {\n    //   ikids: [...checkedItems],\n    //   kidCheck: changeState,\n    // };\n    // console.log(\"오비제이\", obj);\n    // patchClass({\n    //   successpatchFn,\n    //   errorpatchFn,\n    //   obj,\n    // });\n  };\n  const successpatchFn = res => {\n    setIsOpen(true);\n    setTitle(\"변경 완료\");\n    setSubTitle(\"성공적으로 변경되었습니다.\");\n    setDelOpen(false);\n    setClassOpen(false);\n    setChangeOpen(false);\n    setCheckedItems([]);\n  };\n  const errorpatchFn = res => {\n    // console.log(res);\n    setIsOpen(true);\n    setTitle(\"변경 실패\");\n    setSubTitle(\"변경을 실패했습니다. 다시 시도해주세요.\");\n  };\n  const handleCancel = () => {\n    setDelOpen(false);\n    setClassOpen(false);\n    setChangeOpen(false);\n  };\n\n  const handleOk = () => {\n    setIsOpen(false);\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  const formRef = useRef();\n  const handleExternalSubmit = () => {\n    formRef.current.submit();\n  };\n\n  const onValuesChange = values => {\n    const res = parseInt(values.class);\n    setChangeState(res);\n  };\n  const onFinish = values => {\n    const obj = {\n      ikids: [...checkedItems],\n      kidCheck: changeState,\n    };\n    // console.log(\"오비제이\", obj);\n    patchClass({\n      successpatchFn,\n      errorpatchFn,\n      obj,\n    });\n  };\n\n  return (\n    <>\n      <StudentTop>\n        <PageTitle>원생 관리</PageTitle>\n        <StudentTopRight>\n          <Dropdown menu={{ items: classItems }}>\n            <Button>\n              {kidCheck === \"0\"\n                ? \"반 전체\"\n                : kidCheck === \"1\"\n                ? \"무궁화반\"\n                : kidCheck === \"2\"\n                ? \"해바라기반\"\n                : kidCheck === \"3\"\n                ? \"장미반\"\n                : kidCheck === \"-1\"\n                ? \"졸업\"\n                : kidCheck === \"-2\"\n                ? \"퇴소\"\n                : \"반 선택\"}\n              <DownOutlined />\n            </Button>\n          </Dropdown>\n          <Search\n            placeholder=\"이름을 입력하세요.\"\n            allowClear\n            onSearch={value => {\n              handleSearch(value);\n            }}\n          />\n          <BlueBtn\n            onClick={() => {\n              handleClassClick();\n            }}\n          >\n            선택 반 변경\n          </BlueBtn>\n          <PurpleBtn\n            onClick={() => {\n              handleChangeClick();\n            }}\n          >\n            재원 상태 변경\n          </PurpleBtn>\n        </StudentTopRight>\n      </StudentTop>\n      <StudListComponent\n        page={page}\n        kidCheck={kidCheck}\n        studentList={studentList}\n        oncheckedClick={oncheckedClick}\n        checkedItems={checkedItems}\n      />\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      {/* 재원 상태 변경창 */}\n      {/* <ModalTwoBtn\n        isOpen={delOpen}\n        handleOk={handleDelOk}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      /> */}\n      {/* 반 상태 변경창 */}\n      <ModalTwoBtn\n        isOpen={ClassOpen}\n        handleOk={handleExternalSubmit}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      >\n        <Form\n          ref={formRef}\n          name=\"account\"\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onValuesChange={onValuesChange}\n        >\n          <Form.Item name=\"class\">\n            <Select placeholder=\"반 선택\">\n              <Select.Option value=\"1\">무궁화반</Select.Option>\n              <Select.Option value=\"2\">해바라기반</Select.Option>\n              <Select.Option value=\"3\">장미반</Select.Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </ModalTwoBtn>\n      {/* 재원 상태 변경창 */}\n      <ModalTwoBtn\n        isOpen={ChangeOpen}\n        handleOk={handleDelOk}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      >\n        <Form\n          ref={formRef}\n          name=\"account\"\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onValuesChange={onValuesChange}\n        >\n          <Form.Item name=\"class\">\n            <Select placeholder=\"재원 상태 선택\">\n              <Select.Option value=\"0\">재원</Select.Option>\n              <Select.Option value=\"-1\">졸업</Select.Option>\n              <Select.Option value=\"-2\">퇴소</Select.Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </ModalTwoBtn>\n    </>\n  );\n};\n\nexport default StudList;\n"],"names":["StudentTop","styled","div","_templateObject","_taggedTemplateLiteral","mq","mobileBig","StudentTopRight","_templateObject2","mobileSmall","StudentMain","_templateObject3","StudentListWrap","ul","_templateObject4","StudentListItem","li","_templateObject5","colors","white","shadow","StudentListBox","_templateObject6","StudentImg","_templateObject7","StudentInfo","_templateObject8","fonts","kotraHope","orangeDeep","grayDeep","black","_ref","page","kidCheck","studentList","oncheckedClick","checkedItems","selectAllChecked","setSelectAllChecked","useState","navigate","useNavigate","currentYear","Date","getFullYear","loginState","isAdminLogin","useCustomLogin","_jsxs","_Fragment","children","parseInt","iclass","_jsx","type","id","name","checked","onChange","e","target","checkboxes","document","querySelectorAll","updatedCheckedItems","Array","from","filter","checkbox","index","map","value","htmlFor","isArray","kidPage","item","ikid","prevItems","handleChangeCheck","Link","to","concat","src","IMG_URL","profile","className","kidNm","PageNum","Pagination","defaultCurrent","total","totalCnt","pageSize","initStudentList","StudList","setStudentList","setCheckedItems","changeState","setChangeState","isLogin","isTeacherLogin","serchParams","setSearchParams","useSearchParams","get","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","getAdminStudentList","successFn","errorFn","search","result","errorSearchFn","classArr","classNm","classItems","key","toString","label","delOpen","setDelOpen","ClassOpen","setClassOpen","ChangeOpen","setChangeOpen","successpatchFn","res","errorpatchFn","handleCancel","formRef","useRef","onValuesChange","values","class","onFinish","obj","ikids","patchClass","PageTitle","Dropdown","menu","items","Button","DownOutlined","Search","placeholder","allowClear","onSearch","handleSearch","BlueBtn","onClick","length","PurpleBtn","StudListComponent","ModalOneBtn","handleOk","ModalTwoBtn","handleExternalSubmit","current","submit","Form","ref","style","maxWidth","initialValues","remember","Item","Select","Option","handleDelOk"],"sourceRoot":""}