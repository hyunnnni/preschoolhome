{"version":3,"file":"static/js/785.6ebda5a2.chunk.js","mappings":"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","sources":["components/ui/ModalOneBtn.js","components/ui/ModalTwoBtn.js","hooks/useCustomLogin.js","components/user/login/LoginComponent.js","components/common/ResultModal.js","pages/user/Login.js","styles/ui/buttons.js","styles/ui/warning.js","styles/user/login.js"],"sourcesContent":["import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalTwoBtn = ({\r\n  isOpen,\r\n  handleOk,\r\n  handleCancel,\r\n  title,\r\n  subTitle,\r\n  children,\r\n}) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n        <OrangeBtn key=\"back\" onClick={handleCancel}>\r\n          취소\r\n        </OrangeBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalTwoBtn;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { Button, Flex, Form, Input, Radio, Select, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { FormWrap } from \"../../../styles/user/login\";\r\nimport { GreenBtn } from \"../../../styles/ui/buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LogoWrap } from \"../../../styles/basic\";\r\nimport useCustomLogin from \"../../../hooks/useCustomLogin\";\r\nimport ModalOneBtn from \"../../ui/ModalOneBtn\";\r\n\r\nconst LoginComponent = () => {\r\n  const [loginParam, setLoginParam] = useState(\"\");\r\n  const [userState, setUserState] = useState(\"\");\r\n  const { doLogin, doParentLogin, moveToPath } = useCustomLogin();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const onFinish = values => {\r\n    if (userState === \"2\") {\r\n      // console.log(userState, \"선생님로그인\");\r\n      doLogin({ loginParam, successFn, failFn, errorFn });\r\n    } else {\r\n      // console.log(userState, \"학부모로그인\");\r\n      doParentLogin({ loginParam, successFn, failFn, errorFn });\r\n    }\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChanged = (changeValues, allValues) => {\r\n    setLoginParam({ ...allValues });\r\n  };\r\n  const handleUserStateChange = e => {\r\n    setUserState(e.target.value);\r\n  };\r\n  // 로그인 결과\r\n  const successFn = result => {\r\n    moveToPath(\"/\");\r\n  };\r\n  const failFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"로그인 실패\");\r\n    setSubTitle(result);\r\n  };\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"로그인 실패\");\r\n    setSubTitle(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <FormWrap>\r\n        <LogoWrap>\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"}\r\n          />\r\n          <p>서비스 이용을 위해 로그인 해주세요.</p>\r\n        </LogoWrap>\r\n        <Flex vertical gap=\"middle\">\r\n          <Radio.Group\r\n            defaultValue=\"1\"\r\n            buttonStyle=\"solid\"\r\n            size=\"large\"\r\n            onChange={e => {\r\n              handleUserStateChange(e);\r\n            }}\r\n            style={{ textAlign: \"center\", marginBottom: \"2rem\" }}\r\n          >\r\n            <Radio.Button type=\"primary\" value=\"1\" style={{ width: \"50%\" }}>\r\n              학부모\r\n            </Radio.Button>\r\n            <Radio.Button type=\"primary\" value=\"2\" style={{ width: \"50%\" }}>\r\n              선생님\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Flex>\r\n        <Form\r\n          name=\"login\"\r\n          style={{\r\n            maxWidth: 600,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={(changeValues, allValues) => {\r\n            onValuesChanged(changeValues, allValues);\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"uid\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"아이디를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input size=\"large\" placeholder=\"아이디를 입력해주세요.\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"upw\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              size=\"large\"\r\n              autoComplete=\"false\"\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <GreenBtn\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              로그인\r\n            </GreenBtn>\r\n          </Form.Item>\r\n        </Form>\r\n        <Tooltip title=\"회원가입 하러가기\">\r\n          <Link to=\"/user/accounts\">아직 회원이 아니신가요?</Link>\r\n        </Tooltip>\r\n      </FormWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n","import React from \"react\";\r\nimport { ExclamationCircleFilled } from \"@ant-design/icons\";\r\nimport { Button, Modal, Space } from \"antd\";\r\nconst { confirm, warning, info, Error } = Modal;\r\n\r\nconst showConfirm = () => {\r\n  confirm({\r\n    title: \"이 항목을 수정하시겠습니까?\",\r\n    icon: <ExclamationCircleFilled />,\r\n    content: \"수정된 정보는 다시 되돌릴 수 없습니다.\",\r\n    onOk() {\r\n      // console.log(\"OK\");\r\n    },\r\n    onCancel() {\r\n      // console.log(\"Cancel\");\r\n    },\r\n    maskClosable: true,\r\n    // maskClosable\r\n  });\r\n};\r\n// const showPromiseConfirm = () => {\r\n//   confirm({\r\n//     title: \"Do you want to delete these items?\",\r\n//     icon: <ExclamationCircleFilled />,\r\n//     content:\r\n//       \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n//     onOk() {\r\n//       return new Promise((resolve, reject) => {\r\n//         setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\r\n//       }).catch(() => console.log(\"Oops errors!\"));\r\n//     },\r\n//     onCancel() {},\r\n//   });\r\n// };\r\n\r\nconst showModifyConfirm = () => {\r\n  confirm({\r\n    title: \"이 항목을 수정하시겠습니까?\",\r\n    icon: <ExclamationCircleFilled />,\r\n    content: \"수정된 정보는 다시 되돌릴 수 없습니다.\",\r\n    okText: \"수정\",\r\n    okType: \"danger\",\r\n    cancelText: \"취소\",\r\n    onOk() {\r\n      // console.log(\"OK\");\r\n    },\r\n    onCancel() {\r\n      // console.log(\"Cancel\");\r\n    },\r\n    maskClosable: true,\r\n  });\r\n};\r\n// const showPropsConfirm = () => {\r\n//   confirm({\r\n//     title: \"이 항목을 삭제하시겠습니까?\",\r\n//     icon: <ExclamationCircleFilled />,\r\n//     content: \"삭제된 정보는 다시 되돌릴 수 없습니다.\",\r\n//     okText: \"Yes\",\r\n//     okType: \"danger\",\r\n//     okButtonProps: {\r\n//       disabled: true,\r\n//     },\r\n//     cancelText: \"No\",\r\n//     onOk() {\r\n//       console.log(\"OK\");\r\n//     },\r\n//     onCancel() {\r\n//       console.log(\"Cancel\");\r\n//     },\r\n//   });\r\n// };\r\n\r\nexport const ConfirmModal = () => (\r\n  <Button onClick={showConfirm}>Confirm</Button>\r\n);\r\n\r\nexport const DeleteModal = () => {\r\n  const showDeleteConfirm = () => {\r\n    confirm({\r\n      title: \"이 항목을 삭제하시겠습니까?\",\r\n      icon: <ExclamationCircleFilled />,\r\n      content: \"삭제된 정보는 다시 되돌릴 수 없습니다.\",\r\n      okText: \"삭제\",\r\n      okType: \"danger\",\r\n      cancelText: \"취소\",\r\n      maskClosable: true,\r\n      onOk() {\r\n        // console.log(\"OK\");\r\n      },\r\n      onCancel() {\r\n        // console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={showDeleteConfirm}>Delete</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const OkModal = () => {\r\n  const showOkConfirm = () => {\r\n    confirm({\r\n      title: \"이 항목을 등록하시겠습니까?\",\r\n      icon: <ExclamationCircleFilled />,\r\n      content: \"등록된 정보는 다시 되돌릴 수 없습니다.\",\r\n      okText: \"등록\",\r\n      okType: \"danger\",\r\n      cancelText: \"취소\",\r\n      maskClosable: true,\r\n      onOk() {\r\n        // console.log(\"OK\");\r\n      },\r\n      onCancel() {\r\n        // console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={showOkConfirm}>등록</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ModifyModal = () => (\r\n  <Button onClick={showModifyConfirm} type=\"dashed\">\r\n    Delete\r\n  </Button>\r\n);\r\n\r\n// export const ResultModal = () => (\r\n//   <Space wrap>\r\n//     <Button onClick={showPromiseConfirm}>With promise</Button>\r\n\r\n//     <Button onClick={showPropsConfirm} type=\"dashed\">\r\n//       With extra props\r\n//     </Button>\r\n//   </Space>\r\n// );\r\n// export default ResultModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ContentInner } from \"../../styles/basic\";\r\nimport LoginComponent from \"../../components/user/login/LoginComponent\";\r\nimport { ModifyModal } from \"../../components/common/ResultModal\";\r\nimport { Modal } from \"antd\";\r\nimport ModalTwoBtn from \"../../components/ui/ModalTwoBtn\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n// const LazyIdentNum = lazy(() => import(\"./pages/user/IdentNum\"));\r\n// const LazyGuardianSignup = lazy(() => import(\"./pages/user/GuardianSignup\"));\r\n// const LazyMyPage = lazy(() => import(\"./pages/user/MyPage\"));\r\n// 교직원 가입 페이지 예정\r\n// const LazyStaffSignup = lazy(() => import(\"./pages/user/StaffSignup\"));\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  // 안내창 state\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // 로그인 체크\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 뒤로가기\r\n    navigate(-1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLogin || isParentLogin) {\r\n      setTitle(\"이미 로그인 되어있습니다.\");\r\n      setSubTitle(\r\n        \"이미 로그인 되어 이용할 수 없습니다. \\n 로그아웃 후 이용해주세요.\",\r\n      );\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n  }, []);\r\n  return (\r\n    <ContentInner>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <LoginComponent />\r\n    </ContentInner>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors } from \"../basic\";\r\n\r\nexport const FormWrap = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 3rem 5rem;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  ${boxStyle}\r\n  background:#fafafa;\r\n  border: 1px solid #f1f1f1;\r\n  h3 {\r\n    text-align: center;\r\n    color: ${colors.greenDeep};\r\n  }\r\n  p {\r\n    margin-top: 2rem;\r\n  }\r\n  a {\r\n    float: right;\r\n    color: ${colors.grayDeep};\r\n    &:hover {\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .ant-form-item .ant-form-item-explain-error {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled),\r\n  .ant-radio-button-wrapper-checked:not(\r\n      .ant-radio-button-wrapper-disabled\r\n    ):hover {\r\n    background: ${colors.greenDeep};\r\n    border-color: ${colors.greenDeep};\r\n  }\r\n  .ant-radio-button-wrapper:hover {\r\n    color: ${colors.greenDeep};\r\n  }\r\n  .ipt_box {\r\n    position: relative;\r\n    button {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      height: 3.2rem;\r\n      line-height: 3.2rem;\r\n      padding: 0;\r\n      z-index: 9;\r\n      border-radius: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PrivacyWrap = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n  padding: 2rem;\r\n  margin: 3rem 0;\r\n  font-size: 1.3rem;\r\n  div {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n"],"names":["_ref","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","handleCancel","onCancel","OrangeBtn","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","doParentLogin","_ref2","postParentLoginAsync","moveToPath","path","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","async","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","error","console","LoginComponent","setLoginParam","useState","userState","setUserState","setTitle","setSubTitle","setIsOpen","result","_Fragment","ModalOneBtn","FormWrap","LogoWrap","src","Flex","vertical","Radio","defaultValue","buttonStyle","size","onChange","e","target","value","handleUserStateChange","style","textAlign","marginBottom","Form","name","maxWidth","onFinish","values","onFinishFailed","errorInfo","onValuesChange","changeValues","allValues","onValuesChanged","autoComplete","Item","rules","required","message","Input","placeholder","Password","GreenBtn","htmlType","Tooltip","Link","confirm","warning","info","Error","Login","useEffect","ContentInner","defaultBtnStyle","fontSize","fontFamily","background","border","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","_templateObject3","orangeLight","orangeDeep","_templateObject4","pinkLight","pinkDeep","BlueBtn","_templateObject5","blueLight","blueDeep","PurpleBtn","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","GrayBtn","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","AllBtn","_templateObject12","_templateObject13","boxStyle","black","PrivacyWrap"],"sourceRoot":""}