{"version":3,"file":"static/js/118.68bd52b2.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeModify.js","styles/album/album.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { UploadOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Upload, Modal } from \"antd\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getDetail, getList, putNotice } from \"../../api/notice/notice_api\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport { FileListStyle } from \"../../styles/album/album\";\r\n\r\nconst path = `${IMG_URL}/api/full`;\r\nconst imgpath = `${IMG_URL}/pic/full`;\r\nconst customRequest = ({ onSuccess }) => {\r\n  onSuccess(\"ok\");\r\n};\r\nconst obj = {\r\n  pics: [],\r\n  dto: {\r\n    ifullNotice: 0,\r\n    fullTitle: \"\",\r\n    fullContents: \"\",\r\n    fullNoticeFix: 0,\r\n    iteacher: 0,\r\n  },\r\n};\r\n\r\nconst NoticeModify = () => {\r\n  const { tno } = useParams();\r\n  const formRef = useRef();\r\n  const [noticeData, setNoticeData] = useState(obj); // noticeData 상태를 추가\r\n\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // const [initialData, setInitialData] = useState({\r\n  //   fullTitle: \"\",\r\n  //   fullContents: \"\",\r\n  //   fullNoticeFix: \"\",\r\n  //   pics: [],\r\n  // });\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n  };\r\n\r\n  // URL에서 파일을 생성하고 fileList 상태를 업데이트하는 함수\r\n  const imageUrlToFile = async imageUrl => {\r\n    try {\r\n      // console.log(\"imageUrl\", imageUrl);\r\n      const fileName = imageUrl.substring(imageUrl.lastIndexOf(\"/\") + 1);\r\n      const response = await fetch(imageUrl, { mode: \"no-cors\" });\r\n      const blob = await response.blob();\r\n      const imageFile = new File([blob], fileName, { type: \"image/jpeg\" }); // MIME type을 지정할 수 있습니다.\r\n\r\n      // fileList에 새로운 파일을 추가합니다.\r\n      setFileList(prevFileList => [...prevFileList, imageFile]);\r\n    } catch (error) {\r\n      console.error(\"Error converting image URL to File:\", error);\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    // console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleImageRemove = file => {\r\n    const newFileList = fileList.filter(item => item.uid !== file.uid);\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  const handleSuccess = data => {\r\n    setIsModalVisible(true);\r\n    navigate(`/notice/details/${tno}`);\r\n    // console.log(\"게시글 수정 성공:\", data);\r\n  };\r\n\r\n  const handleFailure = errorMessage => {\r\n    Modal.error({\r\n      title: \"유치원소식 수정 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"앨범 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"유치원소식 수정 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소하시겠습니까?\",\r\n      content: \"수정 내용이 저장되지 않습니다.\",\r\n      onOk: () => {\r\n        // console.log(\"취소가 확인되었습니다.\");\r\n        navigate(\"/notice\"); // 사용자를 앨범 목록 페이지로 이동\r\n      },\r\n      okText: \"확인\",\r\n      cancelText: \"계속 수정\",\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          ifullNotice: tno,\r\n          fullTitle: data.albumTitle,\r\n          fullContents: data.albumContents,\r\n          fullNoticeFix: data.fullNoticeFix,\r\n          iteacher: 1,\r\n          delPics: [0],\r\n        }),\r\n      ],\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n\r\n    // 새로 추가된 이미지 파일을 FormData에 추가합니다.\r\n    fileList.forEach(async file => {\r\n      const response = await fetch(file);\r\n      const data = await response.blob();\r\n      if (file.originFileObj) {\r\n        // 새로운 파일인 경우, 파일 데이터를 추가합니다.\r\n        formData.append(\"pics\", file.originFileObj);\r\n      } else if (file.url) {\r\n        // 이미 서버에 존재하는 파일인 경우, 파일 경로를 추가합니다.\r\n        formData.append(\"pics\", file.url);\r\n      }\r\n    });\r\n\r\n    // 서버에 요청을 보냅니다.\r\n    try {\r\n      const response = await putNotice({\r\n        data: formData,\r\n        successFn: handleSuccess,\r\n        failFn: handleFailure,\r\n        errorFn: handleError,\r\n      });\r\n\r\n      // 응답 처리\r\n      console.log(\"Response from putNotice:\", response);\r\n    } catch (error) {\r\n      handleError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchNoticeData = async () => {\r\n      getDetail({\r\n        tno: tno,\r\n        successFn: data => {\r\n          setNoticeData(data);\r\n          form.setFieldsValue({\r\n            fullTitle: data.fullTitle,\r\n            fullContents: data.fullContents,\r\n          });\r\n\r\n          // Transform album pictures for the fileList state\r\n          const transformedFileList = data.ifullPic.map((pic, index) => ({\r\n            uid: index.toString(), // uid is required to be unique\r\n            name: pic, // file name\r\n            status: \"done\", // upload status\r\n            url: `${imgpath}/${tno}/${pic}`, // file URL, adjust the path as needed\r\n          }));\r\n          setFileList(transformedFileList);\r\n        },\r\n        failFn: errorMessage => {\r\n          console.error(\"Notice fetch failed:\", errorMessage);\r\n          // Handle failure (show error message to user, etc.)\r\n        },\r\n        errorFn: errorData => {\r\n          console.error(\"Error fetching notice:\", errorData);\r\n          // Handle error (show error message to user, etc.)\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchNoticeData();\r\n  }, [tno, form]);\r\n\r\n  const beforeUpload = file => {\r\n    // 새로 업로드되는 파일을 fileList에 추가\r\n    const newFileList = [\r\n      ...fileList,\r\n      {\r\n        uid: file.uid, // 파일의 고유 ID\r\n        name: file.name, // 파일 이름\r\n        status: \"done\", // 파일 상태\r\n        originFileObj: file, // 파일 객체\r\n      },\r\n    ];\r\n    setFileList(newFileList);\r\n    return false; // 파일을 자동으로 업로드하지 않음\r\n  };\r\n\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    // 업로드된 파일의 상태 변화를 처리\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  const onRemove = file => {\r\n    // 파일이 제거될 때 fileList에서 해당 파일을 제거\r\n    const newFileList = fileList.filter(item => item.uid !== file.uid);\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>유치원 소식 수정</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Checkbox\r\n          onChange={onChange}\r\n          style={{ marginBottom: 10 }}\r\n          checked={fullNoticeFix}\r\n        >\r\n          상단고정\r\n        </Checkbox>\r\n\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"fullTitle\"\r\n            initialValue={noticeData.noticeTitle} // 기존 값 설정\r\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"fullContents\"\r\n            initialValue={noticeData.noticeContents} // 기존 값 설정\r\n            style={{ height: \"150px\" }}\r\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              beforeUpload={beforeUpload}\r\n              onRemove={onRemove}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              maxCount={3}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: 35,\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <GreenBtn onClick={handleGreenButtonClick}>수정</GreenBtn>\r\n          <PinkBtn\r\n            onClick={handleCancelConfirmation}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            취소\r\n          </PinkBtn>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/notice\">\r\n        <Modal\r\n          title=\"수정 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 수정되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeModify;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","IMG_URL","imgpath","customRequest","onSuccess","obj","pics","dto","ifullNotice","fullTitle","fullContents","fullNoticeFix","iteacher","NoticeModify","useParams","formRef","useRef","noticeData","setNoticeData","useState","form","Form","useForm","fileList","setFileList","setFullNoticeFix","isModalVisible","setIsModalVisible","navigate","useNavigate","handleSuccess","handleFailure","errorMessage","Modal","title","content","handleError","console","useEffect","setFieldsValue","transformedFileList","ifullPic","map","pic","index","uid","name","url","errorData","fetchNoticeData","_jsxs","children","_jsx","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","Checkbox","onChange","e","target","checked","marginBottom","ref","onFinish","formData","FormData","Blob","JSON","stringify","albumTitle","albumContents","delPics","type","append","forEach","fetch","file","blob","originFileObj","log","Item","initialValue","noticeTitle","rules","required","Input","placeholder","noticeContents","TextArea","FileListStyle","Upload","Dragger","action","listType","beforeUpload","newFileList","onRemove","filter","item","className","multiple","maxCount","Button","icon","UploadOutlined","display","justifyContent","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","confirm","onOk","okText","cancelText","marginLeft","Link","to","open","handleOk","onCancel","handleCancel","cancelButtonProps","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","paddingTop","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14"],"sourceRoot":""}