{"version":3,"file":"static/js/7564.e3b0967d.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeWrite.js","styles/album/album.js","styles/ui/buttons.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nimport { postNotice } from \"../../api/notice/notice_api\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 서버로 보낼 데이터 구성\r\n\r\nconst NoticeWrite = () => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const navigate = useNavigate();\r\n\r\n  const formRef = useRef(); // Form 컴포넌트에 대한 ref 생성\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n  };\r\n\r\n  const onChange = e => {\r\n    // console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].filter(file => !!file.status);\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: () => handleCancelOk(),\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    // console.log(\"fileList\", fileList);\r\n    // console.log(\"fullNoticeFix\", fullNoticeFix); // 확인용 로그\r\n\r\n    const formData = new FormData();\r\n\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iteacher: 1,\r\n          fullTitle: data.fullTitle,\r\n          fullContents: data.fullContents,\r\n          fullNoticeFix: fullNoticeFix ? 1 : 0,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postNotice({\r\n      product: formData,\r\n      successFn: handleSuccess,\r\n      failFn: handleFail,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancelOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\r\n    navigate(\"/notice\");\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsModalVisible(true);\r\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\r\n  };\r\n\r\n  const handleFail = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"유치원소식 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"유치원소식 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"유치원소식 업로드 중 오류 발생\",\r\n      content: error,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>유치원 소식</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 600,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Checkbox onChange={onChange} style={{ marginBottom: 10 }}>\r\n          상단고정\r\n        </Checkbox>\r\n\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"fullTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"fullContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              // maxCount={3}\r\n              multiple={true}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: 35,\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <GreenBtn onClick={handleGreenButtonClick}>등록</GreenBtn>\r\n          <PinkBtn\r\n            onClick={handleCancelConfirmation}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            취소\r\n          </PinkBtn>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/notice\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeWrite;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","NoticeWrite","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","fullNoticeFix","setFullNoticeFix","navigate","useNavigate","formRef","useRef","handleCancelOk","handleSuccess","handleFail","errorMessage","Modal","title","content","handleError","console","_jsxs","children","_jsx","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","Checkbox","onChange","e","target","checked","marginBottom","ref","onFinish","formData","FormData","dto","Blob","JSON","stringify","iteacher","fullTitle","fullContents","type","append","forEach","file","originFileObj","Item","name","rules","required","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","info","filter","customRequest","onSuccess","className","multiple","Button","icon","UploadOutlined","display","justifyContent","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","confirm","onOk","okText","cancelText","onCancel","marginLeft","Link","to","open","handleOk","handleCancel","cancelButtonProps","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","paddingTop","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14","defaultBtnStyle","fontSize","fontFamily","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn","CheckOutlined","React","AntdIcon","_extends","CheckOutlinedSvg"],"sourceRoot":""}