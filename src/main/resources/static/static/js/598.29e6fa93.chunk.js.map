{"version":3,"file":"static/js/598.29e6fa93.chunk.js","mappings":"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","sources":["api/album/album_api.js","api/individualNotice/indivNoticeApi.js","components/ui/ModalOneBtn.js","hooks/useCustomLogin.js","components/album/ReadAllAlbum.js","pages/album/Album.js","styles/adminstyle/guardianlist.js","styles/album/album.js","styles/ui/warning.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  // console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import Search from \"antd/es/input/Search\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getlistAll } from \"../../api/album/album_api\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport { UserTopRight } from \"../../styles/adminstyle/guardianlist\";\r\nimport {\r\n  AlbumList,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  SearchBar,\r\n} from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nconst path = `${IMG_URL}/pic/album`;\r\nconst ReadAllAlbum = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalAlbumCount, setTotalAlbumCount] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const loaderRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const { isLogin } = useCustomLogin();\r\n\r\n  const loadImages = useCallback(async () => {\r\n    // 로딩 중이거나 모든 데이터가 로드되었다면 함수를 종료합니다.\r\n    if (\r\n      loading ||\r\n      (totalAlbumCount !== null && items.length >= totalAlbumCount)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    getlistAll({\r\n      page,\r\n      successFn: data => {\r\n        setTotalAlbumCount(data.albumCnt);\r\n        setItems(prevItems => [...prevItems, ...data.list]);\r\n        setPage(prevPage => prevPage + 1);\r\n        setHasMore(data.list.length > 0);\r\n        setLoading(false);\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n    });\r\n  }, [loading, totalAlbumCount, items, page]);\r\n\r\n  // Observer 설정\r\n  const handleObserver = useCallback(\r\n    entities => {\r\n      const target = entities[0];\r\n      if (target.isIntersecting && hasMore && !loading) {\r\n        loadImages();\r\n      }\r\n    },\r\n    [loadImages, hasMore, loading],\r\n  );\r\n\r\n  // Observer 인스턴스 생성\r\n  useEffect(() => {\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: \"0px\", // 하단 감지 영역을 위로 올립니다.\r\n      threshold: 0.5, // 필요에 따라 threshold 조정\r\n    };\r\n    const observer = new IntersectionObserver(handleObserver, observerOptions);\r\n    if (loaderRef.current) observer.observe(loaderRef.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [handleObserver]);\r\n\r\n  // 컴포넌트 마운트 시 첫 페이지 데이터 로드\r\n  useEffect(() => {\r\n    loadImages();\r\n  }, []);\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40} width={100} height={100}>\r\n      {/* 메인 콘텐츠 상단 바 컴포넌트 */}\r\n      <AlbumTopBar>\r\n        <PageTitle>활동앨범</PageTitle>\r\n        <SearchBar>\r\n          <UserTopRight>\r\n            <Search\r\n              placeholder=\"제목을 입력하세요.\"\r\n              style={{\r\n                width: 300,\r\n              }}\r\n              size={\"large\"}\r\n              allowClear\r\n              // onSearch={value => console.log(value)}\r\n            />\r\n            {isLogin ? (\r\n              <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\r\n            ) : null}\r\n          </UserTopRight>\r\n        </SearchBar>\r\n      </AlbumTopBar>\r\n      <AlbumList>\r\n        {items.map(item => (\r\n          <Link\r\n            ref={loaderRef}\r\n            key={item.ialbum}\r\n            to={`/album/details/${item.ialbum}`}\r\n          >\r\n            <ul className=\"image-grid\">\r\n              <li className=\"image-item\">\r\n                <img\r\n                  height={400}\r\n                  src={`${path}/${item.ialbum}/${item.albumPic}`}\r\n                  alt={item.albumTitle}\r\n                />\r\n              </li>\r\n              <p>{item.albumTitle}</p>\r\n            </ul>\r\n          </Link>\r\n        ))}\r\n        {loading && <Loading className=\"loading\" />}\r\n      </AlbumList>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default ReadAllAlbum;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReadAllAlbum from \"../../components/album/ReadAllAlbum\";\r\nimport {\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api/album/listall`;\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\n\r\nconst Album = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin && !isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && !isParentLogin) {\r\n      navigate(\"/login\"); // 로그인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <ReadAllAlbum />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\n\r\nexport const UserTop = styled.div`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const UserTopRight = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const UserMain = styled.div`\r\n  position: relative;\r\n  min-height: 50vh;\r\n  input {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const UserListWrap = styled.ul`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-between; */\r\n  gap: 1rem;\r\n`;\r\nexport const UserListItem = styled.li`\r\n  position: relative;\r\n  border-radius: 1rem;\r\n  border-color: #ebebeb;\r\n  width: 32%;\r\n  background: ${colors.white};\r\n  padding: 2rem;\r\n  margin-bottom: 1rem;\r\n  ${shadow}\r\n`;\r\nexport const UserListBox = styled.div`\r\n  margin: auto;\r\n  input {\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    right: 2rem;\r\n    bottom: 2rem;\r\n  }\r\n  em {\r\n    font-size: 1.5rem;\r\n    font-style: normal;\r\n  }\r\n`;\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n\r\n  span {\r\n    color: ${colors.greenDeep};\r\n    font-size: 1.5rem;\r\n  }\r\n  p {\r\n    color: ${colors.black};\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nexport const ChildInfo = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  p {\r\n    color: ${colors.grayDeep};\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const PageNum = styled.div`\r\n  position: relative;\r\n  /* bottom: 10rem;\r\n  left: 50%;\r\n  transform: translateX(-50%); */\r\n  margin-top: 3rem;\r\n  text-align: center;\r\n\r\n  .ant-pagination-prev {\r\n    font-size: 1.5rem;\r\n    color: ${colors.grayDeep};\r\n    background-color: ${colors.grayLight};\r\n    border-radius: 50%;\r\n  }\r\n  .ant-pagination-next {\r\n    font-size: 1.5rem;\r\n    color: ${colors.grayDeep};\r\n    background-color: ${colors.grayLight};\r\n    border-radius: 50%;\r\n  }\r\n  .ant-pagination-item-active {\r\n    font-weight: 400;\r\n    border-radius: 50%;\r\n    background-color: ${colors.greenDeep};\r\n    border-color: ${colors.greenDeep};\r\n    a {\r\n      color: #fff;\r\n    }\r\n    &:hover {\r\n      border-color: ${colors.greenDeep};\r\n      a {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  .ant-pagination-item:hover {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","getIndParentList","year","ikid","message","getIndTeacherList","iclass","postIndNotice","_ref3","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","_ref6","getIndDetail","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","IMG_URL","ReadAllAlbum","items","setItems","useState","loading","setLoading","hasMore","setHasMore","totalAlbumCount","setTotalAlbumCount","setPage","loaderRef","useRef","loadImages","useCallback","length","albumCnt","prevItems","list","prevPage","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","disconnect","AlbumWrap","height","AlbumTopBar","PageTitle","SearchBar","UserTopRight","Search","placeholder","style","size","allowClear","GreenBtn","e","AlbumList","map","item","Link","ref","className","src","albumPic","alt","albumTitle","Loading","API_SERVER_HOST","Album","setIsOpen","setTitle","setSubTitle","_Fragment","ModalOneBtn","UserTop","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","UserMain","_templateObject3","UserListWrap","ul","_templateObject4","UserListItem","li","_templateObject5","colors","white","shadow","UserListBox","_templateObject6","UserInfo","_templateObject7","greenDeep","black","ChildInfo","_templateObject8","grayDeep","PageNum","_templateObject9","grayLight","props","fonts","pretendard","SwiperWrap","ContentWrap","AlbumTitle","h3","TitleWrap","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","FileListStyle","_templateObject13","_templateObject14"],"sourceRoot":""}