{"version":3,"file":"static/js/118.ed0b9e05.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeModify.js","styles/album/album.js","styles/notice/notice.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data\", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, search, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/listall?page=${page}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    // console.log(\"res.data\", res.data);\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정시 정보 조회하기\r\nexport const editNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport { editNotice, putNotice } from \"../../api/notice/notice_api\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport { FileListStyle, WriteWrap } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { NoticeWrap } from \"../../styles/notice/notice\";\r\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nconst path = `${IMG_URL}/api/full`;\r\nconst imgpath = `${IMG_URL}/pic/fullnotice`;\r\nconst customRequest = ({ onSuccess }) => {\r\n  onSuccess(\"ok\");\r\n};\r\nconst obj = [\r\n  {\r\n    fullTitle: \"\",\r\n    fullContents: \"\",\r\n    writer: \"\",\r\n    writerName: \"\",\r\n    createdAT: \"\",\r\n    fullNoticeFix: 0,\r\n    fullPic: [],\r\n  },\r\n];\r\n\r\nconst NoticeModify = () => {\r\n  const { tno } = useParams();\r\n  const { ifullPic } = useParams();\r\n  const formRef = useRef();\r\n  const [noticeData, setNoticeData] = useState(obj); // noticeData 상태를 추가\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [deletedPics, setDeletedPics] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const navigate = useNavigate();\r\n  const [newPics, setNewPics] = useState([]);\r\n\r\n  // 모달 상태 관리\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [showCancelConfirmModal, setshowCancelConfirmModal] = useState(false);\r\n\r\n  // const [initialData, setInitialData] = useState({\r\n  //   fullTitle: \"\",\r\n  //   fullContents: \"\",\r\n  //   fullNoticeFix: \"\",\r\n  //   pics: [],\r\n  // });\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n  };\r\n\r\n  const onChange = e => {\r\n    // console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleSuccessModalOk = () => {\r\n    setShowSuccessModal(false);\r\n  };\r\n\r\n  // 취소 확인 모달 핸들러\r\n  const handleCancelConfirmModalOk = () => {\r\n    setshowCancelConfirmModal(false);\r\n    navigate(`/notice/details/${tno}`);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setshowCancelConfirmModal(true); // 취소 확인 모달 표시\r\n  };\r\n\r\n  const handleFail = errorMessage => {\r\n    Modal.error({\r\n      title: \"유치원소식 수정 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"유치원소식 수정 오류:\", error);\r\n    Modal.error({\r\n      title: \"유치원소식 수정 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n\r\n    const noticeInfo = {\r\n      ifullNotice: tno,\r\n      fullTitle: data.fullTitle,\r\n      fullContents: data.fullContents,\r\n      fullNoticeFix: data.fullNoticeFix,\r\n      iteacher: 1,\r\n    };\r\n\r\n    // deletedPics 배열에 항목이 있는 경우에만 delPics 속성을 추가\r\n    if (deletedPics.length > 0) {\r\n      noticeInfo.delPics = deletedPics;\r\n    }\r\n    const dto = new Blob([JSON.stringify(noticeInfo)], {\r\n      type: \"application/json\",\r\n    });\r\n    formData.append(\"dto\", dto);\r\n\r\n    // console.log(\"================= 보내는 데이터 : \", dto);\r\n\r\n    // 새로 추가된 이미지 파일을 FormData에 추가합니다.\r\n    // console.log(\"현재 남아있는 fileList \", fileList);\r\n    fileList.forEach(async file => {\r\n      // console.log(\"file\", file);\r\n      if (file.originFileObj) {\r\n        // 새로운 파일인 경우, 파일 데이터를 추가합니다.\r\n        formData.append(\"pics\", file.originFileObj);\r\n      }\r\n    });\r\n\r\n    // 서버에 요청을 보냅니다.\r\n    try {\r\n      const response = await putNotice({\r\n        data: formData,\r\n        successFn: () => setShowSuccessModal(true), // 성공 모달 표시\r\n        failFn: handleFail,\r\n        errorFn: handleError,\r\n      });\r\n\r\n      // 응답 처리\r\n      // console.log(\"Response from putNotice:\", response);\r\n    } catch (error) {\r\n      handleError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchNoticeData = async () => {\r\n      editNotice({\r\n        tno: tno,\r\n        successFn: data => {\r\n          setNoticeData(data);\r\n          form.setFieldsValue({\r\n            fullTitle: data.fullTitle,\r\n            fullContents: data.fullContents,\r\n          });\r\n          // console.log(\"data확인\", data);\r\n\r\n          // Transform album pictures for the fileList state\r\n          // console.log(\"데이터 확인\", data);\r\n          const transformedFileList = data.fullPic.map((fullPic, index) => ({\r\n            ifullPic: fullPic.ifullPic, // uid is required to be unique\r\n            name: fullPic.fullPic, // file name\r\n            status: \"done\", // upload status\r\n            url: `${imgpath}/${tno}/${fullPic.fullPic}`, // file URL, adjust the path as needed\r\n          }));\r\n          // console.log(\"transformedFileList\", transformedFileList);\r\n          setFileList(transformedFileList);\r\n        },\r\n        failFn: errorMessage => {\r\n          console.error(\"Notice fetch failed:\", errorMessage);\r\n          // Handle failure (show error message to user, etc.)\r\n        },\r\n        errorFn: errorData => {\r\n          console.error(\"Error fetching notice:\", errorData);\r\n          // Handle error (show error message to user, etc.)\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchNoticeData();\r\n  }, [tno, form]);\r\n\r\n  const beforeUpload = file => {\r\n    // 새로 업로드되는 파일을 fileList에 추가\r\n    const newFileList = [\r\n      ...fileList,\r\n      {\r\n        uid: file.uid, // 파일의 고유 ID\r\n        name: file.name, // 파일 이름\r\n        status: \"done\", // 파일 상태\r\n        originFileObj: file, // 파일 객체\r\n      },\r\n    ];\r\n    setFileList(newFileList);\r\n    return false; // 파일을 자동으로 업로드하지 않음\r\n  };\r\n\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList); // 기존 파일 리스트 업데이트\r\n    const newUploadedPics = newFileList\r\n      .filter(file => file.originFileObj) // 새로 업로드된 파일만 선택\r\n      .map(file => file.name); // 파일 이름 추출\r\n    setNewPics(newUploadedPics); // 새로 업로드된 파일 이름을 상태에 저장\r\n  };\r\n  // 이미지 파일을 삭제할 때 호출될 함수\r\n  const onRemove = file => {\r\n    // console.log(\"file\", file);\r\n\r\n    const newFileList = fileList.filter(\r\n      item => item.ifullPic !== file.ifullPic,\r\n    );\r\n    setFileList(newFileList);\r\n    if (typeof file.ifullPic === \"number\") {\r\n      setDeletedPics([...deletedPics, file.ifullPic]);\r\n    }\r\n\r\n    return true; // 삭제 처리를 진행\r\n  };\r\n  // console.log(\"deletedPics\", deletedPics);\r\n  // if (file.originFileObj) {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (file.ifullPic) {\r\n  //\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"삭제 목록 deletedPics : \", deletedPics);\r\n  }, [deletedPics]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"현재 보이는 목록 fileList : \", fileList);\r\n  }, [fileList]);\r\n\r\n  return (\r\n    <NoticeWrap>\r\n      <PageTitle>유치원 소식 수정</PageTitle>\r\n      <WriteWrap>\r\n        <Checkbox\r\n          onChange={onChange}\r\n          style={{ marginBottom: 10 }}\r\n          checked={fullNoticeFix}\r\n        >\r\n          상단고정\r\n        </Checkbox>\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"fullTitle\"\r\n            initialValue={noticeData.noticeTitle} // 기존 값 설정\r\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"fullContents\"\r\n            initialValue={noticeData.noticeContents} // 기존 값 설정\r\n            style={{ height: \"150px\" }}\r\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              beforeUpload={beforeUpload}\r\n              onRemove={onRemove}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              maxCount={10}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n      </WriteWrap>\r\n      <BtnWrap right>\r\n        <GreenBtn onClick={handleGreenButtonClick}>수정</GreenBtn>\r\n        <PinkBtn type=\"button\" onClick={handleCancelConfirmation}>\r\n          취소\r\n        </PinkBtn>\r\n      </BtnWrap>\r\n\r\n      <Link to={`/notice/details/${tno}`}>\r\n        {showSuccessModal && (\r\n          <ModalOneBtn\r\n            isOpen={showSuccessModal}\r\n            handleOk={handleSuccessModalOk}\r\n            title=\"수정 완료\"\r\n            subTitle=\"성공적으로 수정되었습니다.\"\r\n          />\r\n        )}\r\n      </Link>\r\n\r\n      {/* 취소 확인 모달 */}\r\n      {showCancelConfirmModal && (\r\n        <ModalOneBtn\r\n          isOpen={showCancelConfirmModal}\r\n          handleOk={handleCancelConfirmModalOk}\r\n          title=\"정말 취소할까요?\"\r\n          subTitle=\"작성된 내용은 저장되지 않습니다.\"\r\n        />\r\n      )}\r\n    </NoticeWrap>\r\n  );\r\n};\r\n\r\nexport default NoticeModify;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { colors, mq } from \"../basic\";\r\nimport { List } from \"antd\";\r\n\r\nexport const NoticeWrap = styled.div`\r\n  position: relative;\r\n  .ant-list-lg .ant-list-item {\r\n    padding: 0;\r\n  }\r\n`;\r\nexport const ListWrap = styled(List)`\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  background: ${colors.white};\r\n`;\r\n\r\nexport const NoticeItem = styled(Link)`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 3rem;\r\n  &.notice {\r\n    background: ${colors.greenLight2};\r\n    border-top: 1px solid rgba(5, 5, 5, 0.06);\r\n    p {\r\n      color: ${colors.greenDeep};\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  img {\r\n    height: 2.5rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeIcon = styled.div`\r\n  position: relative;\r\n  width: 3rem;\r\n  ${mq.mobileBig} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NoticeTitle = styled.p`\r\n  position: relative;\r\n  width: calc(100% - 25rem);\r\n  ${mq.mobileBig} {\r\n    width: 100%;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeDate = styled.div`\r\n  position: relative;\r\n  text-align: right;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  color: ${colors.grayDeep};\r\n  img {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const NoticeGallery = styled.div`\r\n  max-width: 60rem;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","search","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","editNotice","_ref6","IMG_URL","imgpath","customRequest","onSuccess","obj","fullTitle","fullContents","writer","writerName","createdAT","fullNoticeFix","fullPic","NoticeModify","useParams","ifullPic","formRef","useRef","noticeData","setNoticeData","useState","isModalVisible","setIsModalVisible","deletedPics","setDeletedPics","form","Form","useForm","fileList","setFileList","setFullNoticeFix","navigate","useNavigate","newPics","setNewPics","showSuccessModal","setShowSuccessModal","showCancelConfirmModal","setshowCancelConfirmModal","handleFail","errorMessage","Modal","title","content","handleError","console","useEffect","setFieldsValue","transformedFileList","map","index","name","url","errorData","fetchNoticeData","_jsxs","NoticeWrap","children","_jsx","PageTitle","WriteWrap","Checkbox","onChange","e","target","checked","style","marginBottom","ref","onFinish","formData","FormData","noticeInfo","ifullNotice","iteacher","length","delPics","dto","Blob","JSON","stringify","type","append","forEach","file","originFileObj","Item","initialValue","noticeTitle","rules","required","Input","placeholder","noticeContents","height","TextArea","FileListStyle","Upload","Dragger","action","listType","beforeUpload","newFileList","uid","onRemove","filter","item","newUploadedPics","className","multiple","maxCount","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleGreenButtonClick","current","submit","PinkBtn","handleCancelConfirmation","Link","to","ModalOneBtn","isOpen","handleOk","handleSuccessModalOk","subTitle","handleCancelConfirmModalOk","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","_templateObject15","ListWrap","List","NoticeItem","greenLight2","NoticeIcon","NoticeTitle","p","NoticeDate","NoticeGallery"],"sourceRoot":""}