{"version":3,"file":"static/js/336.1e150e15.chunk.js","mappings":"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","sources":["components/user/mypage/MyAccountComponent.js","pages/adminPage/student/StudDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { GrayBtn } from \"../../../styles/ui/buttons\";\r\nimport { AccountInfo, TableWrap, TitleWrap } from \"../../../styles/user/mypage\";\r\nimport { PageTitle } from \"../../../styles/basic\";\r\nimport { deleteAccount } from \"../../../api/adminPage/admin_api\";\r\nimport ModalTwoBtn from \"../../ui/ModalTwoBtn\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModalOneBtn from \"../../ui/ModalOneBtn\";\r\n\r\nconst MyAccountComponent = ({ myData, ikid, onChildClick }) => {\r\n  const navigate = useNavigate();\r\n  const my = myData;\r\n\r\n  // 연결된 학부모 계정 pk값\r\n  const [iparent, setIparent] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // console.log(iparent);\r\n  }, [iparent]);\r\n\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 모달창 취소\r\n  const handleCancel = () => {\r\n    setDelOpen(false);\r\n  };\r\n\r\n  // 연결삭제\r\n  const [delOpen, setDelOpen] = useState(false);\r\n  const handleClickDelete = () => {\r\n    // console.log(\"탈퇴\");\r\n\r\n    setDelOpen(true);\r\n    setTitle(\"정말 삭제할까요?\");\r\n    setSubTitle(\"학부모 계정과 연결이 끊어집니다. 정말 삭제할까요?\");\r\n  };\r\n  const handleDelOk = () => {\r\n    deleteAccount({\r\n      successDeleteFn,\r\n      errorDeleteFn,\r\n      iparent,\r\n      ikid,\r\n    });\r\n  };\r\n\r\n  const successDeleteFn = res => {\r\n    // console.log(res);\r\n    setIsOpen(true);\r\n    setTitle(\"삭제 완료\");\r\n    setSubTitle(\"삭제가 완료되었습니다.\");\r\n    setDelOpen(false);\r\n    onChildClick();\r\n    // setIsNavigate(\"/\");\r\n    // doLogout();\r\n  };\r\n  const errorDeleteFn = res => {\r\n    // console.log(res);\r\n    setIsOpen(true);\r\n    setTitle(\"삭제 실패\");\r\n    setSubTitle(res);\r\n  };\r\n\r\n  return (\r\n    <AccountInfo>\r\n      <TitleWrap>\r\n        <PageTitle>연결계정</PageTitle>\r\n      </TitleWrap>\r\n      <TableWrap className=\"TableWrap\">\r\n        <table>\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th>아이디 </th>\r\n              <th>이름</th>\r\n              <th>연락처</th>\r\n              <th>관계</th>\r\n              <th>관리</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {my.parents.map((parent, index) => (\r\n              <tr key={parent.iparent}>\r\n                <td>{parent ? parent.uid : \"\"}</td>\r\n                <td>{parent ? parent.parentNm : \"\"}</td>\r\n                <td>{parent ? parent.phoneNb : \"\"}</td>\r\n                <td>\r\n                  {parent\r\n                    ? (() => {\r\n                        const irelation = parent.irelation;\r\n                        switch (irelation) {\r\n                          case 1:\r\n                            return \"부\";\r\n                          case 2:\r\n                            return \"모\";\r\n                          case 3:\r\n                            return \"조부\";\r\n                          case 4:\r\n                            return \"조모\";\r\n                          case 5:\r\n                            return \"형제/자매\";\r\n                          default:\r\n                            return \"그 외\";\r\n                        }\r\n                      })()\r\n                    : \"\"}\r\n                </td>\r\n                <td>\r\n                  <GrayBtn\r\n                    onClick={() => {\r\n                      setIparent(parent.iparent);\r\n                      handleClickDelete();\r\n                    }}\r\n                  >\r\n                    연결삭제\r\n                  </GrayBtn>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </TableWrap>\r\n\r\n      {/* 안내창 */}\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      {/* 학부모 연결 삭제창 */}\r\n      <ModalTwoBtn\r\n        isOpen={delOpen}\r\n        handleOk={handleDelOk}\r\n        handleCancel={handleCancel}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n    </AccountInfo>\r\n  );\r\n};\r\n\r\nexport default MyAccountComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ContentInner, PageTitle } from \"../../../styles/basic\";\r\nimport {\r\n  DetailBadge,\r\n  DetailInfo,\r\n  FlexBox,\r\n  MyContentWrap,\r\n  MypageWrap,\r\n  TitleWrap,\r\n} from \"../../../styles/user/mypage\";\r\nimport { Button, Dropdown } from \"antd\";\r\nimport {\r\n  BtnWrap,\r\n  GrayBtn,\r\n  GreenBtn,\r\n  OrangeBtn,\r\n  PurpleBtn,\r\n} from \"../../../styles/ui/buttons\";\r\nimport MyProfileComponent from \"../../../components/user/mypage/MyProfileComponent\";\r\nimport MyAccountComponent from \"../../../components/user/mypage/MyAccountComponent\";\r\nimport MyPhysicalComponent from \"../../../components/user/mypage/MyPhysicalComponent\";\r\nimport MyBadge from \"../../../components/user/mypage/MyBadge\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport useCustomLogin from \"../../../hooks/useCustomLogin\";\r\nimport { getMypage } from \"../../../api/user/userApi\";\r\nimport ModalOneBtn from \"../../../components/ui/ModalOneBtn\";\r\n\r\nconst initState = {\r\n  kidNm: \"\",\r\n  iclass: 0,\r\n  gender: 0,\r\n  profile: \"546fe34c-bf55-46c1-9f0a-2e715edf8c61.jpg\",\r\n  birth: \"\",\r\n  address: \"\",\r\n  growths: [\r\n    {\r\n      height: 0,\r\n      weight: 0,\r\n      bodyDate: \"\",\r\n      growth: 0,\r\n      growthDate: \"\",\r\n      growthMemo: \"\",\r\n    },\r\n  ],\r\n  parents: [\r\n    {\r\n      iparent: 0,\r\n      uid: \"\",\r\n      parentNm: \"\",\r\n      phoneNb: \"\",\r\n      irelation: 0,\r\n    },\r\n  ],\r\n  memo: \".\",\r\n  emerNm: \"\",\r\n  emerNb: \"\",\r\n};\r\n\r\nconst StudDetails = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin } = useCustomLogin();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  // 현재 출력 년도, kid 값\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isParentLogin } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n  // ikid 값만 추출하여 파라미터값과 비교\r\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: (\r\n        <Link to={`/admin/student/details?year=${yearNum}&ikid=${ikid}`}>\r\n          {yearNum}\r\n        </Link>\r\n      ),\r\n    });\r\n  }\r\n  // 아이 마이페이지 데이터\r\n  const [myData, setMyData] = useState(initState);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [codeOpen, setCodeOpen] = useState(false);\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const [editKey, setEditKey] = useState(0);\r\n\r\n  // 연결계정 삭제 후 콜백\r\n  const [parentState, setParentState] = useState(0);\r\n  const handleChildClick = () => {\r\n    // 자식 컴포넌트에서 호출할 함수\r\n    setParentState(prevState => prevState + 1);\r\n  };\r\n\r\n  // 마이페이지 데이터 가져오기\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      setTitle(\"관리자 전용 페이지\");\r\n      setSubTitle(\"관리자만 접근 가능합니다.\");\r\n      setIsOpen(true);\r\n      setIsNavigate(`/login`);\r\n    } else {\r\n      getMypage({ year, ikid, successFn, failFn, errorFn });\r\n    }\r\n  }, [initState, year, ikid, parentState, isLogin]);\r\n\r\n  // 데이터연동 성공\r\n  const successFn = result => {\r\n    setMyData(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const failFn = result => {\r\n    // console.log(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"조회 실패\");\r\n    setSubTitle(result);\r\n  };\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  const ilevel = \"admin\";\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n    // console.log(componentSize);\r\n  };\r\n\r\n  return (\r\n    <ContentInner>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <MypageWrap>\r\n        {/* 마이페이지 상단 버튼 */}\r\n        <TitleWrap>\r\n          <PageTitle>기본정보</PageTitle>\r\n          <FlexBox>\r\n            <Dropdown menu={{ items: yearArr }}>\r\n              <Button>\r\n                {year}\r\n                <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n            <BtnWrap>\r\n              <GrayBtn\r\n                onClick={e =>\r\n                  navigate(\r\n                    `/ind/write?ikid=${ikid}&iclass=${myData.iclass}&kidNm=${myData.kidNm}`,\r\n                  )\r\n                }\r\n              >\r\n                알림장작성\r\n              </GrayBtn>\r\n              <PurpleBtn\r\n                onClick={e => navigate(`/admin/student/modify?ikid=${ikid}`)}\r\n              >\r\n                원생정보수정\r\n              </PurpleBtn>\r\n              <GreenBtn\r\n                onClick={e => navigate(\"/admin/student?page=1&kidCheck=0\")}\r\n              >\r\n                목록보기\r\n              </GreenBtn>\r\n            </BtnWrap>\r\n          </FlexBox>\r\n        </TitleWrap>\r\n        {/* 마이페이지 내용 시작 */}\r\n        <MyContentWrap>\r\n          {/* 프로필 */}\r\n          <MyProfileComponent\r\n            ilevel={ilevel}\r\n            ikid={ikid}\r\n            myData={myData}\r\n            onChildClick={handleChildClick}\r\n          />\r\n          {/* 연결계정 */}\r\n          {ilevel === \"admin\" ? (\r\n            <MyAccountComponent\r\n              ikid={ikid}\r\n              myData={myData}\r\n              onChildClick={handleChildClick}\r\n            />\r\n          ) : null}\r\n          {/* 상세정보 */}\r\n          <DetailInfo>\r\n            <TitleWrap>\r\n              <PageTitle>상세정보</PageTitle>\r\n              {ilevel === \"admin\" ? (\r\n                <Link\r\n                  to={`/admin/student/detailsform?year=${year}&ikid=${ikid}`}\r\n                >\r\n                  <OrangeBtn>상세정보 입력</OrangeBtn>\r\n                </Link>\r\n              ) : null}\r\n            </TitleWrap>\r\n            {/* 상세정보 - 신체정보 */}\r\n            <MyPhysicalComponent myData={myData} />\r\n            {/* 상세정보 - 칭찬뱃지 */}\r\n            <DetailBadge>\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[0] ? myData.growths[0].growth : null\r\n                }\r\n                text={myData.growths[0] ? myData.growths[0].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[1] ? myData.growths[1].growth : null\r\n                }\r\n                text={myData.growths[1] ? myData.growths[1].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[2] ? myData.growths[2].growth : null\r\n                }\r\n                text={myData.growths[2] ? myData.growths[2].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[3] ? myData.growths[3].growth : null\r\n                }\r\n                text={myData.growths[3] ? myData.growths[3].growthMemo : \"\"}\r\n              />\r\n            </DetailBadge>\r\n          </DetailInfo>\r\n        </MyContentWrap>\r\n      </MypageWrap>\r\n    </ContentInner>\r\n  );\r\n};\r\n\r\nexport default StudDetails;\r\n"],"names":["_ref","myData","ikid","onChildClick","navigate","useNavigate","my","iparent","setIparent","useState","useEffect","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","delOpen","setDelOpen","successDeleteFn","res","errorDeleteFn","_jsxs","AccountInfo","children","_jsx","TitleWrap","PageTitle","TableWrap","className","width","parents","map","parent","index","uid","parentNm","phoneNb","irelation","GrayBtn","onClick","ModalOneBtn","handleOk","ModalTwoBtn","handleDelOk","deleteAccount","handleCancel","initState","kidNm","iclass","gender","profile","birth","address","growths","height","weight","bodyDate","growth","growthDate","growthMemo","memo","emerNm","emerNb","StudDetails","isLogin","useCustomLogin","serchParams","setSearchParams","useSearchParams","year","get","loginState","isParentLogin","ikidList","kidList","currentYear","Array","isArray","item","Date","getFullYear","yearArr","yearNum","push","key","toString","label","Link","to","concat","setMyData","codeOpen","setCodeOpen","isEditOpen","setIsEditOpen","editKey","setEditKey","parentState","setParentState","handleChildClick","prevState","getMypage","successFn","failFn","errorFn","result","ilevel","componentSize","setComponentSize","ContentInner","MypageWrap","FlexBox","Dropdown","menu","items","Button","DownOutlined","BtnWrap","e","PurpleBtn","GreenBtn","MyContentWrap","MyProfileComponent","MyAccountComponent","DetailInfo","OrangeBtn","MyPhysicalComponent","DetailBadge","MyBadge","keywordValue","text"],"sourceRoot":""}