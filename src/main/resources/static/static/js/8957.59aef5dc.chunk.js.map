{"version":3,"file":"static/js/8957.59aef5dc.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","components/user/MyClass.js","styles/individualNotice/ind.js","components/individualNotice/IndListComponent.js","components/individualNotice/IndParentBtnComponent.js","components/individualNotice/IndTeacherBtnComponent.js","pages/individualNotice/IndivNotiList.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteNotice = async ({ ikid, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${ikid}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../styles/basic\";\r\n\r\nconst MyClass = ({ state }) => {\r\n  const ClassTitle = styled.div`\r\n    h3 {\r\n      padding-left: 3.2rem;\r\n      background-repeat: no-repeat;\r\n      background-position: left center;\r\n      background-size: 2.8rem;\r\n\r\n      &.hibiscus {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_hibiscus.svg\"});\r\n        color: #ff73a1;\r\n      }\r\n      &.sunflower {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_sunflower.svg\"});\r\n        color: ${colors.orangeDeep};\r\n      }\r\n      &.rose {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_rose.svg\"});\r\n        color: #f5062c;\r\n      }\r\n      &.discharge {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_bag.svg\"});\r\n        color: ${colors.grayDeep};\r\n      }\r\n      &.graduation {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_graduation.svg\"});\r\n        color: ${colors.black};\r\n      }\r\n      &.none {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n  `;\r\n  return (\r\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\r\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\r\n    <>\r\n      <ClassTitle>\r\n        <h3\r\n          className={\r\n            state === 1\r\n              ? \"hibiscus\"\r\n              : state === 2\r\n              ? \"sunflower\"\r\n              : state === 3\r\n              ? \"rose\"\r\n              : state === -1\r\n              ? \"discharge\"\r\n              : state === -2\r\n              ? \"graduation\"\r\n              : \"none\"\r\n          }\r\n        >\r\n          {state === 1\r\n            ? \"무궁화반\"\r\n            : state === 2\r\n            ? \"해바라기반\"\r\n            : state === 3\r\n            ? \"장미반\"\r\n            : state === -1\r\n            ? \"퇴소\"\r\n            : state === -2\r\n            ? \"졸업\"\r\n            : \"지정된 반이 없습니다.\"}\r\n        </h3>\r\n      </ClassTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyClass;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, ellipsis } from \"../basic\";\r\n\r\nexport const IndWrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const IndListWrap = styled.div`\r\n  min-height: 60vh;\r\n`;\r\n\r\nexport const IndList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2%;\r\n`;\r\n\r\nexport const IndListBox = styled.div`\r\n  width: 32%;\r\n  margin-bottom: 1rem;\r\n  ${boxStyle}\r\n  a {\r\n    display: block;\r\n    padding: 1.5rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const IndTop = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  color: #555;\r\n`;\r\nexport const IndCon = styled.div`\r\n  margin: 1.5rem 0;\r\n  min-height: 3rem;\r\n  p {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  span {\r\n    display: block;\r\n    color: ${colors.grayDeep};\r\n    ${ellipsis.line2}\r\n    word-break: break-all;\r\n  }\r\n`;\r\nexport const IndBot = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .ind-date {\r\n    color: ${colors.grayDeep};\r\n    padding-left: 2.5rem;\r\n    background: url(${process.env.PUBLIC_URL +\r\n      \"/images/common/notice/clock.svg\"})\r\n      no-repeat top left/ 1.8rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport MyClass from \"../user/MyClass\";\r\nimport {\r\n  IndBot,\r\n  IndCon,\r\n  IndList,\r\n  IndListBox,\r\n  IndListWrap,\r\n  IndTop,\r\n} from \"../../styles/individualNotice/ind\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndListComponent = ({ listData }) => {\r\n  return (\r\n    <IndListWrap>\r\n      <IndList>\r\n        {Array.isArray(listData) && listData[0].inotice === 0 ? (\r\n          <div\r\n            style={{ textAlign: \"center\", width: \"100%\", marginTop: \"5rem\" }}\r\n          >\r\n            알림장 내용이 없습니다.\r\n          </div>\r\n        ) : (\r\n          Array.isArray(listData) &&\r\n          listData.map(item => (\r\n            <IndListBox key={item.inotice}>\r\n              <Link to={`/ind/details/${item.inotice}`}>\r\n                <IndTop>\r\n                  <MyClass state={item.iclass} /> <h4>{item.kidNm}</h4>\r\n                </IndTop>\r\n                <IndCon>\r\n                  <p>{item.noticeTitle}</p>\r\n                  <span>{item.noticeContents}</span>\r\n                </IndCon>\r\n                <IndBot>\r\n                  <div className=\"ind-date\">{item.createdAt.split(\" \")[0]}</div>\r\n                  <div className=\"ind-file\">\r\n                    {item.picCheck === 1 ? (\r\n                      <img\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/images/common/file_icon.svg\"\r\n                        }\r\n                        alt=\"file\"\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                </IndBot>\r\n              </Link>\r\n            </IndListBox>\r\n          ))\r\n        )}\r\n      </IndList>\r\n    </IndListWrap>\r\n  );\r\n};\r\n\r\nexport default IndListComponent;\r\n","import { DownOutlined } from \"@ant-design/icons\";\r\nimport { Button, Dropdown } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndParentBtnComponent = ({ indList, ikidList, year, ikid, page }) => {\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: (\r\n        <Link to={`/ind?year=${yearNum}&page=1&ikid=${ikid}`}>{yearNum}</Link>\r\n      ),\r\n    });\r\n  }\r\n  // 아이 선택\r\n  const items =\r\n    Array.isArray(ikidList) &&\r\n    ikidList.map(item => {\r\n      return {\r\n        key: item.ikid.toString(),\r\n        label: (\r\n          <Link to={`/ind?year=${year}&page=1&ikid=${item.ikid}`}>\r\n            {item.kidNm}\r\n          </Link>\r\n        ),\r\n      };\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Dropdown menu={{ items: yearArr }}>\r\n        <Button>\r\n          {year}\r\n          <DownOutlined />\r\n        </Button>\r\n      </Dropdown>\r\n      <Dropdown menu={{ items }}>\r\n        <Button>\r\n          {indList[0].kidNm}\r\n          <DownOutlined />\r\n        </Button>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndParentBtnComponent;\r\n","import { DownOutlined } from \"@ant-design/icons\";\r\nimport { Button, Dropdown } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndTeacherBtnComponent = ({ iclass, year, ikid, page }) => {\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: (\r\n        <Link to={`/ind?year=${yearNum}&page=1&iclass=${iclass}`}>\r\n          {yearNum}\r\n        </Link>\r\n      ),\r\n    });\r\n  }\r\n\r\n  // 반 선택\r\n  const classArr = [\r\n    { iclass: 0, classNm: \"반 전체\" },\r\n    { iclass: 1, classNm: \"무궁화반\" },\r\n    { iclass: 2, classNm: \"해바라기반\" },\r\n    { iclass: 3, classNm: \"장미반\" },\r\n  ];\r\n\r\n  const items =\r\n    Array.isArray(classArr) &&\r\n    classArr.map(item => {\r\n      return {\r\n        key: item.iclass.toString(),\r\n        label: (\r\n          <Link to={`/ind?year=${year}&page=1&iclass=${item.iclass}`}>\r\n            {item.classNm}\r\n          </Link>\r\n        ),\r\n      };\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Dropdown menu={{ items: yearArr }}>\r\n        <Button>\r\n          {year}\r\n          <DownOutlined />\r\n        </Button>\r\n      </Dropdown>\r\n      <Dropdown menu={{ items }}>\r\n        <Button>\r\n          {iclass === \"0\"\r\n            ? \"반 전체\"\r\n            : iclass === \"1\"\r\n            ? \"무궁화반\"\r\n            : iclass === \"2\"\r\n            ? \"해바라기반\"\r\n            : iclass === \"3\"\r\n            ? \"장미반\"\r\n            : null}\r\n          <DownOutlined />\r\n        </Button>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndTeacherBtnComponent;\r\n","import { Button, Dropdown, Pagination, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport GuardianListComponent from \"../../components/adminpage/GuardianListComponent\";\r\nimport { IndWrap } from \"../../styles/individualNotice/ind\";\r\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\r\nimport {\r\n  getIndList,\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\r\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\r\n\r\nconst initData = [\r\n  {\r\n    inotice: 0,\r\n    noticeTitle: \"\",\r\n    noticeContents: \"\",\r\n    kidNm: \"\",\r\n    iclass: 0,\r\n    picCheck: 0,\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst IndivNotiList = () => {\r\n  const navigate = useNavigate();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const [indList, setIndList] = useState(initData);\r\n  const [count, setCount] = useState(0);\r\n\r\n  // 현재 출력 년도, kid 값 params에서 체크\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n  const iclass = serchParams.get(\"iclass\");\r\n\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isLogin, isParentLogin } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n\r\n  // ikid 값만 추출하여 파라미터값과 비교\r\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\r\n\r\n  // 페이지네이션\r\n  const handleChange = value => {\r\n    console.log(value);\r\n  };\r\n  const handlePageChange = (page, pageSize) => {\r\n    if (isLogin) {\r\n      navigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`);\r\n    } else {\r\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\r\n    }\r\n  };\r\n\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n\r\n  // 데이터 화면출력, 로그인체크\r\n  useEffect(() => {\r\n    if (isParentLogin) {\r\n      // 학부모 로그인\r\n      if (ikid === \"0\") {\r\n        // 연결된 아이가 없을경우\r\n        setTitle(\"연결 오류\");\r\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\r\n        setIsNavigate(-1);\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n      getIndParentList({ page, year, ikid, errorFn, successFn });\r\n    } else if (isLogin) {\r\n      // 선생님 로그인\r\n      getIndTeacherList({ page, year, iclass, errorFn, successFn });\r\n    } else {\r\n      // 로그인 안했을때\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  }, [year, ikid, iclass, page]);\r\n\r\n  // 데이터연동 결과\r\n  const successFn = res => {\r\n    setIndList(res.list);\r\n    setCount(res.noticeCnt);\r\n  };\r\n  const errorFn = res => {\r\n    console.log(res);\r\n\r\n    setIsOpen(true);\r\n    setTitle(\"데이터 없음\");\r\n    setSubTitle(res);\r\n    setIsNavigate(-1);\r\n  };\r\n\r\n  return (\r\n    <IndWrap>\r\n      {/* 안내창 */}\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <TitleWrap>\r\n        <PageTitle>알림장</PageTitle>\r\n        <FlexBox>\r\n          {/* 권한별 서치버튼 */}\r\n          {isLogin ? (\r\n            <IndTeacherBtnComponent\r\n              iclass={iclass}\r\n              indList={indList}\r\n              year={year}\r\n              page={page}\r\n            />\r\n          ) : (\r\n            <IndParentBtnComponent\r\n              ikidList={ikidList}\r\n              indList={indList}\r\n              ikid={ikid}\r\n              year={year}\r\n              page={page}\r\n            />\r\n          )}\r\n        </FlexBox>\r\n      </TitleWrap>\r\n      <IndListComponent listData={indList} />\r\n      <PageNum>\r\n        <Pagination\r\n          defaultCurrent={1}\r\n          total={count}\r\n          pageSize={12}\r\n          onChange={handlePageChange}\r\n        />\r\n      </PageNum>\r\n    </IndWrap>\r\n  );\r\n};\r\n\r\nexport default IndivNotiList;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_jsx","_Fragment","children","className","IndWrap","IndListWrap","_templateObject2","IndList","_templateObject3","IndListBox","_templateObject4","boxStyle","IndTop","_templateObject5","IndCon","_templateObject6","ellipsis","line2","IndBot","_templateObject7","listData","Array","isArray","inotice","style","textAlign","width","marginTop","map","item","_jsxs","Link","to","MyClass","kidNm","noticeTitle","noticeContents","createdAt","split","picCheck","src","alt","indList","ikidList","currentYear","Date","getFullYear","yearArr","yearNum","push","key","label","items","Dropdown","menu","Button","DownOutlined","classArr","classNm","initData","IndivNotiList","navigate","useNavigate","serchParams","setSearchParams","useSearchParams","setIndList","useState","count","setCount","loginState","isLogin","isParentLogin","useCustomLogin","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","list","noticeCnt","console","log","ModalOneBtn","handleOk","TitleWrap","PageTitle","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","IndListComponent","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}