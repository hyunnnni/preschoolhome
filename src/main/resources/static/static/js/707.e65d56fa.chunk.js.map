{"version":3,"file":"static/js/707.e65d56fa.chunk.js","mappings":"uOAGA,MAAMA,EAAI,GAAAC,OAAMC,EAAAA,EAAU,cAObC,EAAWC,UAAgD,IAAzC,IAAEC,EAAG,UAAEC,EAAS,OAAEC,EAAM,QAAEC,GAASC,EAChE,IACE,MAAMC,QAAYC,EAAAA,EAASC,IAAI,GAADX,OAAID,EAAI,YAAAC,OAAWI,IAGxB,MADVK,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAU,IAAKI,EAAIM,OAEnBT,EAAO,4DAEX,CAAE,MAAOU,GAEPT,SADmBU,EAAAA,EAAMN,IAAI,MAChBI,KAEf,GAKWG,EAAaf,UAAiD,IAA1C,KAAEgB,EAAI,UAAEd,EAAS,OAAEC,EAAM,QAAEC,GAASa,EACnE,IACE,MAAMX,QAAYC,EAAAA,EAASC,IAAI,GAADX,OAAID,EAAI,kBAAAC,OAAiBmB,IAE9B,MADVV,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAUI,EAAIM,MAEdT,EAAO,4DAEX,CAAE,MAAOU,GAEPT,SADmBU,EAAAA,EAAMN,IAAI,MAChBI,KAEf,GAKWM,EAAmBlB,UAMzB,IANgC,KACrCgB,EAAI,OACJG,EAAM,UACNjB,EAAS,OACTC,EAAM,QACNC,GACDgB,EACC,IACE,MAAMd,QAAYC,EAAAA,EAASC,IAAI,GAADX,OACzBD,EAAI,kBAAAC,OAAiBmB,EAAI,YAAAnB,OAAWsB,IAGhB,MADVb,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAUI,EAAIM,MAEdT,EAAO,4DAEX,CAAE,MAAOU,GACPT,EAAQS,EAEV,GAKWQ,EAAerB,UAAgD,IAAzC,IAAEC,EAAG,UAAEC,EAAS,OAAEC,EAAM,QAAEC,GAASkB,EACpE,IACE,MAAMhB,QAAYC,EAAAA,EAASC,IAAI,GAADX,OAAID,EAAI,iBAAAC,OAAgBI,IAE7B,MADVK,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAUI,EAAIM,MAEdT,EAAO,4DAEX,CAAE,MAAOU,GAEPT,SADmBU,EAAAA,EAAMN,IAAI,MAChBI,KAEf,GAIWW,EAAWvB,UAAoD,IAA7C,QAAEwB,EAAO,UAAEtB,EAAS,OAAEC,EAAM,QAAEC,GAASqB,EACpE,IACE,MAAMC,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBACtCrB,QAAYC,EAAAA,EAASqB,IAAI,GAAD/B,OAAID,GAAQ4B,EAASE,GAEnD,GAAyB,MADVpB,EAAIG,OAAOC,WACfC,OAAO,GAGhB,OADAT,EAAUI,EAAIM,MACPN,EAAIM,KAEXT,EAAO,oHAEX,CAAE,MAAOU,GACPT,EAAQyB,QAAQC,IAAIjB,GAItB,GAMWkB,EAAY/B,UAAoD,IAA7C,QAAEwB,EAAO,UAAEtB,EAAS,OAAEC,EAAM,QAAEC,GAAS4B,EACrE,IAEE,MAAMN,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBACtCM,QAAiB1B,EAAAA,EAAS2B,KAAK,GAADrC,OAAID,GAAQ4B,EAASE,GAEhC,MADVO,EAASxB,OAAOC,WACpBC,OAAO,GAChBT,EAAU+B,EAASrB,MAEnBT,EAAO,mCAAW8B,EAASE,WAE/B,CAAE,MAAOtB,GAEPT,EAAQ,+CAAaS,EAAMoB,SAASrB,KACtC,GAKWwB,EAAcpC,UAAmD,IAA5C,OAAEqC,EAAM,UAAEnC,EAAS,OAAEC,EAAM,QAAEC,GAASkC,EACtE,IAGE,MAAMhC,QAAYC,EAAAA,EAASgC,OAAO,GAAD1C,OAAID,EAAI,YAAAC,OAAWwC,IAG3B,MADV/B,EAAIG,OAAOC,WACfC,OAAO,GAChBT,EAAUI,EAAIM,MAEdT,EAAO,4DAEX,CAAE,MAAOU,GACPT,EACE,0LAEJ,GAKWoC,EAAmBxC,UAAgD,IAAzC,IAAEyC,EAAG,UAAEvC,EAAS,OAAEC,EAAM,QAAEC,GAASsC,EACxE,IACE,MAAMpC,QAAYC,EAAAA,EAAS2B,KAAK,GAADrC,OAAID,EAAI,YAAY6C,GAE1B,MADVnC,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAUI,EAAIM,MAEdT,EAAO,iIAEX,CAAE,MAAOU,GACPT,EAAQS,EACV,GAKW8B,EAAqB3C,UAQ3B,IARkC,cACvC4C,EAAa,OACbP,EAAM,SACNQ,EAAQ,QACRC,EAAO,UACP5C,EAAS,OACTC,EAAM,QACNC,GACD2C,EACC,IAEE,MAAMC,EAAUA,IACVH,EACI,aAANhD,OAAoBgD,GAElBC,EACI,YAANjD,OAAmBiD,QADrB,EAIIxC,QAAYC,EAAAA,EAASgC,OAAO,GAAD1C,OAC5BD,EAAI,2BAAAC,OAA0B+C,EAAa,YAAA/C,OAAWwC,GAAMxC,OAAGmD,MAG3C,MADV1C,EAAIG,OAAOC,WACfC,OAAO,GAEhBT,EAAUI,EAAIM,MAEdT,EAAOG,EAAIM,KAEf,CAAE,MAAOC,GACPT,EAAQS,EACV,E,0NChMF,MAAMjB,EAAI,GAAAC,OAAMC,EAAAA,EAAU,cA4P1B,EA1PmBO,IAA4B,IAA3B,UAAE4C,EAAS,OAAEC,GAAQ7C,EACvC,MAAO8C,GAAQC,EAAAA,EAAKC,WACbC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,GAC/CG,GAAWC,EAAAA,EAAAA,OAGVC,EAAkBC,IAAuBN,EAAAA,EAAAA,WAAS,IAClDO,EAAwBC,IAA6BR,EAAAA,EAAAA,WAAS,IAC9DS,EAAsBC,IAA2BV,EAAAA,EAAAA,WAAS,IAC1DW,EAA6BC,IAClCZ,EAAAA,EAAAA,WAAS,IACJa,EAAeC,IAAoBd,EAAAA,EAAAA,WAAS,IAM5Ce,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAS,IAgHvCiB,EAAgBC,IAEpBC,EAAAA,QAAM9D,MAAM,CACV+D,MAAO,+CACPC,QAASH,GACT,EAGEI,EAAcjE,IAClB8D,EAAAA,QAAM9D,MAAM,CACV+D,MAAO,mEACPC,QACE,+KACF,EAGJ,OACEE,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAF,SAAC,8BACXF,EAAAA,EAAAA,MAAC3B,EAAAA,EAAI,CAACD,KAAMA,EAAMiC,SApELpF,UACf,IAAKqE,EAAe,OAEpB,GAAwB,IAApBf,EAAS+B,OAEX,YADAjB,GAA+B,GAGjC,MAAMkB,EAAW,IAAIC,SAEfC,EAAM,IAAIC,KACd,CACEC,KAAKC,UAAU,CACb9C,SAAU,EACV+C,WAAYhF,EAAKgF,WACjBC,cAAejF,EAAKiF,iBAIxB,CAAEC,KAAM,qBAIVR,EAASS,OAAO,MAAOP,GAGvBlC,EAAS0C,SAAQC,IAEfX,EAASS,OAAO,OAAQE,EAAKC,cAAc,KAI7CnE,EAAAA,EAAAA,IAAU,CACRP,QAAS8D,EACTpF,UAAWU,IApEIA,KACjB4D,EAAc5D,EAAKuF,OAAO,EAoEtBC,CAAWxF,GAAOkD,GAAoB,EAAK,EAE7C3D,OAAQsE,EACRrE,QAAS0E,IAGXR,GAAiB,EAAM,EA4BgBW,SAAA,EACnCF,EAAAA,EAAAA,MAACsB,EAAAA,GAAS,CAAApB,SAAA,EACRC,EAAAA,EAAAA,KAAC9B,EAAAA,EAAKkD,KAAI,CACRC,KAAK,aACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6DAEXzB,UAEFC,EAAAA,EAAAA,KAACyB,EAAAA,QAAK,CAACC,YAAY,iCAErB1B,EAAAA,EAAAA,KAAC9B,EAAAA,EAAKkD,KAAI,CACRO,MAAO,CAAEC,OAAQ,SACjBP,KAAK,gBACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6DAEXzB,UAEFC,EAAAA,EAAAA,KAACyB,EAAAA,QAAMI,SAAQ,CACbH,YAAY,4BACZC,MAAO,CAAEC,OAAQ,cAGrB5B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAa,CAAA/B,UACZC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOC,QAAO,CACbC,OAAM,GAAAtH,OAAKD,GACXwH,SAAS,UACT9D,SAAUA,EACV+D,SAzKSC,IACnB,IAAIhE,EAAW,IAAIgE,EAAKhE,UAAUiE,OAAO,IACzChE,EAAYD,EAAS,EAwKXkE,cApJUvG,IAAoB,IAAnB,UAAEwG,GAAWxG,EAClCwG,EAAU,KAAK,EAoJLC,UAAU,qBACVC,UAAU,EACVd,MAAO,CAAEe,WAAY,SACrBC,SAAU,GACVC,aAxKS7B,KACG3C,EAAS+B,QAAU,MAGvCnB,GAAwB,GACjB+C,EAAAA,EAAOc,aAmKqB9C,UAE3BC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAM,CAACC,MAAM/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAc,IAAIjD,SAAC,uDAIxCF,EAAAA,EAAAA,MAACoD,EAAAA,GAAO,CAACC,OAAK,EAAAnD,SAAA,EACZC,EAAAA,EAAAA,KAACmD,EAAAA,GAAQ,CAACvC,KAAK,SAASwC,QA3HPC,KACC,IAApBjF,EAAS+B,QAIbf,GAAiB,GACjBnB,EAAKD,UAJHkB,GAA+B,EAIpB,EAqH2Ca,SAAC,kBAGnDC,EAAAA,EAAAA,KAACsD,EAAAA,GAAO,CAACF,QAnIgBG,KAC/BnE,GAAiB,GACjBN,GAA0B,EAAK,EAiIkBiB,SAAC,uBAK/CpB,IACCqB,EAAAA,EAAAA,KAACwD,EAAAA,EAAW,CACVC,OAAQ9E,EACR+E,SA5JqBC,IAC3B/E,GAAoB,GACpBH,EAAS,kBAAD9D,OAAmB0E,GAAa,EA2JlCK,MAAM,4BACNkE,SAAS,6EACTC,cAAc,KAIlBhE,EAAAA,EAAAA,MAACiE,EAAAA,GAAI,CAACC,GAAG,SAAQhE,SAAA,CAEdlB,IACCmB,EAAAA,EAAAA,KAACgE,EAAAA,EAAW,CACVP,OAAQ5E,EACR6E,SAnKyBO,KAEjCnF,GAA0B,GAC1BL,EAAS,SAAS,EAiKVyF,aA9J6BP,IAErC7E,GAA0B,GAC1B6E,EAAEQ,iBAAiB,EA4JXzE,MAAM,+CACNkE,SAAS,2FACTC,cAAc,IAIjB5E,IACCe,EAAAA,EAAAA,KAACwD,EAAAA,EAAW,CACVC,OAAQxE,EACRyE,SAxGyBC,IACjCzE,GAA+B,GAC/ByE,EAAEQ,iBAAiB,EAuGXzE,MAAM,qDACNkE,SAAQ,qIACRC,cAAc,IAIjB9E,IACCiB,EAAAA,EAAAA,KAACwD,EAAAA,EAAW,CACVC,OAAQ1E,EACR2E,SAjNuBC,IAC/BA,EAAEQ,kBACFnF,GAAwB,EAAM,EAgNtBU,MAAM,+CACNkE,SAAS,kHACTC,cAAc,SAIV,E,aC/PhB,MAkDA,EAvCmBO,KACjB,MAAM3F,GAAWC,EAAAA,EAAAA,OACVgB,EAAO2E,IAAY/F,EAAAA,EAAAA,UAAS,KAC5BsF,EAAUU,IAAehG,EAAAA,EAAAA,UAAS,KAClCmF,EAAQc,IAAajG,EAAAA,EAAAA,WAAS,IAC9BkG,EAAYC,IAAiBnG,EAAAA,EAAAA,aAC9B,QAAEoG,IAAYC,EAAAA,EAAAA,KAoBpB,OATAC,EAAAA,EAAAA,YAAU,KACHF,IACHH,GAAU,GACVF,EAAS,gDACTC,EAAY,yEACZG,GAAe,GACjB,KAIA5E,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACEC,EAAAA,EAAAA,KAACwD,EAAAA,EAAW,CACVC,OAAQA,EACRC,SArBWA,KACfa,GAAU,GAENC,GACF/F,EAAS+F,EACX,EAiBI9E,MAAOA,EACPkE,SAAUA,KAEZ5D,EAAAA,EAAAA,KAAC8E,EAAU,CAACJ,QAASA,EAAS1G,OAAO,mBACpC,C,6MChDA,MAAM8B,EAAYiF,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uJAIxBC,GAASA,EAAMC,MAAQ,MAEtBD,GAASA,EAAMvD,OAAS,KAEhCyD,EAAAA,GAAGC,WAKMC,EAAcR,EAAAA,EAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mJAQxBO,EAAYV,EAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uRAW/BG,EAAAA,GAAGC,WAsCMK,GA9BaZ,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2eAgBvBC,GAASA,EAAMC,MAAQ,QACtBD,GAASA,EAAMvD,OAAS,QAabmD,EAAAA,EAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,s0BAiBpBY,EAAAA,GAAOC,MAuBlBV,EAAAA,GAAGC,YAWMU,EAAajB,EAAAA,EAAOC,IAAGiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,ojBAgCjBgB,EAAAA,GAAMC,WAIZC,EAAcrB,EAAAA,EAAOC,IAAGqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,kNAErBY,EAAAA,GAAOQ,MACDR,EAAAA,GAAOS,WAkBhBC,GARazB,EAAAA,EAAO0B,GAAEC,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,sIAGU,gCAElCY,EAAAA,GAAOS,WAGOxB,EAAAA,EAAOC,IAAG2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6cAGNY,EAAAA,GAAOc,QAWvBd,EAAAA,GAAOe,SAGhBxB,EAAAA,GAAGC,YAcMwB,EAAc/B,EAAAA,EAAOC,IAAG+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,8DAMxB8B,EAAcjC,EAAAA,EAAOC,IAAGiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,gMAcxBgC,EAASnC,EAAAA,EAAOC,IAAGmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,4KAanBkC,EAAcrC,EAAAA,EAAOC,IAAGqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,uEAKxBpD,EAAgBiD,EAAAA,EAAOC,IAAGsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,gGAc1B/D,EAAY4D,EAAAA,EAAOC,IAAGuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,+LAITY,EAAAA,GAAOS,UACJT,EAAAA,GAAOS,U","sources":["api/album/album_api.js","components/album/WriteAlbum.js","pages/album/AlbumWrite.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n// 활동 앨범 전체 조회 get\r\nexport const getListAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 검색 GET\r\n// listall?page=1&search=1\r\nexport const getSearchListAll = async ({\r\n  page,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/listall?page=${page}&search=${search}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(console.log(error));\r\n    // errorFn(\r\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    // );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path /comment\r\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}/comment`, obj);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // &iteacher=${iteacher}&iparent=${iparent}\r\n    const iwriter = () => {\r\n      if (iteacher) {\r\n        return `&iteacher=${iteacher}`;\r\n      }\r\n      if (iparent) {\r\n        return `&iparent=${iparent}`;\r\n      }\r\n    };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AlbumWrap, FileListStyle, WriteWrap } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { BtnWrap, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nimport { postAlbum } from \"../../api/album/album_api\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\r\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\nconst WriteAlbum = ({ albumData, submit }) => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // 모달 상태 관리\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [showCancelConfirmModal, setShowCancelConfirmModal] = useState(false);\r\n  const [showExceedLimitModal, setShowExceedLimitModal] = useState(false); // 파일 제한 초과 경고 모달 상태\r\n  const [isImageUploadWarningVisible, setIsImageUploadWarningVisible] =\r\n    useState(false); // 이미지 업로드 경고 모달 상태\r\n  const [submitClicked, setSubmitClicked] = useState(false); // 이 줄 추가\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].slice(-20); // 최대 20개 파일만 유지\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const [pageNumber, setPageNumber] = useState(\"\");\r\n\r\n  const beforeUpload = file => {\r\n    const isExceedLimit = fileList.length >= 20; // 현재 파일 리스트의 길이가 20 이상인지 검사\r\n    if (isExceedLimit) {\r\n      // 파일리스트 길이가 20개를 초과하는 경우\r\n      setShowExceedLimitModal(true); // 경고 모달 표시\r\n      return Upload.LIST_IGNORE; // 파일 업로드 중단\r\n    }\r\n    return true; // 파일 추가를 계속 진행\r\n  };\r\n\r\n  const handleExceedLimitModalOk = e => {\r\n    e.stopPropagation(); // 이벤트가 상위 엘리먼트에 전달되지 않게 막기\r\n    setShowExceedLimitModal(false); // 경고 모달 닫기\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const returnPage = data => {\r\n    setPageNumber(data.result);\r\n  };\r\n  // 앨범 등록 성공 모달 핸들러\r\n  const handleSuccessModalOk = e => {\r\n    setShowSuccessModal(false);\r\n    navigate(`/album/details/${pageNumber}`);\r\n  };\r\n\r\n  const handleCancelConfirmModalOk = () => {\r\n    // 모달을 닫고, 사용자를 앨범 목록 페이지로 이동합니다.\r\n    setShowCancelConfirmModal(false);\r\n    navigate(\"/album\");\r\n  };\r\n\r\n  const handleCancelConfirmModalCancel = e => {\r\n    // 모달을 닫음\r\n    setShowCancelConfirmModal(false);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setSubmitClicked(false); // 제출이 클릭되지 않았다고 확인\r\n    setShowCancelConfirmModal(true); // 취소 확인 모달 표시\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    if (fileList.length === 0) {\r\n      setIsImageUploadWarningVisible(true);\r\n      return; // 파일이 업로드되지 않았다면 폼 제출 방지\r\n    }\r\n    setSubmitClicked(true); // 제출이 클릭되었다고 표시\r\n    form.submit(); // 폼 제출 수동으로 트리거\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    if (!submitClicked) return; // 제출이 클릭되었는지 확인\r\n    // 이미지가 한 개 이상 업로드되지 않았을 경우 경고 모달 표시\r\n    if (fileList.length === 0) {\r\n      setIsImageUploadWarningVisible(true); // 경고 모달을 표시\r\n      return; // 함수 실행 종료\r\n    }\r\n    const formData = new FormData();\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iteacher: 1,\r\n          albumTitle: data.albumTitle,\r\n          albumContents: data.albumContents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postAlbum({\r\n      product: formData,\r\n      successFn: data => {\r\n        returnPage(data), setShowSuccessModal(true);\r\n      }, // 성공 모달 표시\r\n      failFn: handleFailure,\r\n      errorFn: handleError,\r\n    });\r\n    // returnPage(data);\r\n    setSubmitClicked(false); // 다음 제출을 위해 재설정\r\n  };\r\n\r\n  // 이미지 업로드 경고 모달 핸들러\r\n  const handleImageUploadWarningOk = e => {\r\n    setIsImageUploadWarningVisible(false); // 경고 모달 닫기\r\n    e.stopPropagation(); // 이벤트가 상위 엘리먼트에 전달되지 않게 막기\r\n  };\r\n\r\n  const handleFailure = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"앨범 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    Modal.error({\r\n      title: \"앨범 업로드 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlbumWrap>\r\n      <PageTitle>활동앨범</PageTitle>\r\n      <Form form={form} onFinish={onFinish}>\r\n        <WriteWrap>\r\n          <Form.Item\r\n            name=\"albumTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"albumContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              style={{ lineHeight: \"15rem\" }}\r\n              maxCount={20}\r\n              beforeUpload={beforeUpload}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드(최대 20개) </Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </WriteWrap>\r\n        <BtnWrap right>\r\n          <GreenBtn type=\"button\" onClick={handleFormSubmit}>\r\n            등록\r\n          </GreenBtn>\r\n          <PinkBtn onClick={handleCancelConfirmation}>취소</PinkBtn>\r\n        </BtnWrap>\r\n      </Form>\r\n\r\n      {/* 등록 성공 모달 */}\r\n      {showSuccessModal && (\r\n        <ModalOneBtn\r\n          isOpen={showSuccessModal}\r\n          handleOk={handleSuccessModalOk}\r\n          title=\"등록 완료\"\r\n          subTitle=\"성공적으로 등록되었습니다.\"\r\n          maskClosable={false}\r\n        />\r\n      )}\r\n\r\n      <Link to=\"/album\">\r\n        {/* 취소 확인 모달 */}\r\n        {showCancelConfirmModal && (\r\n          <ModalTwoBtn\r\n            isOpen={showCancelConfirmModal}\r\n            handleOk={handleCancelConfirmModalOk}\r\n            handleCancel={handleCancelConfirmModalCancel}\r\n            title=\"정말 취소할까요?\"\r\n            subTitle=\"작성된 내용은 저장되지 않습니다.\"\r\n            maskClosable={false}\r\n          />\r\n        )}\r\n        {/* 이미지 업로드 경고 모달 */}\r\n        {isImageUploadWarningVisible && (\r\n          <ModalOneBtn\r\n            isOpen={isImageUploadWarningVisible}\r\n            handleOk={handleImageUploadWarningOk}\r\n            title=\"이미지 업로드 경고\"\r\n            subTitle={`최소 하나의 이미지 파일은 \\n 업로드 되어야 합니다.`}\r\n            maskClosable={false}\r\n          />\r\n        )}\r\n        {/* 파일 제한 초과 경고 모달 */}\r\n        {showExceedLimitModal && (\r\n          <ModalOneBtn\r\n            isOpen={showExceedLimitModal}\r\n            handleOk={handleExceedLimitModalOk}\r\n            title=\"업로드 제한 초과\"\r\n            subTitle=\"업로드할 수 있는 파일 수는 최대 20개입니다.\"\r\n            maskClosable={false}\r\n          />\r\n        )}\r\n      </Link>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default WriteAlbum;\r\n","import { useEffect, useState } from \"react\";\r\nimport WriteAlbum from \"../../components/album/WriteAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nconst initAlbumWrite = [\r\n  {\r\n    pics: [\"string\"],\r\n    dto: {\r\n      iteacher: 0,\r\n      albumTitle: \"string\",\r\n      albumContents: \"string\",\r\n    },\r\n  },\r\n];\r\n\r\nconst AlbumWrite = () => {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 로그인 상태가 false라면 로그인 페이지로 리다이렉트합니다.\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      setIsOpen(true);\r\n      setTitle(\"교사 전용 페이지\");\r\n      setSubTitle(\"선생님만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  });\r\n  // 로그인 상태가 true라면 글쓰기 컴포넌트를 렌더링합니다.\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <WriteAlbum isLogin={isLogin} submit=\"등록\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlbumWrite;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getListAll","page","_ref2","getSearchListAll","search","_ref3","getEditAlbum","_ref4","putAlbum","product","_ref5","header","headers","put","console","log","postAlbum","_ref6","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","postAlbumComment","obj","_ref8","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref9","iwriter","albumData","submit","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","navigate","useNavigate","showSuccessModal","setShowSuccessModal","showCancelConfirmModal","setShowCancelConfirmModal","showExceedLimitModal","setShowExceedLimitModal","isImageUploadWarningVisible","setIsImageUploadWarningVisible","submitClicked","setSubmitClicked","pageNumber","setPageNumber","handleFailure","errorMessage","Modal","title","content","handleError","_jsxs","AlbumWrap","children","_jsx","PageTitle","onFinish","length","formData","FormData","dto","Blob","JSON","stringify","albumTitle","albumContents","type","append","forEach","file","originFileObj","result","returnPage","WriteWrap","Item","name","rules","required","message","Input","placeholder","style","height","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","slice","customRequest","onSuccess","className","multiple","lineHeight","maxCount","beforeUpload","LIST_IGNORE","Button","icon","UploadOutlined","BtnWrap","right","GreenBtn","onClick","handleFormSubmit","PinkBtn","handleCancelConfirmation","ModalOneBtn","isOpen","handleOk","e","subTitle","maskClosable","Link","to","ModalTwoBtn","handleCancelConfirmModalOk","handleCancel","stopPropagation","AlbumWrite","setTitle","setSubTitle","setIsOpen","isNavigate","setIsNavigate","isLogin","useCustomLogin","useEffect","_Fragment","WriteAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","mq","mobileBig","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","_templateObject15"],"sourceRoot":""}