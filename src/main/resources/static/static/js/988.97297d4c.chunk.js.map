{"version":3,"file":"static/js/988.97297d4c.chunk.js","mappings":"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","sources":["components/ui/ModalOneBtn.js","components/ui/ModalTwoBtn.js","pages/user/ParentEdit.js","pages/user/MyPage.js","styles/ui/warning.js"],"sourcesContent":["import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalTwoBtn = ({\r\n  isOpen,\r\n  handleOk,\r\n  handleCancel,\r\n  title,\r\n  subTitle,\r\n  children,\r\n}) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n        <OrangeBtn key=\"back\" onClick={handleCancel}>\r\n          취소\r\n        </OrangeBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalTwoBtn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Modal } from \"antd\";\r\nimport { getParentInfo, putParentInfo } from \"../../api/user/userApi\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\nimport { FlexBox } from \"../../styles/user/mypage\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst initState = {\r\n  parentNm: \"\",\r\n  phoneNb: \"\",\r\n  uid: \"\",\r\n  prEmail: \"\",\r\n  upw: \"\",\r\n};\r\nconst ParentEdit = ({ open, handleCancel }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // 안내창오픈여부\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  //수정창 오픈여부\r\n  const [isEditOpen, setIsEditOpen] = useState(open);\r\n\r\n  // 모달텍스트\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = value => {\r\n    const obj = {\r\n      parentNm: value.parentNm,\r\n      phoneNb: value.phoneNb,\r\n      prEmail: value.prEmail,\r\n      upw: value.upw,\r\n    };\r\n    putParentInfo({ obj, successEditFn, failEditFn, errorEditFn });\r\n  };\r\n\r\n  const successEditFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"수정 완료\");\r\n    setSubTitle(\"정보가 수정되었습니다.\");\r\n    setIsEditOpen(false);\r\n  };\r\n  const failEditFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"수정 실패\");\r\n    setSubTitle(result);\r\n  };\r\n  const errorEditFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"수정 실패\");\r\n    setSubTitle(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getParentInfo({ successFn, failFn, errorFn });\r\n  }, []);\r\n\r\n  const successFn = result => {\r\n    console.log(\"성공\", result);\r\n    form.setFieldsValue(result);\r\n  };\r\n  const failFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"데이터 애러\");\r\n    setSubTitle(\r\n      \"데이터를 가져오는데 실패했습니다. \\n 잠시후 다시 시도해주세요.\",\r\n    );\r\n  };\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"서버 에러\");\r\n    setSubTitle(result);\r\n  };\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={isEditOpen}\r\n        onCancel={handleCancel}\r\n        closeIcon={null}\r\n        width={400}\r\n        footer={<></>}\r\n        styles={modalStyles}\r\n      >\r\n        <ModalTitle>\r\n          <h3>학부모 정보 수정</h3>\r\n        </ModalTitle>\r\n        <ModalBody>\r\n          <Form form={form} name=\"parentedit\" onFinish={onFinish}>\r\n            <Form.Item\r\n              name=\"uid\"\r\n              style={{ marginBottom: 20 }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"아이디를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input disabled />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"parentNm\"\r\n              style={{ marginBottom: 20 }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"이름 입력\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phoneNb\"\r\n              style={{ marginBottom: 20 }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"전화번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"전화번호 입력\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"prEmail\"\r\n              style={{ marginBottom: 20 }}\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"올바른 E-mail 양식이 아닙니다.\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"이메일을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"이메일 입력\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"upw\"\r\n              style={{ marginBottom: 20 }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"새로운 비밀번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password placeholder=\"새로운 비밀번호 입력\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              style={{ marginBottom: 20 }}\r\n              dependencies={[\"upw\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 한번 더 입력해주세요.\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"upw\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"입력한 비밀번호와 일치하지 않습니다. 다시 작성해주세요.\",\r\n                      ),\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"새로운 비밀번호 확인\" />\r\n            </Form.Item>\r\n            <FlexBox style={{ justifyContent: \"center\" }}>\r\n              <PinkBtn type=\"submit\">등록</PinkBtn>\r\n              <OrangeBtn type=\"button\" onClick={handleCancel}>\r\n                취소\r\n              </OrangeBtn>\r\n            </FlexBox>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParentEdit;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ContentInner, PageTitle } from \"../../styles/basic\";\r\nimport { Button, Dropdown, Form, Input, Select } from \"antd\";\r\nimport {\r\n  DetailBadge,\r\n  DetailInfo,\r\n  FlexBox,\r\n  MyContentWrap,\r\n  MypageWrap,\r\n  TitleWrap,\r\n} from \"../../styles/user/mypage\";\r\nimport { BtnWrap, GrayBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport MyProfileComponent from \"../../components/user/mypage/MyProfileComponent\";\r\nimport MyPhysicalComponent from \"../../components/user/mypage/MyPhysicalComponent\";\r\nimport MyBadge from \"../../components/user/mypage/MyBadge\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { getMypage, getParentInfo } from \"../../api/user/userApi\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport ModalTwoBtn from \"../../components/ui/ModalTwoBtn\";\r\nimport ParentEdit from \"./ParentEdit\";\r\n\r\nconst initState = {\r\n  kidNm: \"\",\r\n  iclass: 0,\r\n  gender: 0,\r\n  profile: \"546fe34c-bf55-46c1-9f0a-2e715edf8c61.jpg\",\r\n  birth: \"\",\r\n  address: \"\",\r\n  growths: [\r\n    {\r\n      height: 0,\r\n      weight: 0,\r\n      bodyDate: \"\",\r\n      growth: 0,\r\n      growthDate: \"\",\r\n      growthMemo: \"\",\r\n    },\r\n  ],\r\n  parents: [\r\n    {\r\n      iparent: 0,\r\n      uid: \"\",\r\n      parentNm: \"\",\r\n      phoneNb: \"\",\r\n      irelation: 0,\r\n    },\r\n  ],\r\n  memo: \".\",\r\n  emerNm: \"\",\r\n  emerNb: \"\",\r\n};\r\n\r\nconst MyPage = () => {\r\n  const navigate = useNavigate();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  // 현재 출력 년도, kid 값\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isParentLogin } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n  // ikid 값만 추출하여 파라미터값과 비교\r\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: <Link to={`/mypage?year=${yearNum}&ikid=${ikid}`}>{yearNum}</Link>,\r\n    });\r\n  }\r\n  // 아이 선택\r\n  const items =\r\n    Array.isArray(ikidList) &&\r\n    ikidList.map(item => {\r\n      return {\r\n        key: item.ikid.toString(),\r\n        label: (\r\n          <Link to={`/mypage?year=${year}&ikid=${item.ikid}`}>\r\n            {item.kidNm}\r\n          </Link>\r\n        ),\r\n      };\r\n    });\r\n  // 아이 마이페이지 데이터\r\n  const [myData, setMyData] = useState(initState);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [codeOpen, setCodeOpen] = useState(false);\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const [editKey, setEditKey] = useState(0);\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  // 마이페이지 데이터 가져오기\r\n  useEffect(() => {\r\n    if (!isParentLogin) {\r\n      // 학부모 계정이 아닐경우\r\n      setTitle(\"학부모 전용페이지\");\r\n      setSubTitle(\"학부모회원만 이용할 수 있는 서비스 입니다.\");\r\n      setIsOpen(true);\r\n      return;\r\n    } else if (!year || !ikid) {\r\n      setTitle(\"잘못된 경로\");\r\n      setSubTitle(\"잘못된 경로입니다. 다시 시도해주세요.\");\r\n      setIsOpen(true);\r\n      return;\r\n    } else if (ikid === \"0\") {\r\n      setTitle(\"학부모 전용 페이지\");\r\n      setSubTitle(\"연결된 원생 정보가 없습니다. \\n 관리자에게 문의해주세요.\");\r\n      setIsOpen(true);\r\n      return;\r\n    } else {\r\n      getMypage({ year, ikid, successFn, failFn, errorFn });\r\n    }\r\n  }, [initState, year, ikid]);\r\n\r\n  // 데이터연동 성공\r\n  const successFn = result => {\r\n    // 나와 연결된 아이가 맞는지 확인 후 데이터 가져옴\r\n    if (!kidCheck.includes(parseInt(ikid))) {\r\n      setTitle(\"조회 실패\");\r\n      setSubTitle(\"본인의 아이 정보만 확인 가능합니다.\");\r\n      setIsOpen(true);\r\n      return;\r\n    } else {\r\n      setMyData(result);\r\n    }\r\n  };\r\n  // 데이터연동 실패\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"조회 실패\");\r\n    setSubTitle(result);\r\n  };\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 메인으로 이동\r\n    navigate(-1);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditOpen(false);\r\n  };\r\n\r\n  // 학부모수정버튼 클릭\r\n  const onParentEditClick = () => {\r\n    setIsEditOpen(true);\r\n    setEditKey(prevKey => prevKey + 1);\r\n  };\r\n  const formRef = useRef();\r\n  // 아이추가 클릭\r\n  const onCodeAddClick = () => {\r\n    setCodeOpen(true);\r\n    setTitle(\"아이 추가\");\r\n    setSubTitle(\"식별코드를 입력해주세요.\");\r\n  };\r\n  const onFinish = values => {\r\n    console.log(\"Form Finished:\", values);\r\n  };\r\n  const handleExternalSubmit = () => {\r\n    formRef.current.submit();\r\n  };\r\n  const onValuesChange = values => {\r\n    setCode(values.code);\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  // console.log(\"로그인정보\", loginState);\r\n  // console.log(\"아이데이터\", myData);\r\n\r\n  return (\r\n    <ContentInner>\r\n      {/* 안내창 */}\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      {/* 식별코드 입력창 */}\r\n      <ModalTwoBtn\r\n        isOpen={codeOpen}\r\n        handleOk={handleExternalSubmit}\r\n        handleCancel={handleCancel}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      >\r\n        <Form\r\n          name=\"account\"\r\n          style={{\r\n            maxWidth: 600,\r\n          }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onValuesChange={onValuesChange}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"code\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"식별코드를 입력해주세요. (최대 15글자)\",\r\n                max: 15,\r\n              },\r\n            ]}\r\n          >\r\n            <Input size=\"large\" placeholder=\"코드입력\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </ModalTwoBtn>\r\n      {/* 학부모정보 수정창 */}\r\n      {isEditOpen && (\r\n        <ParentEdit\r\n          open={isEditOpen}\r\n          handleCancel={handleCancel}\r\n          key={editKey}\r\n        />\r\n      )}\r\n\r\n      <MypageWrap>\r\n        {/* 마이페이지 상단 버튼 */}\r\n        <TitleWrap>\r\n          <PageTitle>마이페이지</PageTitle>\r\n          <FlexBox>\r\n            <Dropdown menu={{ items: yearArr }}>\r\n              <Button>\r\n                {year}\r\n                <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n            <Dropdown menu={{ items }}>\r\n              <Button>\r\n                {myData.kidNm}\r\n                <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n            <BtnWrap>\r\n              <GrayBtn\r\n                onClick={e => {\r\n                  onCodeAddClick(e);\r\n                }}\r\n              >\r\n                아이추가\r\n              </GrayBtn>\r\n              <GrayBtn\r\n                onClick={() => {\r\n                  navigate(\"/ind\");\r\n                }}\r\n              >\r\n                알림장\r\n              </GrayBtn>\r\n              <GreenBtn onClick={onParentEditClick}>학부모정보수정</GreenBtn>\r\n              <PinkBtn>회원탈퇴</PinkBtn>\r\n            </BtnWrap>\r\n          </FlexBox>\r\n        </TitleWrap>\r\n        {/* 마이페이지 내용 시작 */}\r\n        <MyContentWrap>\r\n          {/* 프로필 */}\r\n          <MyProfileComponent ilevel={parent} ikid={ikid} myData={myData} />\r\n          {/* 연결계정 */}\r\n          {/* 상세정보 */}\r\n          <DetailInfo>\r\n            <TitleWrap>\r\n              <PageTitle>상세정보</PageTitle>\r\n            </TitleWrap>\r\n            {/* 상세정보 - 신체정보 */}\r\n            <MyPhysicalComponent myData={myData} />\r\n            {/* 상세정보 - 칭찬뱃지 */}\r\n            <DetailBadge>\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[0] ? myData.growths[0].growth : null\r\n                }\r\n                text={myData.growths[0] ? myData.growths[0].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[1] ? myData.growths[1].growth : null\r\n                }\r\n                text={myData.growths[1] ? myData.growths[1].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[2] ? myData.growths[2].growth : null\r\n                }\r\n                text={myData.growths[2] ? myData.growths[2].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[3] ? myData.growths[3].growth : null\r\n                }\r\n                text={myData.growths[3] ? myData.growths[3].growthMemo : \"\"}\r\n              />\r\n            </DetailBadge>\r\n          </DetailInfo>\r\n        </MyContentWrap>\r\n      </MypageWrap>\r\n    </ContentInner>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n"],"names":["_ref","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","handleCancel","onCancel","OrangeBtn","useNavigate","setIsOpen","useState","isEditOpen","setIsEditOpen","setTitle","setSubTitle","form","Form","useForm","successEditFn","result","failEditFn","errorEditFn","useEffect","getParentInfo","successFn","failFn","errorFn","console","log","setFieldsValue","_Fragment","name","onFinish","value","obj","parentNm","phoneNb","prEmail","upw","putParentInfo","Item","style","marginBottom","rules","required","message","Input","disabled","placeholder","hasFeedback","Password","dependencies","_ref2","getFieldValue","validator","_","Promise","reject","Error","resolve","FlexBox","ModalOneBtn","initState","kidNm","iclass","gender","profile","birth","address","growths","height","weight","bodyDate","growth","growthDate","growthMemo","parents","iparent","uid","irelation","memo","emerNm","emerNb","MyPage","navigate","serchParams","setSearchParams","useSearchParams","year","get","ikid","loginState","isParentLogin","useCustomLogin","ikidList","kidList","kidCheck","Array","isArray","map","item","currentYear","Date","getFullYear","yearArr","yearNum","push","key","toString","label","Link","to","concat","items","myData","setMyData","codeOpen","setCodeOpen","editKey","setEditKey","code","setCode","getMypage","includes","parseInt","formRef","useRef","ContentInner","ModalTwoBtn","handleExternalSubmit","current","submit","maxWidth","initialValues","remember","values","onValuesChange","onFinishFailed","errorInfo","autoComplete","max","size","ParentEdit","MypageWrap","TitleWrap","PageTitle","Dropdown","menu","Button","DownOutlined","BtnWrap","GrayBtn","e","GreenBtn","onParentEditClick","prevKey","MyContentWrap","MyProfileComponent","ilevel","parent","DetailInfo","MyPhysicalComponent","DetailBadge","MyBadge","keywordValue","text","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","colors","greenDeep","_templateObject4"],"sourceRoot":""}