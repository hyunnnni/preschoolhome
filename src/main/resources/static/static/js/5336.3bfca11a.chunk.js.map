{"version":3,"file":"static/js/5336.3bfca11a.chunk.js","mappings":"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","sources":["components/user/mypage/MyAccountComponent.js","pages/adminPage/student/StudDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GrayBtn } from \"../../../styles/ui/buttons\";\nimport { AccountInfo, TableWrap, TitleWrap } from \"../../../styles/user/mypage\";\nimport { PageTitle } from \"../../../styles/basic\";\nimport { deleteAccount } from \"../../../api/adminPage/admin_api\";\nimport ModalTwoBtn from \"../../ui/ModalTwoBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport ModalOneBtn from \"../../ui/ModalOneBtn\";\n\nconst MyAccountComponent = ({ myData, ikid, onChildClick }) => {\n  const navigate = useNavigate();\n  const my = myData;\n\n  // 연결된 학부모 계정 pk값\n  const [iparent, setIparent] = useState(0);\n\n  useEffect(() => {\n    console.log(iparent);\n  }, [iparent]);\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n  // 모달창 취소\n  const handleCancel = () => {\n    setDelOpen(false);\n  };\n\n  // 연결삭제\n  const [delOpen, setDelOpen] = useState(false);\n  const handleClickDelete = () => {\n    console.log(\"탈퇴\");\n\n    setDelOpen(true);\n    setTitle(\"정말 삭제할까요?\");\n    setSubTitle(\"학부모 계정과 연결이 끊어집니다. 정말 삭제할까요?\");\n  };\n  const handleDelOk = () => {\n    deleteAccount({\n      successDeleteFn,\n      errorDeleteFn,\n      iparent,\n      ikid,\n    });\n  };\n\n  const successDeleteFn = res => {\n    console.log(res);\n    setIsOpen(true);\n    setTitle(\"삭제 완료\");\n    setSubTitle(\"삭제가 완료되었습니다.\");\n    setDelOpen(false);\n    onChildClick();\n    // setIsNavigate(\"/\");\n    // doLogout();\n  };\n  const errorDeleteFn = res => {\n    console.log(res);\n    setIsOpen(true);\n    setTitle(\"삭제 실패\");\n    setSubTitle(res);\n  };\n\n  return (\n    <AccountInfo>\n      <TitleWrap>\n        <PageTitle>연결계정</PageTitle>\n      </TitleWrap>\n      <TableWrap className=\"TableWrap\">\n        <table>\n          <colgroup>\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>아이디 </th>\n              <th>이름</th>\n              <th>연락처</th>\n              <th>관계</th>\n              <th>관리</th>\n            </tr>\n          </thead>\n          <tbody>\n            {my.parents.map((parent, index) => (\n              <tr key={parent.iparent}>\n                <td>{parent ? parent.uid : \"\"}</td>\n                <td>{parent ? parent.parentNm : \"\"}</td>\n                <td>{parent ? parent.phoneNb : \"\"}</td>\n                <td>\n                  {parent\n                    ? (() => {\n                        const irelation = parent.irelation;\n                        switch (irelation) {\n                          case 1:\n                            return \"부\";\n                          case 2:\n                            return \"모\";\n                          case 3:\n                            return \"조부\";\n                          case 4:\n                            return \"조모\";\n                          case 5:\n                            return \"형제/자매\";\n                          default:\n                            return \"그 외\";\n                        }\n                      })()\n                    : \"\"}\n                </td>\n                <td>\n                  <GrayBtn\n                    onClick={() => {\n                      setIparent(parent.iparent);\n                      handleClickDelete();\n                    }}\n                  >\n                    연결삭제\n                  </GrayBtn>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </TableWrap>\n\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      {/* 학부모 연결 삭제창 */}\n      <ModalTwoBtn\n        isOpen={delOpen}\n        handleOk={handleDelOk}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      />\n    </AccountInfo>\n  );\n};\n\nexport default MyAccountComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { ContentInner, PageTitle } from \"../../../styles/basic\";\nimport {\n  DetailBadge,\n  DetailInfo,\n  FlexBox,\n  MyContentWrap,\n  MypageWrap,\n  TitleWrap,\n} from \"../../../styles/user/mypage\";\nimport { Button, Dropdown } from \"antd\";\nimport {\n  BtnWrap,\n  GrayBtn,\n  GreenBtn,\n  OrangeBtn,\n  PurpleBtn,\n} from \"../../../styles/ui/buttons\";\nimport MyProfileComponent from \"../../../components/user/mypage/MyProfileComponent\";\nimport MyAccountComponent from \"../../../components/user/mypage/MyAccountComponent\";\nimport MyPhysicalComponent from \"../../../components/user/mypage/MyPhysicalComponent\";\nimport MyBadge from \"../../../components/user/mypage/MyBadge\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport useCustomLogin from \"../../../hooks/useCustomLogin\";\nimport { getMypage } from \"../../../api/user/userApi\";\n\nconst initState = {\n  kidNm: \"\",\n  iclass: 0,\n  gender: 0,\n  profile: \"546fe34c-bf55-46c1-9f0a-2e715edf8c61.jpg\",\n  birth: \"\",\n  address: \"\",\n  growths: [\n    {\n      height: 0,\n      weight: 0,\n      bodyDate: \"\",\n      growth: 0,\n      growthDate: \"\",\n      growthMemo: \"\",\n    },\n  ],\n  parents: [\n    {\n      iparent: 0,\n      uid: \"\",\n      parentNm: \"\",\n      phoneNb: \"\",\n      irelation: 0,\n    },\n  ],\n  memo: \".\",\n  emerNm: \"\",\n  emerNb: \"\",\n};\n\nconst StudDetails = () => {\n  const navigate = useNavigate();\n  const [serchParams, setSearchParams] = useSearchParams();\n  // 현재 출력 년도, kid 값\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const { loginState, isParentLogin } = useCustomLogin();\n  const ikidList = loginState.kidList;\n  // ikid 값만 추출하여 파라미터값과 비교\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\n  // 년도 선택\n  const currentYear = new Date().getFullYear();\n  const startYear = 2020;\n  const yearArr = [];\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\n    yearArr.push({\n      key: yearNum.toString(),\n      label: (\n        <Link to={`/admin/student/details?year=${yearNum}&ikid=${ikid}`}>\n          {yearNum}\n        </Link>\n      ),\n    });\n  }\n  // 아이 마이페이지 데이터\n  const [myData, setMyData] = useState(initState);\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [codeOpen, setCodeOpen] = useState(false);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [editKey, setEditKey] = useState(0);\n\n  // 연결계정 삭제 후 콜백\n  const [parentState, setParentState] = useState(0);\n  const handleChildClick = () => {\n    // 자식 컴포넌트에서 호출할 함수\n    setParentState(prevState => prevState + 1);\n  };\n\n  // 마이페이지 데이터 가져오기\n  useEffect(() => {\n    getMypage({ year, ikid, successFn, failFn, errorFn });\n  }, [initState, year, ikid, parentState]);\n\n  // 데이터연동 성공\n  const successFn = result => {\n    setMyData(result);\n  };\n  // 데이터연동 실패\n  const failFn = result => {\n    console.log(result);\n  };\n  // 데이터연동 실패\n  const errorFn = result => {\n    setIsOpen(true);\n    setTitle(\"조회 실패\");\n    setSubTitle(result);\n  };\n\n  const handleClickCreate = () => {\n    navigate(`/admin/student/Create`);\n  };\n\n  const ilevel = \"admin\";\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n    console.log(componentSize);\n  };\n\n  return (\n    <ContentInner>\n      <MypageWrap>\n        {/* 마이페이지 상단 버튼 */}\n        <TitleWrap>\n          <PageTitle>기본정보</PageTitle>\n          <FlexBox>\n            <Dropdown menu={{ items: yearArr }}>\n              <Button>\n                {year}\n                <DownOutlined />\n              </Button>\n            </Dropdown>\n            <BtnWrap>\n              <GrayBtn>알림장작성</GrayBtn>\n              <PurpleBtn onClick={handleClickCreate}>원생정보수정</PurpleBtn>\n              <GreenBtn\n                onClick={e => navigate(\"/admin/student?page=1&kidCheck=0\")}\n              >\n                목록보기\n              </GreenBtn>\n            </BtnWrap>\n          </FlexBox>\n        </TitleWrap>\n        {/* 마이페이지 내용 시작 */}\n        <MyContentWrap>\n          {/* 프로필 */}\n          <MyProfileComponent\n            ilevel={ilevel}\n            ikid={ikid}\n            myData={myData}\n            onChildClick={handleChildClick}\n          />\n          {/* 연결계정 */}\n          {ilevel === \"admin\" ? (\n            <MyAccountComponent\n              ikid={ikid}\n              myData={myData}\n              onChildClick={handleChildClick}\n            />\n          ) : null}\n          {/* 상세정보 */}\n          <DetailInfo>\n            <TitleWrap>\n              <PageTitle>상세정보</PageTitle>\n              {ilevel === \"admin\" ? (\n                <Link\n                  to={`/admin/student/detailsform?year=${year}&ikid=${ikid}`}\n                >\n                  <OrangeBtn>상세정보 입력</OrangeBtn>\n                </Link>\n              ) : null}\n            </TitleWrap>\n            {/* 상세정보 - 신체정보 */}\n            <MyPhysicalComponent myData={myData} />\n            {/* 상세정보 - 칭찬뱃지 */}\n            <DetailBadge>\n              <MyBadge\n                keywordValue={\n                  myData.growths[0] ? myData.growths[0].growth : null\n                }\n                text={myData.growths[0] ? myData.growths[0].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[1] ? myData.growths[1].growth : null\n                }\n                text={myData.growths[1] ? myData.growths[1].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[2] ? myData.growths[2].growth : null\n                }\n                text={myData.growths[2] ? myData.growths[2].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[3] ? myData.growths[3].growth : null\n                }\n                text={myData.growths[3] ? myData.growths[3].growthMemo : \"\"}\n              />\n            </DetailBadge>\n          </DetailInfo>\n        </MyContentWrap>\n      </MypageWrap>\n    </ContentInner>\n  );\n};\n\nexport default StudDetails;\n"],"names":["_ref","myData","ikid","onChildClick","navigate","useNavigate","my","iparent","setIparent","useState","useEffect","console","log","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","delOpen","setDelOpen","successDeleteFn","res","errorDeleteFn","_jsxs","AccountInfo","children","_jsx","TitleWrap","PageTitle","TableWrap","className","width","parents","map","parent","index","uid","parentNm","phoneNb","irelation","GrayBtn","onClick","ModalOneBtn","handleOk","ModalTwoBtn","handleDelOk","deleteAccount","handleCancel","initState","kidNm","iclass","gender","profile","birth","address","growths","height","weight","bodyDate","growth","growthDate","growthMemo","memo","emerNm","emerNb","StudDetails","serchParams","setSearchParams","useSearchParams","year","get","loginState","isParentLogin","useCustomLogin","ikidList","kidList","currentYear","Array","isArray","item","Date","getFullYear","yearArr","yearNum","push","key","toString","label","Link","to","concat","setMyData","codeOpen","setCodeOpen","isEditOpen","setIsEditOpen","editKey","setEditKey","parentState","setParentState","handleChildClick","prevState","getMypage","successFn","failFn","errorFn","result","ilevel","componentSize","setComponentSize","ContentInner","MypageWrap","FlexBox","Dropdown","menu","items","Button","DownOutlined","BtnWrap","PurpleBtn","handleClickCreate","GreenBtn","e","MyContentWrap","MyProfileComponent","MyAccountComponent","DetailInfo","OrangeBtn","MyPhysicalComponent","DetailBadge","MyBadge","keywordValue","text"],"sourceRoot":""}