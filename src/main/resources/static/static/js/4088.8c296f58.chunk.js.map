{"version":3,"file":"static/js/4088.8c296f58.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","components/common/NavBar.js","components/common/Footer.js","components/common/SideMenu.js","components/common/SideBar.js","layouts/MainLayout.js","styles/ui/buttons.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  loginPostAsync,\n  logout,\n  postParentLoginAsync,\n} from \"../slices/loginSlice\";\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\nimport { refreshJWT } from \"../util/jwtUtil\";\n\nconst useCustomLogin = () => {\n  // 패스 이동하기\n  const navigate = useNavigate();\n\n  // RTK 상태값 업데이트\n  const dispatch = useDispatch();\n\n  // RTK 상태값 읽기\n  const loginState = useSelector(state => state.loginSlice);\n\n  // 로그인 상태값 파악\n  const isLogin = loginState.teacherUid ? true : false;\n  const isName = loginState.teacherNm ? true : false;\n  const isParentLogin = loginState.iparent ? true : false;\n\n  // 로그인 기능\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\n    // 로그인 상태 업데이트\n    const action = dispatch(\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    // 결과값\n    return action.payload;\n  };\n\n  // 학부모 로그인 기능\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\n    // 로그인 상태 업데이트\n    const action = dispatch(\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    // 결과값\n    return action.payload;\n  };\n\n  // 로그아웃 기능\n  const doLogout = () => {\n    dispatch(logout());\n  };\n\n  // 패스이동 기능\n  const moveToPath = path => {\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\n    // 이전 페이지 기록을 남기지 않는다.\n    navigate({ pathname: path }, { replace: true });\n  };\n\n  // 로그인 페이지로 이동\n  const moveToLogin = () => {\n    console.log(\"페이지 이동\");\n    return <Navigate replace to=\"/login\" />;\n  };\n\n  // 액세스 토큰 리프레시 및 업데이트\n  const refreshAccessToken = async () => {\n    const memberInfo = getCookie(\"member\");\n    const { accessToken, refreshToken } = memberInfo;\n\n    try {\n      const newTokens = await refreshJWT(accessToken, refreshToken);\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\n      memberInfo.accessToken = newTokens.accessToken;\n      setCookie(\"member\", memberInfo, 1);\n      return newTokens.accessToken;\n    } catch (error) {\n      // 리프레시 실패 처리\n      console.error(\"토큰 리프레시 실패:\", error);\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\n    }\n  };\n\n  return {\n    loginState,\n    isLogin,\n    isName,\n    isParentLogin,\n    doLogin,\n    doLogout,\n    doParentLogin,\n    moveToPath,\n    moveToLogin,\n    refreshAccessToken,\n  };\n};\n\nexport default useCustomLogin;\n","import React from \"react\";\nimport { HeaderBtn, NavWrap } from \"../../styles/basic\";\nimport {\n  GrayBtn,\n  GreenBtn,\n  OrangeBtn,\n  PurpleBtn,\n} from \"../../styles/ui/buttons\";\nimport { useNavigate } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n  const { moveToPath, doLogout } = useCustomLogin();\n  const { loginState, isLogin, isParentLogin } = useCustomLogin();\n  const currentYear = new Date().getFullYear();\n  const ikidList = loginState.kidList;\n  // console.log(loginState);\n  const handleLogout = () => {\n    doLogout();\n    moveToPath(\"/\");\n  };\n  return (\n    <NavWrap>\n      <p>\n        {isLogin\n          ? `${loginState.teacherNm} 환영합니다.`\n          : isParentLogin\n          ? \"학부모님 환영합니다.\"\n          : null}\n      </p>\n      <HeaderBtn>\n        {isLogin ? (\n          <>\n            <GrayBtn\n              onClick={e =>\n                navigate(`/ind?year=${currentYear}&page=1&iclass=0`)\n              }\n            >\n              알림장목록\n            </GrayBtn>\n\n            <PurpleBtn onClick={e => navigate(\"/admin?page=1&iclass=0\")}>\n              학부모관리\n            </PurpleBtn>\n            <OrangeBtn\n              onClick={e => navigate(\"/admin/student?page=1&kidCheck=0\")}\n            >\n              원생관리\n            </OrangeBtn>\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : isParentLogin ? (\n          <>\n            <GrayBtn\n              onClick={e =>\n                navigate(\n                  `/ind?year=${currentYear}&page=1&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              알림장\n            </GrayBtn>\n            <OrangeBtn\n              onClick={e =>\n                navigate(\n                  `/mypage?year=${currentYear}&ikid=${\n                    ikidList[0] ? ikidList[0].ikid : 0\n                  }`,\n                )\n              }\n            >\n              마이페이지\n            </OrangeBtn>\n            <GreenBtn\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              로그아웃\n            </GreenBtn>\n          </>\n        ) : (\n          <>\n            <OrangeBtn onClick={e => navigate(\"user/accounts\")}>\n              회원가입\n            </OrangeBtn>\n            <GreenBtn onClick={e => navigate(\"login\")}>로그인</GreenBtn>\n          </>\n        )}\n      </HeaderBtn>\n    </NavWrap>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { FooterBus, FooterWrap } from \"../../styles/basic\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterBus />\n      <Link to=\"/\">copyright 떡잎방범대</Link>\n    </FooterWrap>\n  );\n};\n\nexport default Footer;\n","import { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst SideMenu = () => {\n  const { isLogin } = useCustomLogin();\n  function getItem(label, key, icon, children, type) {\n    return {\n      key,\n      icon,\n      children,\n      label,\n      type,\n    };\n  }\n  const items = [\n    getItem(\n      \"유치원 안내\",\n      \"1\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/info_icon.svg\"}\n      />,\n      [\n        getItem(<Link to=\"/info/\">유치원 소개</Link>, \"1-1\"),\n        getItem(<Link to=\"/info/class\">유치원 현황</Link>, \"1-2\"),\n        getItem(<Link to=\"/info/location\">오시는 길</Link>, \"1-3\"),\n      ],\n    ),\n    getItem(\n      \"교육\",\n      \"2\",\n      <img\n        src={process.env.PUBLIC_URL + \"/images/common/sidebar/education.svg\"}\n      />,\n      [\n        getItem(<Link to=\"/edu\">교육과정</Link>, \"2-1\"),\n        getItem(<Link to=\"/edu/specialact\">방과후활동</Link>, \"2-2\"),\n      ],\n    ),\n    getItem(\n      \"활동앨범\",\n      \"3\",\n      <Link to=\"/album\">\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/gallery.svg\"}\n        />\n      </Link>,\n    ),\n    getItem(\n      \"유치원 소식\",\n      \"4\",\n      <Link to=\"/notice\">\n        <img src={process.env.PUBLIC_URL + \"/images/common/sidebar/news.svg\"} />\n      </Link>,\n    ),\n  ];\n  if (isLogin) {\n    items.push(\n      getItem(\n        \"관리자\",\n        \"5\",\n        <img\n          src={process.env.PUBLIC_URL + \"/images/common/sidebar/manager.svg\"}\n        />,\n        [\n          getItem(<Link to=\"/admin?page=1&iclass=0\">학부모관리</Link>, \"5-1\"),\n          getItem(\n            <Link to=\"/admin/student?page=1&kidCheck=0\">원생관리</Link>,\n            \"5-2\",\n          ),\n          getItem(<Link to=\"/admin/student/create\">원생등록</Link>, \"5-3\"),\n        ],\n      ),\n    );\n  }\n\n  return (\n    <Menu\n      defaultSelectedKeys={[\"\"]}\n      mode=\"inline\"\n      items={items}\n      style={{ border: 0 }}\n    />\n  );\n};\n\nexport default SideMenu;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LogoWrap, SideBarWrap } from \"../../styles/basic\";\nimport Sider from \"antd/es/layout/Sider\";\nimport SideMenu from \"./SideMenu\";\nimport { AllBtn } from \"../../styles/ui/buttons\";\n\nconst SideBar = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  return (\n    <SideBarWrap>\n      <Sider trigger={null} collapsible collapsed={collapsed} theme=\"light\">\n        <div className=\"demo-logo-vertical\" />\n        <LogoWrap>\n          <Link to={\"/\"}>\n            {collapsed ? (\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/images/common/header/smallLogo.svg\"\n                }\n              />\n            ) : (\n              <img\n                src={process.env.PUBLIC_URL + \"/images/common/header/logo.svg\"}\n              />\n            )}\n          </Link>\n        </LogoWrap>\n        <SideMenu />\n        <AllBtn type=\"text\" onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? \"펼치기\" : \"접기\"}\n        </AllBtn>\n      </Sider>\n    </SideBarWrap>\n  );\n};\n\nexport default SideBar;\n","import { Layout, theme } from \"antd\";\nimport { AllLayout, WrapMain } from \"../styles/basic\";\nimport NavBar from \"../components/common/NavBar\";\nimport Footer from \"../components/common/Footer\";\nimport SideBar from \"../components/common/SideBar\";\nimport { Outlet } from \"react-router\";\nconst MainLayout = ({ children }) => {\n  return (\n    <AllLayout className=\"layout-wrap\">\n      {/* 사이드바(전체메뉴)영역 */}\n      <SideBar />\n      <Layout>\n        {/* 상단네비영역 */}\n        <NavBar />\n        {/* 컨텐츠영역 */}\n        <WrapMain>\n          <Outlet />\n        </WrapMain>\n      </Layout>\n      {/* 하단푸터 */}\n      <Footer />\n    </AllLayout>\n  );\n};\nexport default MainLayout;\n","import styled from \"@emotion/styled\";\nimport { colors, shadow } from \"../basic\";\nimport { Button, Modal, Space } from \"antd\";\n// 버튼 기본 스타일 정의\nconst defaultBtnStyle = {\n  fontSize: \"1.8rem\",\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\n  background: \"#fff\",\n  border: 0,\n  padding: \"1rem 1.5rem\",\n  borderRadius: \"1rem\",\n  cursor: \"pointer\",\n  minWidth: \"8rem\",\n};\n\n// 버튼 마우스오버 효과\nconst buttonHover = {\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\n};\n\nexport const BtnWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\n// 색상 별 버튼 style\nexport const GreenBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const OrangeBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.orangeLight};\n  color: ${colors.orangeDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.pinkLight};\n  color: ${colors.pinkDeep};\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const BlueBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.blueLight};\n  color: ${colors.blueDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const RedBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.redLight};\n  color: ${colors.redDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PurpleBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.purpleLight};\n  color: ${colors.purpleDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const GrayBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayLight};\n  color: ${colors.grayDeep};\n  transition: 0.2s;\n  :hover {\n    ${shadow}\n  }\n`;\nexport const BlackBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayDeep};\n  color: ${colors.white};\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메인 배너 버튼\nexport const MainPinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffadc7;\n  color: #fe77a2;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const MainBrownBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffcc58;\n  color: #db8400;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메뉴 접기 버튼\nexport const AllBtn = styled.button`\n  ${defaultBtnStyle}\n  position: absolute;\n  right: -2.5rem;\n  top: 2.5rem;\n  padding: 1rem 0.5rem;\n  font-size: 1.6rem;\n  border-radius: 0 0.5rem 0.5rem 0;\n  min-width: auto;\n  width: 2.5rem;\n  height: 7rem;\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  z-index: 11;\n  word-break: break-all;\n  line-height: 1;\n`;\n\nexport const StyledeleteModal = styled(Modal)`\n  ant-btn {\n    color: red;\n  }\n`;\n"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","_ref","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","doParentLogin","_ref2","postParentLoginAsync","moveToPath","path","pathname","replace","moveToLogin","console","log","_jsx","Navigate","to","refreshAccessToken","async","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","error","NavBar","currentYear","Date","getFullYear","ikidList","kidList","handleLogout","_jsxs","NavWrap","children","concat","HeaderBtn","_Fragment","GrayBtn","onClick","e","PurpleBtn","OrangeBtn","GreenBtn","ikid","Footer","FooterWrap","FooterBus","Link","SideMenu","getItem","label","key","icon","type","items","src","push","Menu","defaultSelectedKeys","mode","style","border","SideBar","collapsed","setCollapsed","useState","SideBarWrap","Sider","trigger","collapsible","theme","className","LogoWrap","AllBtn","AllLayout","Layout","WrapMain","Outlet","defaultBtnStyle","fontSize","fontFamily","background","padding","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","_templateObject3","orangeLight","orangeDeep","PinkBtn","_templateObject4","pinkLight","pinkDeep","BlueBtn","_templateObject5","blueLight","blueDeep","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","_templateObject12","Modal","_templateObject13"],"sourceRoot":""}