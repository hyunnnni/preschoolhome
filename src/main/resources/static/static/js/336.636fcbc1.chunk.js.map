{"version":3,"file":"static/js/336.636fcbc1.chunk.js","mappings":"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","sources":["api/adminPage/admin_api.js","components/user/mypage/MyAccountComponent.js","pages/adminPage/student/StudDetails.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/teacher`;\r\nconst host = `${SERVER_URL}/api/kid`;\r\n\r\n// 학부모 관련\r\n// 학부모 관리 리스트 GET ㅇ\r\nexport const getAdminParentList = async ({\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n  page,\r\n  iclass,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/parent?page=${page}&iclass=${iclass}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data임 : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/guardian.json`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 학부모 정보 수정 전 가져오기 GET\r\nexport const getAdminParentInfo = async ({\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n  iparent,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/parentedit?iparent=${iparent}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n      // RTK 업데이트 처리를 위해 값 전달\r\n      return res.data;\r\n    } else {\r\n      failFn(\"서버가 불안정합니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"서버가 불안정합니다.다시 시도해주세요.\");\r\n  }\r\n};\r\n\r\n// 학부모 정보 수정 PUT\r\nexport const putAdminParentInfo = async ({\r\n  obj,\r\n  successEditFn,\r\n  failEditFn,\r\n  errorEditFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.put(`${path}/parentedit`, obj);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successEditFn(res.data);\r\n      // RTK 업데이트 처리를 위해 값 전달\r\n      return res.data;\r\n    } else {\r\n      failEditFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errorEditFn(\"수정에 실패했습니다. 다시 시도해주세요.\");\r\n  }\r\n};\r\n\r\n// 학부모 리스트 삭제 PUT\r\nexport const deleteParentList = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.put(`${path}/parent`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.put(`/guardian.json`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 원생 관련\r\n// 원생 관리 리스트 GET ㅇ\r\nexport const getAdminStudentList = async ({\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n  page,\r\n  kidCheck,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}/kid?page=${page}&kidCheck=${kidCheck}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/student.json`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 원생 등록 POST\r\nexport const postStudentCreate = async ({\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n  student,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${host}`, student, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n\r\n// 원생 상세 정보 POST\r\nexport const postStudentDetail = async ({\r\n  successAddFn,\r\n  failAddFn,\r\n  errorAddFn,\r\n  allDetailData,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${host}/detail`, allDetailData);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successAddFn(res.data);\r\n    } else {\r\n      failAddFn();\r\n    }\r\n  } catch (error) {\r\n    errorAddFn();\r\n  }\r\n};\r\n\r\n// 원생 상세정보 GET\r\nexport const getDetailInfo = async ({\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n  ikid,\r\n  year,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${host}/detail/edit/${ikid}?year=${year}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n      // console.log(res.data);\r\n      // RTK 업데이트 처리를 위해 값 전달\r\n      return res.data;\r\n    } else {\r\n      failFn(\"서버가 불안정합니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"서버가 불안정합니다.다시 시도해주세요.\");\r\n  }\r\n};\r\n// 원생 마이페이지 GET\r\nexport const getMyPageInfo = async ({\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/${year}/${ikid}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n\r\n      // RTK 업데이트 처리를 위해 값 전달\r\n      return res.data;\r\n    } else {\r\n      failFn(\"서버가 불안정합니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"서버가 불안정합니다.다시 시도해주세요.\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { GrayBtn } from \"../../../styles/ui/buttons\";\r\nimport { AccountInfo, TableWrap, TitleWrap } from \"../../../styles/user/mypage\";\r\nimport { PageTitle } from \"../../../styles/basic\";\r\n\r\nconst MyAccountComponent = ({ myData }) => {\r\n  const my = myData;\r\n  return (\r\n    <AccountInfo>\r\n      <TitleWrap>\r\n        <PageTitle>연결계정</PageTitle>\r\n      </TitleWrap>\r\n      <TableWrap className=\"TableWrap\">\r\n        <table>\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"20%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th>아이디 </th>\r\n              <th>이름</th>\r\n              <th>연락처</th>\r\n              <th>관계</th>\r\n              <th>관리</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {my.parents.map((parent, index) => (\r\n              <tr key={index}>\r\n                <td>{parent ? parent.uid : \"\"}</td>\r\n                <td>{parent ? parent.parentNm : \"\"}</td>\r\n                <td>{parent ? parent.phoneNb : \"\"}</td>\r\n                <td>\r\n                  {parent\r\n                    ? (() => {\r\n                        const irelation = parent.irelation;\r\n                        switch (irelation) {\r\n                          case 1:\r\n                            return \"부\";\r\n                          case 2:\r\n                            return \"모\";\r\n                          case 3:\r\n                            return \"조부\";\r\n                          case 4:\r\n                            return \"조모\";\r\n                          case 5:\r\n                            return \"형제/자매\";\r\n                          default:\r\n                            return \"그 외\";\r\n                        }\r\n                      })()\r\n                    : \"\"}\r\n                </td>\r\n                <td>\r\n                  <GrayBtn>연결삭제</GrayBtn>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </TableWrap>\r\n    </AccountInfo>\r\n  );\r\n};\r\n\r\nexport default MyAccountComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ContentInner, PageTitle } from \"../../../styles/basic\";\r\nimport {\r\n  DetailBadge,\r\n  DetailInfo,\r\n  FlexBox,\r\n  MyContentWrap,\r\n  MypageWrap,\r\n  TitleWrap,\r\n} from \"../../../styles/user/mypage\";\r\nimport { Button, Dropdown, Form, Select } from \"antd\";\r\nimport {\r\n  BtnWrap,\r\n  GrayBtn,\r\n  GreenBtn,\r\n  OrangeBtn,\r\n  PurpleBtn,\r\n} from \"../../../styles/ui/buttons\";\r\nimport MyProfileComponent from \"../../../components/user/mypage/MyProfileComponent\";\r\nimport MyAccountComponent from \"../../../components/user/mypage/MyAccountComponent\";\r\nimport MyPhysicalComponent from \"../../../components/user/mypage/MyPhysicalComponent\";\r\nimport MyBadge from \"../../../components/user/mypage/MyBadge\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport useCustomLogin from \"../../../hooks/useCustomLogin\";\r\nimport { getMyPageInfo } from \"../../../api/adminPage/admin_api\";\r\nimport { getMypage } from \"../../../api/user/userApi\";\r\n\r\nconst initState = {\r\n  kidNm: \"\",\r\n  iclass: 0,\r\n  gender: 0,\r\n  profile: \"546fe34c-bf55-46c1-9f0a-2e715edf8c61.jpg\",\r\n  birth: \"\",\r\n  address: \"\",\r\n  growths: [\r\n    {\r\n      height: 0,\r\n      weight: 0,\r\n      bodyDate: \"\",\r\n      growth: 0,\r\n      growthDate: \"\",\r\n      growthMemo: \"\",\r\n    },\r\n  ],\r\n  parents: [\r\n    {\r\n      iparent: 0,\r\n      uid: \"\",\r\n      parentNm: \"\",\r\n      phoneNb: \"\",\r\n      irelation: 0,\r\n    },\r\n  ],\r\n  memo: \".\",\r\n  emerNm: \"\",\r\n  emerNb: \"\",\r\n};\r\n\r\nconst StudDetails = () => {\r\n  const navigate = useNavigate();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  // 현재 출력 년도, kid 값\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isParentLogin } = useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n  // ikid 값만 추출하여 파라미터값과 비교\r\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\r\n  // 년도 선택\r\n  const currentYear = new Date().getFullYear();\r\n  const startYear = 2020;\r\n  const yearArr = [];\r\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\r\n    yearArr.push({\r\n      key: yearNum.toString(),\r\n      label: (\r\n        <Link to={`/admin/student/details?year=${yearNum}&ikid=${ikid}`}>\r\n          {yearNum}\r\n        </Link>\r\n      ),\r\n    });\r\n  }\r\n  // 아이 마이페이지 데이터\r\n  const [myData, setMyData] = useState(initState);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [codeOpen, setCodeOpen] = useState(false);\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const [editKey, setEditKey] = useState(0);\r\n\r\n  // 마이페이지 데이터 가져오기\r\n  useEffect(() => {\r\n    getMypage({ year, ikid, successFn, failFn, errorFn });\r\n  }, [initState, year, ikid]);\r\n\r\n  // 데이터연동 성공\r\n  const successFn = result => {\r\n    setMyData(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"조회 실패\");\r\n    setSubTitle(result);\r\n  };\r\n\r\n  const handleClickList = () => {\r\n    navigate(`/admin/student/list`);\r\n  };\r\n  const handleClickCreate = () => {\r\n    navigate(`/admin/student/Create`);\r\n  };\r\n\r\n  const ilevel = \"admin\";\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n    console.log(componentSize);\r\n  };\r\n\r\n  return (\r\n    <ContentInner>\r\n      <MypageWrap>\r\n        {/* 마이페이지 상단 버튼 */}\r\n        <TitleWrap>\r\n          <PageTitle>마이페이지</PageTitle>\r\n          <FlexBox>\r\n            <Dropdown menu={{ items: yearArr }}>\r\n              <Button>\r\n                {year}\r\n                <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n            <BtnWrap>\r\n              <GrayBtn>알림장작성</GrayBtn>\r\n              <PurpleBtn onClick={handleClickCreate}>원생정보수정</PurpleBtn>\r\n              <GreenBtn onClick={handleClickList}>목록보기</GreenBtn>\r\n            </BtnWrap>\r\n          </FlexBox>\r\n        </TitleWrap>\r\n        {/* 마이페이지 내용 시작 */}\r\n        <MyContentWrap>\r\n          {/* 프로필 */}\r\n          <MyProfileComponent ilevel={ilevel} ikid={ikid} myData={myData} />\r\n          {/* 연결계정 */}\r\n          {ilevel === \"admin\" ? (\r\n            <MyAccountComponent ilevel={ilevel} ikid={ikid} myData={myData} />\r\n          ) : null}\r\n          {/* 상세정보 */}\r\n          <DetailInfo>\r\n            <TitleWrap>\r\n              <PageTitle>상세정보</PageTitle>\r\n              {ilevel === \"admin\" ? (\r\n                <Link\r\n                  to={`/admin/student/detailsform?year=${year}&ikid=${ikid}`}\r\n                >\r\n                  <OrangeBtn>상세정보 입력</OrangeBtn>\r\n                </Link>\r\n              ) : null}\r\n            </TitleWrap>\r\n            {/* 상세정보 - 신체정보 */}\r\n            <MyPhysicalComponent myData={myData} />\r\n            {/* 상세정보 - 칭찬뱃지 */}\r\n            <DetailBadge>\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[0] ? myData.growths[0].growth : null\r\n                }\r\n                text={myData.growths[0] ? myData.growths[0].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[1] ? myData.growths[1].growth : null\r\n                }\r\n                text={myData.growths[1] ? myData.growths[1].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[2] ? myData.growths[2].growth : null\r\n                }\r\n                text={myData.growths[2] ? myData.growths[2].growthMemo : \"\"}\r\n              />\r\n              <MyBadge\r\n                keywordValue={\r\n                  myData.growths[3] ? myData.growths[3].growth : null\r\n                }\r\n                text={myData.growths[3] ? myData.growths[3].growthMemo : \"\"}\r\n              />\r\n            </DetailBadge>\r\n          </DetailInfo>\r\n        </MyContentWrap>\r\n      </MypageWrap>\r\n    </ContentInner>\r\n  );\r\n};\r\n\r\nexport default StudDetails;\r\n"],"names":["path","concat","SERVER_URL","host","getAdminParentList","async","successFn","failFn","errorFn","page","iclass","_ref","res","jwtAxios","get","status","toString","charAt","console","log","data","error","axios","getAdminParentInfo","iparent","_ref2","putAdminParentInfo","obj","successEditFn","failEditFn","errorEditFn","_ref3","put","getAdminStudentList","kidCheck","_ref5","postStudentCreate","student","_ref6","header","headers","post","postStudentDetail","successAddFn","failAddFn","errorAddFn","allDetailData","_ref7","getDetailInfo","ikid","year","_ref8","myData","my","_jsxs","AccountInfo","children","_jsx","TitleWrap","PageTitle","TableWrap","className","width","parents","map","parent","index","uid","parentNm","phoneNb","irelation","GrayBtn","initState","kidNm","gender","profile","birth","address","growths","height","weight","bodyDate","growth","growthDate","growthMemo","memo","emerNm","emerNb","StudDetails","navigate","useNavigate","serchParams","setSearchParams","useSearchParams","loginState","isParentLogin","useCustomLogin","ikidList","kidList","currentYear","Array","isArray","item","Date","getFullYear","yearArr","yearNum","push","key","label","Link","to","setMyData","useState","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","codeOpen","setCodeOpen","isEditOpen","setIsEditOpen","editKey","setEditKey","useEffect","getMypage","result","ilevel","componentSize","setComponentSize","ContentInner","MypageWrap","FlexBox","Dropdown","menu","items","Button","DownOutlined","BtnWrap","PurpleBtn","onClick","handleClickCreate","GreenBtn","handleClickList","MyContentWrap","MyProfileComponent","MyAccountComponent","DetailInfo","OrangeBtn","MyPhysicalComponent","DetailBadge","MyBadge","keywordValue","text"],"sourceRoot":""}