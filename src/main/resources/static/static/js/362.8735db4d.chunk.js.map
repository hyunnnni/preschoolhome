{"version":3,"file":"static/js/362.8735db4d.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","api/notice/notice_api.js","components/ui/ModalOneBtn.js","components/user/MyClass.js","hooks/useCustomLogin.js","components/individualNotice/IndWriteComponent.js","pages/individualNotice/IndivNotiWrite.js","styles/album/album.js","styles/ui/warning.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../styles/basic\";\r\n\r\nconst MyClass = ({ state }) => {\r\n  const ClassTitle = styled.div`\r\n    h3 {\r\n      padding-left: 3.2rem;\r\n      background-repeat: no-repeat;\r\n      background-position: left center;\r\n      background-size: 2.8rem;\r\n\r\n      &.hibiscus {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_hibiscus.svg\"});\r\n        color: #ff73a1;\r\n      }\r\n      &.sunflower {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_sunflower.svg\"});\r\n        color: ${colors.orangeDeep};\r\n      }\r\n      &.rose {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_rose.svg\"});\r\n        color: #f5062c;\r\n      }\r\n      &.discharge {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_bag.svg\"});\r\n        color: ${colors.grayDeep};\r\n      }\r\n      &.graduation {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_graduation.svg\"});\r\n        color: ${colors.black};\r\n      }\r\n      &.none {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n  `;\r\n  return (\r\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\r\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\r\n    <>\r\n      <ClassTitle>\r\n        <h3\r\n          className={\r\n            state === 1\r\n              ? \"hibiscus\"\r\n              : state === 2\r\n              ? \"sunflower\"\r\n              : state === 3\r\n              ? \"rose\"\r\n              : state === -1\r\n              ? \"discharge\"\r\n              : state === -2\r\n              ? \"graduation\"\r\n              : \"none\"\r\n          }\r\n        >\r\n          {state === 1\r\n            ? \"무궁화반\"\r\n            : state === 2\r\n            ? \"해바라기반\"\r\n            : state === 3\r\n            ? \"장미반\"\r\n            : state === -1\r\n            ? \"퇴소\"\r\n            : state === -2\r\n            ? \"졸업\"\r\n            : \"지정된 반이 없습니다.\"}\r\n        </h3>\r\n      </ClassTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyClass;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport { postNotice } from \"../../api/notice/notice_api\";\r\nimport { FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { postIndNotice } from \"../../api/individualNotice/indivNoticeApi\";\r\nimport MyClass from \"../user/MyClass\";\r\n\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\nconst IndWriteComponent = () => {\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  // 현재 kid 값 체크\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const iclass = parseInt(serchParams.get(\"iclass\"));\r\n  const kidNm = serchParams.get(\"kidNm\");\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const navigate = useNavigate();\r\n\r\n  const formRef = useRef(); // Form 컴포넌트에 대한 ref 생성\r\n\r\n  const handleGreenButtonClick = () => {\r\n    formRef.current.submit(); // Form의 submit 메서드 호출\r\n  };\r\n\r\n  const onChange = e => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].filter(file => !!file.status);\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    navigate(`/ind?year=2024&page=1&iclass=0`);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: () => handleCancelOk(),\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    console.log(\"fileList\", fileList);\r\n    console.log(\"fullNoticeFix\", fullNoticeFix); // 확인용 로그\r\n\r\n    const formData = new FormData();\r\n\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          ikid: ikid,\r\n          noticeTitle: data.noticeTitle,\r\n          noticeContents: data.noticeContents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postIndNotice({\r\n      product: formData,\r\n      successFn: handleSuccess,\r\n      failFn: handleFail,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancelOk = res => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /notice 페이지로 이동\r\n    navigate(`/ind?year=2024&page=1&iclass=0`);\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsModalVisible(true);\r\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\r\n  };\r\n\r\n  const handleFail = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"알림장 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"알림장 업로드 오류:\", error);\r\n    Modal.error({\r\n      title: \"알림장 업로드 중 오류 발생\",\r\n      content: error,\r\n    });\r\n  };\r\n\r\n  console.log(iclass);\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>알림장</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 600,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"1rem\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"2rem\",\r\n          }}\r\n        >\r\n          <MyClass state={iclass} />\r\n          <h4 style={{ color: \"#555\" }}>{kidNm}</h4>\r\n        </div>\r\n        <Form ref={formRef} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"noticeTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"noticeContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              // maxCount={3}\r\n              multiple={true}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드</Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n        <div\r\n          style={{\r\n            marginTop: 35,\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <GreenBtn onClick={handleGreenButtonClick}>등록</GreenBtn>\r\n          <PinkBtn\r\n            onClick={handleCancelConfirmation}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            취소\r\n          </PinkBtn>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/ind?year=2024&page=1&iclass=0\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndWriteComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport IndWriteComponent from \"../../components/individualNotice/IndWriteComponent\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst IndivNotiWrite = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin || isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"관리자 전용 페이지\");\r\n      setSubTitle(\"관리자만 접근 가능합니다.\");\r\n    } else {\r\n      // 다른 상황에 대한 처리가 필요한 경우 여기에 추가\r\n      // 예를 들어, 기본 오류 메시지 설정 등\r\n      // setTitle(\"에러\");\r\n      // setSubTitle(\"리스트를 불러오는 중 오류가 발생했습니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && isParentLogin) {\r\n      navigate(\"/\"); // 메인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <IndWriteComponent isLogin={isLogin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndivNotiWrite;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","_ref6","delete","getIndDetail","_ref7","getDetail","getList","postNotice","deleteNotice","_ref4","putNotice","_ref5","put","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_Fragment","className","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","IndWriteComponent","serchParams","setSearchParams","useSearchParams","parseInt","kidNm","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","fullNoticeFix","setFullNoticeFix","formRef","useRef","handleCancelOk","handleSuccess","handleFail","errorMessage","content","handleError","log","PageTitle","style","height","padding","borderTop","borderBottom","background","marginTop","alignItems","marginBottom","MyClass","color","ref","onFinish","formData","FormData","dto","Blob","JSON","stringify","noticeTitle","noticeContents","append","forEach","file","originFileObj","Item","name","rules","required","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","filter","customRequest","onSuccess","multiple","Button","icon","UploadOutlined","GreenBtn","handleGreenButtonClick","current","submit","handleCancelConfirmation","confirm","okText","cancelText","onCancel","marginLeft","Link","handleCancel","cancelButtonProps","IndivNotiWrite","setIsOpen","setTitle","setSubTitle","useEffect","ModalOneBtn","AlbumWrap","props","grayLight","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","_templateObject13","_templateObject14"],"sourceRoot":""}