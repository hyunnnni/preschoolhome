{"version":3,"file":"static/js/750.23f41290.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/LightBox.js","styles/ui/comment.js","components/album/DetailsAlbum.js","pages/album/AlbumDetails.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(console.log(error));\r\n    // errorFn(\r\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    // );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path /comment\r\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}/comment`, obj);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // &iteacher=${iteacher}&iparent=${iparent}\r\n    const iwriter = () => {\r\n      if (iteacher) {\r\n        return `&iteacher=${iteacher}`;\r\n      }\r\n      if (iparent) {\r\n        return `&iparent=${iparent}`;\r\n      }\r\n    };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst LightBox = ({ imgSrc, open, closeLightbox }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        zIndex: 1000,\r\n      }}\r\n      onClick={closeLightbox}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          objectFit: \"contain\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={closeLightbox}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: 1010,\r\n        }}\r\n      >\r\n        닫기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LightBox;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, mq } from \"../basic\";\r\n\r\nexport const CommentWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border-top: 1px solid ${colors.grayBar};\r\n  padding: 2rem 5rem;\r\n  ${mq.mobileBig} {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentView = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 50vh;\r\n  overflow-y: auto;\r\n`;\r\nexport const CommentBox = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  max-width: 50rem;\r\n  padding: 1rem;\r\n  ${boxStyle}\r\n  background: ${colors.greenLight2};\r\n  margin-bottom: 2rem;\r\n  &.right {\r\n    background: ${colors.orangeLight};\r\n    margin-left: auto;\r\n    text-align: right;\r\n    margin-bottom: 5rem;\r\n  }\r\n  &:not(.right) {\r\n    margin-right: auto;\r\n  }\r\n  ul {\r\n    margin-top: 1rem;\r\n    li {\r\n      display: inline-block;\r\n      font-size: 1.4rem;\r\n      color: ${colors.grayDeep};\r\n\r\n      &.date {\r\n        font-size: 1.3rem;\r\n        color: #ccc;\r\n        margin-left: 0.5rem;\r\n        :before {\r\n          content: \"|\";\r\n          vertical-align: 7%;\r\n          margin-right: 0.5rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .delete {\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    color: ${colors.grayDeep};\r\n    position: absolute;\r\n    right: 0;\r\n    top: calc(100% + 1rem);\r\n    transition: 0.2s;\r\n    padding-left: 1rem;\r\n    :hover {\r\n      font-weight: 600;\r\n      color: ${colors.orangeDeep};\r\n    }\r\n  }\r\n`;\r\nexport const CommentWrite = styled.div`\r\n  position: relative;\r\n  button {\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 1rem;\r\n  }\r\n  textarea {\r\n    padding-right: 12rem;\r\n    font-size: 1.4rem !important;\r\n    min-height: 6rem;\r\n    max-height: 6rem;\r\n  }\r\n`;\r\n","import { Form, Modal } from \"antd\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-cube\";\r\nimport \"swiper/css/pagination\";\r\nimport { EffectCoverflow, Keyboard, Pagination } from \"swiper/modules\";\r\nimport LightBox from \"./LightBox\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  AlbumTitle,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  ContentWrap,\r\n  DetailsText,\r\n  Footer,\r\n  MainContent,\r\n  TitleWrap,\r\n  SwiperWrap,\r\n} from \"../../styles/album/album\";\r\nimport {\r\n  BlueBtn,\r\n  GreenBtn,\r\n  PinkBtn,\r\n  BtnWrap,\r\n  OrangeBtn,\r\n} from \"../../styles/ui/buttons\";\r\nimport Comment from \"../common/Comment\";\r\nimport {\r\n  deleteAlbum,\r\n  deleteAlbumComment,\r\n  getAlbum,\r\n  postAlbumComment,\r\n} from \"../../api/album/album_api\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport ModalOneBtn from \"../ui/ModalOneBtn\";\r\nimport ModalTwoBtn from \"../ui/ModalTwoBtn\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport {\r\n  CommentBox,\r\n  CommentView,\r\n  CommentWrap,\r\n  CommentWrite,\r\n} from \"../../styles/ui/comment\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nconst path = `${IMG_URL}/pic/album`;\r\n\r\nconst host = `${SERVER_URL}/album`;\r\n// import required modules\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst DetailsAlbum = ({ pno, isLogin, loginState }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\r\n    useState(false);\r\n\r\n  // 댓글관련\r\n  const [commentState, setCommentState] = useState(false);\r\n  const [commentNum, setCommentNum] = useState(null);\r\n  const iwriter = loginState.iteacher || loginState.iparent;\r\n  const [isDelComment, setIsDelComment] = useState(false); // 댓글삭제 모달\r\n\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n  // 글 삭제\r\n  const [delOpen, setDelOpen] = useState(false);\r\n\r\n  // lightbox\r\n  const [lightbox, setLightbox] = useState({ open: false, imgSrc: \"\" });\r\n  const openLightbox = imgSrc => setLightbox({ open: true, imgSrc: imgSrc });\r\n  const closeLightbox = () => setLightbox({ open: false, imgSrc: \"\" });\r\n\r\n  // 컴포넌트 마운트 시 데이터 불러오기\r\n  // Lightbox 상태에 따라 Swiper 높이 조절\r\n  // console.log(\"pno\", pno);\r\n  useEffect(() => {\r\n    getAlbum({\r\n      pno: pno,\r\n      successFn: data => {\r\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\r\n        setIsLoading(false); // 로딩 상태 업데이트\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setIsLoading(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setIsLoading(false);\r\n      },\r\n    });\r\n    const swiperElement = document.querySelector(\".swiper\");\r\n    if (lightbox.open) {\r\n      swiperElement.style.height = \"55vh\";\r\n    } else {\r\n      swiperElement.style.height = \"100%\";\r\n    }\r\n  }, [pno, lightbox.open, commentState]); // pno 값이 변경될 때마다 getAlbum 함수를 호출\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n  const handleDelOk = () => {\r\n    // setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\r\n\r\n    deleteAlbum({\r\n      ialbum: pno,\r\n      successFn: res => {\r\n        // 삭제 성공 시 처리\r\n        // console.log(\"Album deleted:\", res);\r\n        setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\r\n\r\n        // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\r\n        setTimeout(() => {\r\n          setIsDeleteSuccessModalOpen(false);\r\n          navigate(\"/album\");\r\n        }, 1500);\r\n      },\r\n      failFn: error => {\r\n        // 삭제 실패 시 처리\r\n        Modal.error({\r\n          title: \"앨범 삭제 실패\",\r\n          content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n      errorFn: error => {\r\n        console.error(\"Error deleting album:\", error);\r\n        Modal.error({\r\n          title: \"오류 발생\",\r\n          content:\r\n            \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 모달창 취소\r\n  const handleCancel = () => {\r\n    setDelOpen(false);\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteSuccessOk = () => {\r\n    setIsDeleteSuccessModalOpen(false);\r\n  };\r\n\r\n  // 댓글등록\r\n  const [form] = Form.useForm();\r\n  const handleWriteComment = value => {\r\n    const obj = {\r\n      ialbum: pno,\r\n      albumComment: value.albumComment,\r\n    };\r\n    console.log(obj, \"댓글등록\");\r\n    postAlbumComment({\r\n      obj,\r\n      successFn,\r\n      errorFn,\r\n    });\r\n    form.resetFields();\r\n  };\r\n  // 댓글삭제\r\n  const handleDeleteComment = () => {\r\n    if (loginState.iteacher) {\r\n      deleteAlbumComment({\r\n        ialbumComment: commentNum,\r\n        ialbum: pno,\r\n        iteacher: loginState.iteacher,\r\n        successFn,\r\n        errorFn,\r\n      });\r\n    } else {\r\n      deleteAlbumComment({\r\n        ialbumComment: commentNum,\r\n        ialbum: pno,\r\n        iparent: loginState.iparent,\r\n        successFn,\r\n        errorFn,\r\n      });\r\n    }\r\n    setIsDelComment(false);\r\n  };\r\n\r\n  const successFn = res => {\r\n    setCommentState(!commentState);\r\n    setCommentNum(null);\r\n    console.log(res);\r\n  };\r\n\r\n  const errorFn = res => {\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <AlbumWrap>\r\n      <AlbumTopBar>\r\n        <PageTitle>활동앨범</PageTitle>\r\n      </AlbumTopBar>\r\n      <ContentWrap>\r\n        <TitleWrap>\r\n          <h3>{albumData.albumTitle}</h3>\r\n          <p>{albumData.createdAt}</p>\r\n        </TitleWrap>\r\n        <MainContent>\r\n          <SwiperWrap>\r\n            <Swiper\r\n              loading=\"swiper-lazy-preloader swiper-lazy-preloader-white\"\r\n              height={200}\r\n              effect={\"coverflow\"}\r\n              grabCursor={true}\r\n              centeredSlides={true}\r\n              slidesPerView={\"auto\"}\r\n              coverflowEffect={{\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n              }}\r\n              pagination={true}\r\n              keyboard={{ enabled: true }} // 키보드 제어 활성화\r\n              modules={[EffectCoverflow, Pagination, Keyboard]} // Keyboard 모듈 추가\r\n              className=\"mySwiper\"\r\n              // style={{ transform: `translate3d(0px, 0px, 0px)` }} //\r\n            >\r\n              {albumData &&\r\n                albumData.albumPic &&\r\n                albumData.albumPic.map((item, index) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img\r\n                      src={`${path}/${pno}/${item}`}\r\n                      onClick={() => openLightbox(`${path}/${pno}/${item}`)}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              <LightBox\r\n                imgSrc={lightbox.imgSrc}\r\n                open={lightbox.open}\r\n                closeLightbox={closeLightbox}\r\n              />\r\n            </Swiper>\r\n          </SwiperWrap>\r\n          <DetailsText>\r\n            <pre>{albumData.albumContents}</pre>\r\n          </DetailsText>\r\n          {/* 댓글창 */}\r\n          <CommentWrap>\r\n            <CommentView>\r\n              {Array.isArray(albumData.albumComments) &&\r\n                albumData.albumComments.map((item, index) => (\r\n                  <CommentBox\r\n                    key={item.ialbumComment}\r\n                    className={item.writerIuser == iwriter ? \"right\" : null}\r\n                  >\r\n                    <pre className=\"text\">{item.albumComment}</pre>\r\n                    <ul>\r\n                      <li className=\"name\">{item.writerName}</li>\r\n                      <li className=\"date\">{item.createdAt}</li>\r\n                    </ul>\r\n                    {item.writerIuser == iwriter ? (\r\n                      <span\r\n                        className=\"delete\"\r\n                        onClick={() => {\r\n                          setCommentNum(item.ialbumComment);\r\n                          setIsDelComment(true);\r\n                        }}\r\n                      >\r\n                        댓글삭제\r\n                      </span>\r\n                    ) : null}\r\n                  </CommentBox>\r\n                ))}\r\n            </CommentView>\r\n            <CommentWrite>\r\n              <Form form={form} onFinish={handleWriteComment}>\r\n                <Form.Item name=\"albumComment\">\r\n                  <TextArea required placeholder=\"댓글내용을 입력해주세요.\" />\r\n                </Form.Item>\r\n                <OrangeBtn>등록</OrangeBtn>\r\n              </Form>\r\n            </CommentWrite>\r\n          </CommentWrap>\r\n        </MainContent>\r\n        {/* 안내창 */}\r\n        <ModalOneBtn\r\n          isOpen={isOpen}\r\n          handleOk={handleOk}\r\n          title={title}\r\n          subTitle={subTitle}\r\n        />\r\n        {/* 글삭제 */}\r\n        <ModalTwoBtn\r\n          isOpen={isDeleteModalOpen}\r\n          handleOk={handleDelOk}\r\n          handleCancel={() => setIsDeleteModalOpen(false)}\r\n          title={\"댓글 삭제\"}\r\n          subTitle={\r\n            \"삭제된 댓글은 복구할 수 없습니다. \\n정말 삭제하시겠습니까?\"\r\n          }\r\n        />\r\n        {/* 댓글삭제 */}\r\n        <ModalTwoBtn\r\n          isOpen={isDelComment}\r\n          handleOk={() => handleDeleteComment()}\r\n          handleCancel={() => setIsDelComment(false)}\r\n          title={\"댓글 삭제\"}\r\n          subTitle={\r\n            \"삭제된 댓글은 복구할 수 없습니다. \\n정말 삭제하시겠습니까?\"\r\n          }\r\n        />\r\n        {/* 삭제 성공 모달 */}\r\n        {isDeleteSuccessModalOpen && (\r\n          <ModalOneBtn\r\n            isOpen={isDeleteSuccessModalOpen}\r\n            handleOk={() => setIsDeleteSuccessModalOpen(false)}\r\n            title=\"삭제 완료\"\r\n            subTitle=\"앨범이 성공적으로 삭제되었습니다.\"\r\n          />\r\n        )}\r\n      </ContentWrap>\r\n      <Footer>\r\n        <BtnWrap style={{ justifyContent: \"flex-end\" }}>\r\n          <GreenBtn\r\n            onClick={() => {\r\n              navigate(\"/album\");\r\n            }}\r\n          >\r\n            목록보기\r\n          </GreenBtn>\r\n\r\n          {isLogin ? (\r\n            <>\r\n              <BlueBtn\r\n                onClick={() => {\r\n                  navigate(`${host}/modify/${pno}`);\r\n                }}\r\n              >\r\n                수정\r\n              </BlueBtn>\r\n              <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n            </>\r\n          ) : null}\r\n        </BtnWrap>\r\n      </Footer>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default DetailsAlbum;\r\n\r\n{\r\n  /* 삭제 모달 */\r\n}\r\n// <Modal\r\n//   title=\"정말 삭제할까요?\"\r\n//   open={isDeleteModalOpen}\r\n//   onOk={handleDeleteOk}\r\n//   onCancel={handleDeleteCancel}\r\n//   okText=\"확인\"\r\n//   cancelText=\"취소\"\r\n// >\r\n//   <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n// </Modal>\r\n\r\n{\r\n  /* 삭제 성공 모달 */\r\n}\r\n// <Modal\r\n//   title=\"삭제 완료\"\r\n//   open={isDeleteSuccessModalOpen}\r\n//   onOk={handleDeleteSuccessOk}\r\n//   cancelButtonProps={{ style: { display: \"none\" } }}\r\n//   okText=\"확인\"\r\n// >\r\n//   <p>삭제가 완료되었습니다.</p>\r\n// </Modal>\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport DetailsAlbum from \"../../components/album/DetailsAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst AlbumDetails = () => {\r\n  let { pno } = useParams();\r\n  const { isLogin, loginState } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 로그인 상태에서 iteacher 값을 확인합니다.\r\n  return <DetailsAlbum pno={pno} isLogin={isLogin} loginState={loginState} />;\r\n};\r\nexport default AlbumDetails;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getlistAll","page","_ref2","getEditAlbum","_ref3","putAlbum","product","_ref4","header","headers","put","console","log","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref6","delete","postAlbumComment","obj","_ref7","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref8","iwriter","imgSrc","open","closeLightbox","_jsxs","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","onClick","children","_jsx","src","maxWidth","maxHeight","objectFit","CommentWrap","styled","div","_templateObject","_taggedTemplateLiteral","colors","grayBar","mq","mobileBig","CommentView","_templateObject2","CommentBox","_templateObject3","boxStyle","greenLight2","orangeLight","grayDeep","orangeDeep","CommentWrite","_templateObject4","IMG_URL","host","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","isLogin","loginState","navigate","useNavigate","albumData","setAlbumData","useState","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","commentState","setCommentState","commentNum","setCommentNum","isDelComment","setIsDelComment","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","delOpen","setDelOpen","lightbox","setLightbox","useEffect","message","swiperElement","document","querySelector","height","form","Form","useForm","AlbumWrap","AlbumTopBar","PageTitle","ContentWrap","TitleWrap","MainContent","SwiperWrap","Swiper","loading","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","keyboard","enabled","modules","EffectCoverflow","Pagination","Keyboard","className","map","item","index","SwiperSlide","openLightbox","LightBox","DetailsText","Array","isArray","writerIuser","albumComment","writerName","onFinish","value","resetFields","Item","name","TextArea","required","placeholder","OrangeBtn","ModalOneBtn","handleOk","ModalTwoBtn","handleDelOk","setTimeout","Modal","content","handleCancel","Footer","BtnWrap","GreenBtn","_Fragment","BlueBtn","PinkBtn","showDeleteModal","AlbumDetails","useParams","useCustomLogin","DetailsAlbum","props","width","SearchBar","AlbumList","_templateObject5","black","_templateObject6","fonts","kotraHope","_templateObject7","white","greenDeep","h3","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","FileListStyle","_templateObject13","_templateObject14","WriteWrap","_templateObject15"],"sourceRoot":""}