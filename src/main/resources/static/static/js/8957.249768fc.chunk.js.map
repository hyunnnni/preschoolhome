{"version":3,"file":"static/js/8957.249768fc.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","components/user/MyClass.js","hooks/useCustomLogin.js","styles/individualNotice/ind.js","components/individualNotice/IndListComponent.js","components/individualNotice/IndParentBtnComponent.js","components/individualNotice/IndTeacherBtnComponent.js","pages/individualNotice/IndivNotiList.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\nconst path = `${SERVER_URL}/api/notice`;\n\nexport const getIndParentList = async ({\n  page,\n  year,\n  ikid,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\nexport const getIndTeacherList = async ({\n  page,\n  year,\n  iclass,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 게시글 등록하기\nexport const postIndNotice = async ({\n  product,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.post(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { colors } from \"../../styles/basic\";\n\nconst MyClass = ({ state }) => {\n  const ClassTitle = styled.div`\n    h3 {\n      padding-left: 3.2rem;\n      background-repeat: no-repeat;\n      background-position: left center;\n      background-size: 2.8rem;\n\n      &.hibiscus {\n        background-image: url(${process.env.PUBLIC_URL +\n        \"/images/user/class_icon_hibiscus.svg\"});\n        color: #ff73a1;\n      }\n      &.sunflower {\n        background-image: url(${process.env.PUBLIC_URL +\n        \"/images/user/class_icon_sunflower.svg\"});\n        color: ${colors.orangeDeep};\n      }\n      &.rose {\n        background-image: url(${process.env.PUBLIC_URL +\n        \"/images/user/class_icon_rose.svg\"});\n        color: #f5062c;\n      }\n      &.discharge {\n        background-image: url(${process.env.PUBLIC_URL +\n        \"/images/user/class_icon_bag.svg\"});\n        color: ${colors.grayDeep};\n      }\n      &.graduation {\n        background-image: url(${process.env.PUBLIC_URL +\n        \"/images/user/class_icon_graduation.svg\"});\n        color: ${colors.black};\n      }\n      &.none {\n        padding-left: 0;\n      }\n    }\n  `;\n  return (\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\n    <>\n      <ClassTitle>\n        <h3\n          className={\n            state === 1\n              ? \"hibiscus\"\n              : state === 2\n              ? \"sunflower\"\n              : state === 3\n              ? \"rose\"\n              : state === -1\n              ? \"discharge\"\n              : state === -2\n              ? \"graduation\"\n              : \"none\"\n          }\n        >\n          {state === 1\n            ? \"무궁화반\"\n            : state === 2\n            ? \"해바라기반\"\n            : state === 3\n            ? \"장미반\"\n            : state === -1\n            ? \"퇴소\"\n            : state === -2\n            ? \"졸업\"\n            : \"지정된 반이 없습니다.\"}\n        </h3>\n      </ClassTitle>\n    </>\n  );\n};\n\nexport default MyClass;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  loginPostAsync,\n  logout,\n  postParentLoginAsync,\n} from \"../slices/loginSlice\";\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\nimport { refreshJWT } from \"../util/jwtUtil\";\n\nconst useCustomLogin = () => {\n  // 패스 이동하기\n  const navigate = useNavigate();\n\n  // RTK 상태값 업데이트\n  const dispatch = useDispatch();\n\n  // RTK 상태값 읽기\n  const loginState = useSelector(state => state.loginSlice);\n\n  // 로그인 상태값 파악\n  const isLogin = loginState.teacherUid ? true : false;\n  const isName = loginState.teacherNm ? true : false;\n  const isParentLogin = loginState.iparent ? true : false;\n\n  // 로그인 기능\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\n    // 로그인 상태 업데이트\n    const action = dispatch(\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    // 결과값\n    return action.payload;\n  };\n\n  // 학부모 로그인 기능\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\n    // 로그인 상태 업데이트\n    const action = dispatch(\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    // 결과값\n    return action.payload;\n  };\n\n  // 로그아웃 기능\n  const doLogout = () => {\n    dispatch(logout());\n  };\n\n  // 패스이동 기능\n  const moveToPath = path => {\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\n    // 이전 페이지 기록을 남기지 않는다.\n    navigate({ pathname: path }, { replace: true });\n  };\n\n  // 로그인 페이지로 이동\n  const moveToLogin = () => {\n    console.log(\"페이지 이동\");\n    return <Navigate replace to=\"/login\" />;\n  };\n\n  // 액세스 토큰 리프레시 및 업데이트\n  const refreshAccessToken = async () => {\n    const memberInfo = getCookie(\"member\");\n    const { accessToken, refreshToken } = memberInfo;\n\n    try {\n      const newTokens = await refreshJWT(accessToken, refreshToken);\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\n      memberInfo.accessToken = newTokens.accessToken;\n      setCookie(\"member\", memberInfo, 1);\n      return newTokens.accessToken;\n    } catch (error) {\n      // 리프레시 실패 처리\n      console.error(\"토큰 리프레시 실패:\", error);\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\n    }\n  };\n\n  return {\n    loginState,\n    isLogin,\n    isName,\n    isParentLogin,\n    doLogin,\n    doLogout,\n    doParentLogin,\n    moveToPath,\n    moveToLogin,\n    refreshAccessToken,\n  };\n};\n\nexport default useCustomLogin;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, ellipsis } from \"../basic\";\n\nexport const IndWrap = styled.div`\n  position: relative;\n`;\n\nexport const IndListWrap = styled.div`\n  min-height: 60vh;\n`;\n\nexport const IndList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2%;\n`;\n\nexport const IndListBox = styled.div`\n  width: 32%;\n  margin-bottom: 1rem;\n  ${boxStyle}\n  a {\n    display: block;\n    padding: 1.5rem 2rem;\n  }\n`;\n\nexport const IndTop = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  color: #555;\n`;\nexport const IndCon = styled.div`\n  margin: 1.5rem 0;\n  min-height: 3rem;\n  p {\n    font-size: 1.5rem;\n    font-weight: 500;\n    margin-bottom: 0.5rem;\n  }\n  span {\n    display: block;\n    color: ${colors.grayDeep};\n    ${ellipsis.line2}\n    word-break: break-all;\n  }\n`;\nexport const IndBot = styled.div`\n  display: flex;\n  justify-content: space-between;\n  .ind-date {\n    color: ${colors.grayDeep};\n    padding-left: 2.5rem;\n    background: url(${process.env.PUBLIC_URL +\n      \"/images/common/notice/clock.svg\"})\n      no-repeat top left/ 1.8rem;\n  }\n`;\n","import React from \"react\";\nimport MyClass from \"../user/MyClass\";\nimport {\n  IndBot,\n  IndCon,\n  IndList,\n  IndListBox,\n  IndListWrap,\n  IndTop,\n} from \"../../styles/individualNotice/ind\";\nimport { Link } from \"react-router-dom\";\n\nconst IndListComponent = ({ listData }) => {\n  return (\n    <IndListWrap>\n      <IndList>\n        {Array.isArray(listData) && listData[0].inotice === 0 ? (\n          <div\n            style={{ textAlign: \"center\", width: \"100%\", marginTop: \"5rem\" }}\n          >\n            알림장 내용이 없습니다.\n          </div>\n        ) : (\n          Array.isArray(listData) &&\n          listData.map(item => (\n            <IndListBox key={item.inotice}>\n              <Link to={`/ind/details/${item.inotice}`}>\n                <IndTop>\n                  <MyClass state={item.iclass} /> <h4>{item.kidNm}</h4>\n                </IndTop>\n                <IndCon>\n                  <p>{item.noticeTitle}</p>\n                  <span>{item.noticeContents}</span>\n                </IndCon>\n                <IndBot>\n                  <div className=\"ind-date\">{item.createdAt.split(\" \")[0]}</div>\n                  <div className=\"ind-file\">\n                    {item.picCheck === 0 ? (\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/images/common/file_icon.svg\"\n                        }\n                        alt=\"file\"\n                      />\n                    ) : null}\n                  </div>\n                </IndBot>\n              </Link>\n            </IndListBox>\n          ))\n        )}\n      </IndList>\n    </IndListWrap>\n  );\n};\n\nexport default IndListComponent;\n","import { DownOutlined } from \"@ant-design/icons\";\nimport { Button, Dropdown } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst IndParentBtnComponent = ({ indList, ikidList, year, ikid, page }) => {\n  // 년도 선택\n  const currentYear = new Date().getFullYear();\n  const startYear = 2020;\n  const yearArr = [];\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\n    yearArr.push({\n      key: yearNum.toString(),\n      label: (\n        <Link to={`/ind?year=${yearNum}&page=1&ikid=${ikid}`}>{yearNum}</Link>\n      ),\n    });\n  }\n  // 아이 선택\n  const items =\n    Array.isArray(ikidList) &&\n    ikidList.map(item => {\n      return {\n        key: item.ikid.toString(),\n        label: (\n          <Link to={`/ind?year=${year}&page=1&ikid=${item.ikid}`}>\n            {item.kidNm}\n          </Link>\n        ),\n      };\n    });\n\n  return (\n    <>\n      <Dropdown menu={{ items: yearArr }}>\n        <Button>\n          {year}\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n      <Dropdown menu={{ items }}>\n        <Button>\n          {indList[0].kidNm}\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default IndParentBtnComponent;\n","import { DownOutlined } from \"@ant-design/icons\";\nimport { Button, Dropdown } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst IndTeacherBtnComponent = ({ iclass, year, ikid, page }) => {\n  // 년도 선택\n  const currentYear = new Date().getFullYear();\n  const startYear = 2020;\n  const yearArr = [];\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\n    yearArr.push({\n      key: yearNum.toString(),\n      label: (\n        <Link to={`/ind?year=${yearNum}&page=1&iclass=${iclass}`}>\n          {yearNum}\n        </Link>\n      ),\n    });\n  }\n\n  // 반 선택\n  const classArr = [\n    { iclass: 0, classNm: \"반 전체\" },\n    { iclass: 1, classNm: \"무궁화반\" },\n    { iclass: 2, classNm: \"해바라기반\" },\n    { iclass: 3, classNm: \"장미반\" },\n  ];\n\n  const items =\n    Array.isArray(classArr) &&\n    classArr.map(item => {\n      return {\n        key: item.iclass.toString(),\n        label: (\n          <Link to={`/ind?year=${year}&page=1&iclass=${item.iclass}`}>\n            {item.classNm}\n          </Link>\n        ),\n      };\n    });\n\n  return (\n    <>\n      <Dropdown menu={{ items: yearArr }}>\n        <Button>\n          {year}\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n      <Dropdown menu={{ items }}>\n        <Button>\n          {iclass === \"0\"\n            ? \"반 전체\"\n            : iclass === \"1\"\n            ? \"무궁화반\"\n            : iclass === \"2\"\n            ? \"해바라기반\"\n            : iclass === \"3\"\n            ? \"장미반\"\n            : null}\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default IndTeacherBtnComponent;\n","import { Button, Dropdown, Pagination, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\nimport { PageTitle } from \"../../styles/basic\";\nimport GuardianListComponent from \"../../components/adminpage/GuardianListComponent\";\nimport { IndWrap } from \"../../styles/individualNotice/ind\";\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\nimport {\n  getIndList,\n  getIndParentList,\n  getIndTeacherList,\n} from \"../../api/individualNotice/indivNoticeApi\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\n\nconst initData = [\n  {\n    inotice: 0,\n    noticeTitle: \"\",\n    noticeContents: \"\",\n    kidNm: \"\",\n    iclass: 0,\n    picCheck: 0,\n    createdAt: \"\",\n  },\n];\n\nconst IndivNotiList = () => {\n  const navigate = useNavigate();\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [indList, setIndList] = useState(initData);\n  const [count, setCount] = useState(0);\n\n  // 현재 출력 년도, kid 값 params에서 체크\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n  const page = serchParams.get(\"page\");\n  const iclass = serchParams.get(\"iclass\");\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const { loginState, isLogin, isParentLogin } = useCustomLogin();\n  const ikidList = loginState.kidList;\n\n  // ikid 값만 추출하여 파라미터값과 비교\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\n\n  // 페이지네이션\n  const handleChange = value => {\n    console.log(value);\n  };\n  const handlePageChange = (page, pageSize) => {\n    if (isLogin) {\n      navigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`);\n    } else {\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\n    }\n  };\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  // 데이터 화면출력, 로그인체크\n  useEffect(() => {\n    if (isParentLogin) {\n      // 학부모 로그인\n      if (ikid === \"0\") {\n        // 연결된 아이가 없을경우\n        setTitle(\"연결 오류\");\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n      getIndParentList({ page, year, ikid, errorFn, successFn });\n    } else if (isLogin) {\n      // 선생님 로그인\n      getIndTeacherList({ page, year, iclass, errorFn, successFn });\n    } else {\n      // 로그인 안했을때\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n      setIsNavigate(-1);\n    }\n  }, [year, ikid, iclass, page]);\n\n  // 데이터연동 결과\n  const successFn = res => {\n    setIndList(res.list);\n    setCount(res.noticeCnt);\n  };\n  const errorFn = res => {\n    console.log(res);\n\n    setIsOpen(true);\n    setTitle(\"데이터 없음\");\n    setSubTitle(res);\n    setIsNavigate(-1);\n  };\n\n  return (\n    <IndWrap>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <TitleWrap>\n        <PageTitle>알림장</PageTitle>\n        <FlexBox>\n          {/* 권한별 서치버튼 */}\n          {isLogin ? (\n            <IndTeacherBtnComponent\n              iclass={iclass}\n              indList={indList}\n              year={year}\n              page={page}\n            />\n          ) : (\n            <IndParentBtnComponent\n              ikidList={ikidList}\n              indList={indList}\n              ikid={ikid}\n              year={year}\n              page={page}\n            />\n          )}\n        </FlexBox>\n      </TitleWrap>\n      <IndListComponent listData={indList} />\n      <PageNum>\n        <Pagination\n          defaultCurrent={1}\n          total={count}\n          pageSize={12}\n          onChange={handlePageChange}\n        />\n      </PageNum>\n    </IndWrap>\n  );\n};\n\nexport default IndivNotiList;\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_jsx","_Fragment","children","className","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","console","log","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","IndWrap","IndListWrap","_templateObject2","IndList","_templateObject3","IndListBox","_templateObject4","boxStyle","IndTop","_templateObject5","IndCon","_templateObject6","ellipsis","line2","IndBot","_templateObject7","listData","Array","isArray","inotice","style","textAlign","width","marginTop","map","item","_jsxs","Link","MyClass","kidNm","noticeTitle","noticeContents","createdAt","split","picCheck","src","alt","indList","ikidList","currentYear","Date","getFullYear","yearArr","yearNum","push","key","label","items","Dropdown","menu","Button","DownOutlined","classArr","classNm","initData","IndivNotiList","serchParams","setSearchParams","useSearchParams","setIndList","useState","count","setCount","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","list","noticeCnt","ModalOneBtn","handleOk","TitleWrap","PageTitle","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","IndListComponent","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}