{"version":3,"file":"static/js/7389.655d7ef0.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","pages/notice/NoticeModify.js","styles/ui/buttons.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\n// 유치원소식 불러오기\r\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 리스트 불러오기\r\nexport const getList = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 등록하기\r\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}`, product);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 삭제하기\r\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn();\r\n    } else {\r\n      failFn(\"삭제 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 유치원소식 게시글 수정하기\r\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, data, header);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"수정 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { UploadOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Upload, Modal } from \"antd\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getDetail, putNotice } from \"../../api/notice/notice_api\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\n\r\nconst path = `${SERVER_URL}/api/full`;\r\n\r\nconst NoticeModify = () => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [fullNoticeFix, setFullNoticeFix] = useState(false); // 새로운 상태 추가\r\n  const navigate = useNavigate();\r\n  const { tno } = useParams();\r\n\r\n  const [initialData, setInitialData] = useState({\r\n    fullTitle: \"\",\r\n    fullContents: \"\",\r\n    fullNoticeFix: \"\",\r\n    pics: [],\r\n  });\r\n\r\n  const onChange = e => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n    setFullNoticeFix(e.target.checked);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList];\r\n\r\n    fileList = fileList.map(file => {\r\n      if (file.response) {\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const handleImageRemove = file => {\r\n    const newFileList = fileList.filter(item => item.uid !== file.uid);\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  const customRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess();\r\n    }, 1000);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: handleCancelOk,\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    try {\r\n      const formData = new FormData();\r\n      const dto = new Blob(\r\n        [\r\n          JSON.stringify({\r\n            iteacher: 1,\r\n            fullTitle: data.fullTitle,\r\n            fullContents: data.fullContents,\r\n            fullNoticeFix: data.fullNoticeFix,\r\n          }),\r\n        ],\r\n        { type: \"application/json\" },\r\n      );\r\n      formData.append(\"dto\", dto);\r\n      fileList.forEach(file => {\r\n        formData.append(\"pics\", file.originFileObj);\r\n      });\r\n      putNotice({\r\n        product: formData,\r\n        successFn: handleSuccess,\r\n        failFn: handleFail,\r\n        errorFn: handleError,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"수정 에러:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSuccess = data => {\r\n    setIsModalVisible(true);\r\n    console.log(\"게시글 수정 성공:\", data);\r\n  };\r\n\r\n  const handleFail = error => {\r\n    console.error(\"게시글 수정 실패:\", error);\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.error(\"게시글 수정 에러:\", error);\r\n  };\r\n\r\n  const handleCancelOk = () => {\r\n    navigate(\"/notice\");\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getDetail({\r\n          tno,\r\n          successFn: data => {\r\n            console.log(\"데이터 가져오기 성공:\", data);\r\n            setInitialData({\r\n              fullTitle: data.fullTitle,\r\n              fullContents: data.fullContents,\r\n              pics: data.pics,\r\n              fullNoticeFix: data.fullNoticeFix,\r\n            });\r\n            form.setFieldsValue({\r\n              fullTitle: data.fullTitle,\r\n              fullContents: data.fullContents,\r\n              fullNoticeFix: data.fullNoticeFix,\r\n            });\r\n          },\r\n          failFn: error => {\r\n            console.error(\"데이터 가져오기 실패:\", error);\r\n          },\r\n          errorFn: error => {\r\n            console.error(\"데이터 가져오기 에러:\", error);\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"데이터 가져오기 중 에러 발생:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tno]);\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle>유치원 소식 수정</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Checkbox\r\n          onChange={onChange}\r\n          style={{ marginBottom: 10 }}\r\n          checked={fullNoticeFix}\r\n        >\r\n          상단고정\r\n        </Checkbox>\r\n\r\n        <Form form={form} onFinish={onFinish} initialValues={initialData}>\r\n          <Form.Item\r\n            name=\"fullTitle\"\r\n            rules={[{ required: true, message: \"제목을 입력해주세요!\" }]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"fullContents\"\r\n            rules={[{ required: true, message: \"내용을 입력해주세요!\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Upload\r\n            action={`${path}`}\r\n            listType=\"picture\"\r\n            fileList={fileList}\r\n            onChange={handleChange}\r\n            customRequest={customRequest}\r\n            className=\"upload-list-inline\"\r\n            maxCount={3}\r\n          >\r\n            <Button icon={<UploadOutlined />}>업로드</Button>\r\n          </Upload>\r\n\r\n          {initialData.pics.length > 0 && (\r\n            <div style={{ marginTop: 20, display: \"flex\" }}>\r\n              {initialData.pics.map((pic, index) => (\r\n                <div key={index} style={{ marginBottom: 10 }}>\r\n                  <img\r\n                    src={`${SERVER_URL}/pic/fullnotice/${tno}/${pic}`}\r\n                    alt={`file-${index}`}\r\n                    style={{ width: 100, height: 100, marginRight: 10 }}\r\n                  />\r\n                  <Button\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => handleImageRemove(index)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: 35,\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <GreenBtn htmlType=\"submit\" onClick={onFinish}>\r\n          수정\r\n        </GreenBtn>\r\n        <PinkBtn onClick={handleCancelConfirmation} style={{ marginLeft: 20 }}>\r\n          취소\r\n        </PinkBtn>\r\n      </div>\r\n\r\n      <Link to=\"/notice\">\r\n        <Modal\r\n          title=\"수정 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 수정되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeModify;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","NoticeModify","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","fullNoticeFix","setFullNoticeFix","navigate","useNavigate","useParams","initialData","setInitialData","fullTitle","fullContents","pics","onFinish","formData","FormData","dto","Blob","JSON","stringify","iteacher","type","append","forEach","file","originFileObj","handleSuccess","handleFail","handleError","console","log","handleCancelOk","useEffect","setFieldsValue","fetchData","_jsxs","children","_jsx","PageTitle","style","width","height","padding","borderTop","borderBottom","background","marginTop","Checkbox","onChange","e","target","checked","marginBottom","initialValues","Item","name","rules","required","Input","placeholder","TextArea","Upload","action","listType","info","map","url","customRequest","onSuccess","setTimeout","className","maxCount","Button","icon","UploadOutlined","length","display","pic","index","src","alt","marginRight","DeleteOutlined","onClick","newFileList","filter","item","uid","handleImageRemove","justifyContent","GreenBtn","htmlType","PinkBtn","handleCancelConfirmation","Modal","confirm","title","content","onOk","okText","cancelText","onCancel","marginLeft","Link","to","open","handleOk","handleCancel","cancelButtonProps","defaultBtnStyle","fontSize","fontFamily","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","button","_templateObject2","colors","greenLight","greenDeep","OrangeBtn","_templateObject3","orangeLight","orangeDeep","_templateObject4","pinkLight","pinkDeep","BlueBtn","_templateObject5","blueLight","blueDeep","PurpleBtn","_templateObject6","redLight","redDeep","_templateObject7","purpleLight","purpleDeep","GrayBtn","_templateObject8","grayLight","grayDeep","shadow","MainPinkBtn","_templateObject9","white","_templateObject10","MainBrownBtn","_templateObject11","AllBtn","_templateObject12","_templateObject13","CheckOutlined","props","ref","React","AntdIcon","_extends","CheckOutlinedSvg"],"sourceRoot":""}