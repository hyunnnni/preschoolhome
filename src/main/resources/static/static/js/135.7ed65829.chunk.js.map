{"version":3,"file":"static/js/135.7ed65829.chunk.js","mappings":"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","sources":["api/notice/notice_api.js","components/notice/ListNotice.js","pages/notice/NoticeList.js","styles/album/album.js","styles/notice/notice.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nconst path = `${SERVER_URL}/api/full`;\n\n// 유치원소식 불러오기\nexport const getDetail = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?iFullNotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data\", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 리스트 불러오기\nexport const getList = async ({ page, search, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}/listall?page=${page}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 유치원소식 게시글 등록하기\nexport const postNotice = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 유치원소식 게시글 삭제하기\nexport const deleteNotice = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.delete(`${path}?iteacher=1&ifullNotice=${tno}`);\n    const status = res.status.toString();\n\n    if (status.charAt(0) === \"2\") {\n      successFn();\n    } else {\n      failFn(\"삭제 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 수정하기\nexport const putNotice = async ({ data, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, data, header);\n\n    const status = res.status.toString();\n    // console.log(\"res.data\", res.data);\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 유치원소식 게시글 수정시 정보 조회하기\nexport const editNotice = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ifullNotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import { Flex, Input, List, Pagination } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/notice/notice_api\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { AlbumTopBar, SearchBar } from \"../../styles/album/album\";\nimport { PageNum, UserTopRight } from \"../../styles/adminstyle/guardianlist\";\nimport {\n  ListWrap,\n  NoticeDate,\n  NoticeIcon,\n  NoticeItem,\n  NoticeTitle,\n  NoticeWrap,\n} from \"../../styles/notice/notice\";\n\nconst { Search } = Input;\n\nconst pageSize = 10;\n\nconst NoticeList = () => {\n  const navigate = useNavigate();\n  const [fixedNotices, setFixedNotices] = useState([]);\n  const [normalNotices, setNormalNotices] = useState([]);\n  const [current, setCurrent] = useState(1);\n  const [listData, setListData] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const { isLogin } = useCustomLogin();\n\n  const onChange = page => {\n    setCurrent(page);\n    fetchPageData(page);\n  };\n\n  const handleSearch = value => {\n    // 검색어가 변경될 때 현재 페이지를 1페이지로 초기화하고 fetchPageData를 호출합니다.\n    setCurrent(1);\n    fetchPageData(1, value);\n  };\n\n  const fetchPageData = async (page, search = \"\") => {\n    try {\n      const result = await getList({\n        page,\n        search,\n        successFn: result => {\n          setListData(result.list);\n          setTotalCount(result.noticeCnt);\n          const fixed = result.list.filter(item => item.fullNoticeFix === 1);\n          const normal = result.list.filter(item => item.fullNoticeFix !== 1);\n          setFixedNotices(fixed);\n          setNormalNotices(normal);\n        },\n        failFn: result => {\n          console.error(\"List fetch failed:\", result);\n        },\n        errorFn: result => {\n          console.error(\"Error fetching list:\", result);\n        },\n      });\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPageData(current);\n  }, [current]);\n\n  return (\n    <NoticeWrap>\n      <AlbumTopBar>\n        <PageTitle>유치원 소식</PageTitle>\n        <SearchBar>\n          <UserTopRight>\n            <Search\n              placeholder=\"제목을 입력하세요.\"\n              size={\"large\"}\n              allowClear\n              onSearch={handleSearch}\n            />\n            {isLogin ? (\n              <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\n            ) : null}\n          </UserTopRight>\n        </SearchBar>\n      </AlbumTopBar>\n\n      <ListWrap\n        size=\"large\"\n        itemLayout=\"vertical\"\n        dataSource={listData}\n        renderItem={(item, index) => (\n          <List.Item>\n            <NoticeItem\n              to={`/notice/details/${item.ifullNotice}`}\n              key={item.ifullNotice}\n              className={item.fullNoticeFix === 1 ? \"notice\" : \"\"}\n            >\n              <NoticeIcon>\n                {item.fullNoticeFix === 1 ? (\n                  <img\n                    src=\"/images/common/notice/loudSpeaker.svg\"\n                    alt=\"고정글\"\n                  />\n                ) : (\n                  <span>{item.ifullNotice}</span>\n                )}\n              </NoticeIcon>\n              <NoticeTitle>{item.fullTitle}</NoticeTitle>\n              <NoticeDate>\n                <img src=\"/images/common/notice/clock.svg\" alt=\"시계아이콘\" />\n                {item.createdAt.substring(0, 10)}\n              </NoticeDate>\n            </NoticeItem>\n          </List.Item>\n        )}\n      />\n      <PageNum>\n        <Pagination\n          current={current}\n          onChange={onChange}\n          total={totalCount}\n          pageSize={pageSize}\n        />\n      </PageNum>\n    </NoticeWrap>\n  );\n};\n\nexport default NoticeList;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 추가\nimport ListNotice from \"../../components/notice/ListNotice\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst NoticeList = () => {\n  const navigate = useNavigate();\n  const { isLogin, isParentLogin } = useCustomLogin();\n  const [isOpen, setIsOpen] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n\n  useEffect(() => {\n    if (!isLogin && !isParentLogin) {\n      // 로그인하지 않았을 경우\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n    } else {\n      // 다른 상황에 대한 처리가 필요한 경우 여기에 추가\n      // 예를 들어, 기본 오류 메시지 설정 등\n      // setTitle(\"에러\");\n      // setSubTitle(\"리스트를 불러오는 중 오류가 발생했습니다.\");\n    }\n  }, [isLogin, isParentLogin]);\n\n  const handleOk = () => {\n    setIsOpen(false);\n    if (!isLogin && !isParentLogin) {\n      navigate(\"/login\"); // 로그인 페이지로 이동\n    }\n  };\n\n  return (\n    <>\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <ListNotice isLogin={isLogin} />\n    </>\n  );\n};\n\nexport default NoticeList;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\n\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  /* padding-top: 4rem; */\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n\n  ${mq.mobileBig} {\n    padding-top: 0rem;\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n  .ant-input-affix-wrapper {\n    /* width: 20rem; */\n    height: 4rem;\n  }\n  ${mq.mobileBig} {\n    margin-left: auto;\n\n    .ant-input-affix-wrapper {\n      width: 10rem;\n    }\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const AlbumList = styled.div`\n  gap: 2%;\n  margin: 0px auto;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  z-index: 2;\n  > a {\n    display: block;\n    width: 32%;\n    margin-bottom: 3rem;\n  }\n  .image-grid {\n    text-align: center;\n    p {\n      font-size: 1.8rem;\n      margin: 1rem 0;\n      color: ${colors.black};\n    }\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    background: #000;\n    border-radius: 1rem;\n    width: 100%;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    img {\n      width: 100%;\n      text-align: center;\n    }\n  }\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n  ${mq.mobileBig} {\n    > a {\n      width: 49%;\n      margin-bottom: 1rem;\n    }\n    .image-grid p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 4rem;\n    padding-bottom: 6rem;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 30rem;\n    height: 30rem;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  button {\n    font-family: ${fonts.kotraHope};\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 2rem 1rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n\n  ${mq.mobileBig} {\n    flex-wrap: wrap;\n    h3,\n    p {\n      width: 100%;\n      display: block;\n    }\n    p {\n      margin-top: 1rem;\n      text-align: center;\n    }\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 1.6rem;\n\n  pre {\n    line-height: 1.5;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    //margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  /* background-color: #fafafa;\n  padding-bottom: 2rem; */\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 30rem;\n  overflow-y: auto;\n  .ant-btn {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n\n// 글작성 페이지 css(앨범, 소식 공통)\nexport const WriteWrap = styled.div`\n  position: relative;\n  background: #fafafa;\n  border: 1px solid #f7f7f7;\n  border-top: 2px solid ${colors.greenDeep};\n  border-bottom: 2px solid ${colors.greenDeep};\n  margin: 3rem 0 2rem;\n  padding: 2rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { colors, mq } from \"../basic\";\nimport { List } from \"antd\";\n\nexport const NoticeWrap = styled.div`\n  position: relative;\n  .ant-list-lg .ant-list-item {\n    padding: 0;\n  }\n`;\nexport const ListWrap = styled(List)`\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  background: ${colors.white};\n`;\n\nexport const NoticeItem = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 1.5rem 3rem;\n  &.notice {\n    background: ${colors.greenLight2};\n    border-top: 1px solid rgba(5, 5, 5, 0.06);\n    p {\n      color: ${colors.greenDeep};\n      font-weight: 600;\n    }\n  }\n  img {\n    height: 2.5rem;\n  }\n`;\n\nexport const NoticeIcon = styled.div`\n  position: relative;\n  width: 3rem;\n  ${mq.mobileBig} {\n    display: none;\n  }\n`;\n\nexport const NoticeTitle = styled.p`\n  position: relative;\n  width: calc(100% - 25rem);\n  ${mq.mobileBig} {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const NoticeDate = styled.div`\n  position: relative;\n  text-align: right;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  color: ${colors.grayDeep};\n  img {\n    height: 2rem;\n  }\n`;\n\nexport const NoticeGallery = styled.div`\n  max-width: 60rem;\n  margin: 0 auto;\n  margin-top: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getDetail","async","tno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","getList","page","search","_ref2","response","message","postNotice","product","_ref3","post","deleteNotice","_ref4","delete","putNotice","_ref5","header","headers","put","editNotice","_ref6","Search","Input","NoticeList","navigate","useNavigate","fixedNotices","setFixedNotices","useState","normalNotices","setNormalNotices","current","setCurrent","listData","setListData","totalCount","setTotalCount","isLogin","useCustomLogin","fetchPageData","arguments","length","undefined","result","list","noticeCnt","fixed","filter","item","fullNoticeFix","normal","console","useEffect","_jsxs","NoticeWrap","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","placeholder","size","allowClear","onSearch","value","GreenBtn","onClick","e","ListWrap","itemLayout","dataSource","renderItem","index","List","Item","NoticeItem","to","ifullNotice","className","NoticeIcon","src","alt","NoticeTitle","fullTitle","NoticeDate","createdAt","substring","PageNum","Pagination","onChange","total","pageSize","isParentLogin","isOpen","setIsOpen","title","setTitle","subTitle","setSubTitle","_Fragment","ModalOneBtn","handleOk","ListNotice","AlbumWrap","styled","div","_templateObject","_taggedTemplateLiteral","props","width","height","mq","mobileBig","_templateObject2","_templateObject3","AlbumList","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","FileListStyle","_templateObject14","WriteWrap","_templateObject15","Link","greenLight2","p","NoticeGallery"],"sourceRoot":""}