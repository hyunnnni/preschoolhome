{"version":3,"file":"static/js/612.52cba175.chunk.js","mappings":"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","sources":["components/album/WriteAlbum.js","pages/album/AlbumWrite.js","styles/album/album.js","styles/ui/buttons.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input, Upload, Modal } from \"antd\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { AlbumWrap, FileListStyle, SearchBar } from \"../../styles/album/album\";\r\n\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\nconst WriteAlbum = ({ submit }) => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [setIsDeleteModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const onChange = e => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  };\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList];\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess();\r\n    }, 1000);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: handleCancleOk,\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then(() => {\r\n        const { Input, TextArea } = form.getFieldsValue();\r\n        if (!Input || !TextArea) {\r\n          Modal.warning({\r\n            title: \"입력 오류\",\r\n            content: \"제목과 내용을 입력해주세요.\",\r\n          });\r\n        } else {\r\n          showModal();\r\n        }\r\n      })\r\n      .catch(errorInfo => {\r\n        console.log(\"Validation failed:\", errorInfo);\r\n      });\r\n  };\r\n  const handleCancleOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /album 페이지로 이동\r\n    navigate(\"/album\");\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // 업로드 칸 스타일을 수정하기 위한 변수\r\n  const uploadAreaStyle = {\r\n    height: \"150px\",\r\n    lineHeight: \"150px\",\r\n  };\r\n  return (\r\n    <AlbumWrap paddingTop={40} width={100} height={100}>\r\n      <PageTitle>활동앨범</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Form form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"Input\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"TextArea\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`{${IMG_URL}/album/write}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              style={uploadAreaStyle}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드 </Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: 35,\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <GreenBtn htmlType=\"submit\" onClick={onFinish}>\r\n          {submit}\r\n        </GreenBtn>\r\n        <PinkBtn onClick={handleCancelConfirmation} style={{ marginLeft: 20 }}>\r\n          취소\r\n        </PinkBtn>\r\n      </div>\r\n\r\n      <Link to=\"/album\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default WriteAlbum;\r\n","import WriteAlbum from \"../../components/album/WriteAlbum\";\r\nconst initAlbumWrite = [\r\n  {\r\n    pics: [\"string\"],\r\n    dto: {\r\n      iteacher: 0,\r\n      albumTitle: \"string\",\r\n      albumContents: \"string\",\r\n    },\r\n  },\r\n];\r\n\r\nconst AlbumWrite = () => {\r\n  return <WriteAlbum submit=\"등록\" />;\r\n};\r\n\r\nexport default AlbumWrite;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  margin-top: 2rem;\r\n  margin-bottom: 9rem;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);"],"names":["concat","SERVER_URL","_ref","submit","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","setIsDeleteModalOpen","navigate","useNavigate","onFinish","validateFields","then","Input","TextArea","getFieldsValue","Modal","warning","title","content","catch","errorInfo","console","log","handleCancleOk","_jsxs","AlbumWrap","paddingTop","width","height","children","_jsx","PageTitle","style","padding","borderTop","borderBottom","background","marginTop","Item","name","rules","required","message","placeholder","FileListStyle","Upload","Dragger","action","IMG_URL","listType","onChange","info","customRequest","_ref2","file","onSuccess","setTimeout","className","multiple","lineHeight","Button","icon","UploadOutlined","display","justifyContent","GreenBtn","htmlType","onClick","PinkBtn","handleCancelConfirmation","confirm","onOk","okText","cancelText","onCancel","marginLeft","Link","to","open","handleOk","handleCancel","cancelButtonProps","AlbumWrite","WriteAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","defaultBtnStyle","fontSize","fontFamily","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn","CheckOutlined","ref","React","AntdIcon","_extends","CheckOutlinedSvg"],"sourceRoot":""}