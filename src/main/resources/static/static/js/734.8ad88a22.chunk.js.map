{"version":3,"file":"static/js/734.8ad88a22.chunk.js","mappings":"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","sources":["pages/indivalbum/IndivAlbumList.js"],"sourcesContent":["import { Pagination, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport {\r\n  FromToBtnWrap,\r\n  IndWrap,\r\n  TabWrap,\r\n} from \"../../styles/individualNotice/ind\";\r\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\r\nimport {\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\r\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\r\nimport Search from \"antd/es/input/Search\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\n\r\nconst initData = [\r\n  {\r\n    inotice: 0,\r\n    noticeTitle: \"\",\r\n    noticeContents: \"\",\r\n    kidNm: \"\",\r\n    iclass: 0,\r\n    picCheck: 0,\r\n    cmtCheck: 0,\r\n    noticeCheck: 0,\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst IndivAlbumList = () => {\r\n  const navigate = useNavigate();\r\n  const { pathname, search } = useLocation();\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const [indList, setIndList] = useState(initData);\r\n  const [fromTo, setFromTo] = useState(3 || serchParams.get(\"fromTo\"));\r\n  const [count, setCount] = useState(0);\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  // 현재 출력 년도, kid 값 params에서 체크\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n  const iclass = serchParams.get(\"iclass\");\r\n  const searchValue = serchParams.get(\"searchValue\") || \"\";\r\n\r\n  // 로그인 회원 정보에서 아이 리스트 추출\r\n  const { loginState, isLogin, isParentLogin, isTeacherLogin, isAdminLogin } =\r\n    useCustomLogin();\r\n  const ikidList = loginState.kidList;\r\n\r\n  // 페이지네이션\r\n  const handlePageChange = (page, pageSize) => {\r\n    if (isLogin) {\r\n      navigate(\r\n        `/ind?year=${year}&page=${page}&iclass=${iclass}&fromTo=${fromTo}`,\r\n      );\r\n    } else {\r\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}&fromTo=${fromTo}`);\r\n    }\r\n  };\r\n\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n\r\n  // 데이터 화면출력, 로그인체크\r\n  useEffect(() => {\r\n    if (isParentLogin) {\r\n      // 학부모 로그인\r\n      if (ikid === \"0\") {\r\n        // 연결된 아이가 없을경우\r\n        setTitle(\"연결 오류\");\r\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\r\n        setIsNavigate(-1);\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n      getIndParentList({\r\n        page,\r\n        year,\r\n        ikid,\r\n        fromTo,\r\n        search: \"\",\r\n        errorFn,\r\n        successFn,\r\n      });\r\n    } else if (isLogin) {\r\n      // 선생님 로그인\r\n      if ((isTeacherLogin && iclass == loginState.iclass) || isAdminLogin) {\r\n        getIndTeacherList({\r\n          page,\r\n          year,\r\n          iclass,\r\n          fromTo,\r\n          search: searchValue,\r\n          errorFn,\r\n          successFn,\r\n        });\r\n      } else {\r\n        setTitle(\"접근 제한\");\r\n        setSubTitle(\"담당한 반 알림장만 열람 가능합니다.\");\r\n        setIsNavigate(-1);\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n    } else {\r\n      // 로그인 안했을때\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n      setIsNavigate(\"/login\");\r\n    }\r\n  }, [year, ikid, iclass, page, fromTo]);\r\n\r\n  // 데이터연동 결과\r\n  const successFn = res => {\r\n    setIndList(res.list);\r\n    setCount(res.noticeCnt);\r\n  };\r\n  const errorFn = res => {\r\n    console.log(res);\r\n    // setIsOpen(true);\r\n    // setTitle(\"데이터 없음\");\r\n    // setSubTitle(res);\r\n\r\n    const url = isLogin\r\n      ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}`\r\n      : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}`;\r\n\r\n    if (fromTo != 3) {\r\n      setFromTo(3);\r\n      setIsNavigate(url);\r\n    } else {\r\n      setIsNavigate(-1);\r\n    }\r\n  };\r\n\r\n  // 작성자 분류\r\n  // 식별코드정보값 가져오기\r\n\r\n  const handleFromTo = e => {\r\n    const writer = e.target.value;\r\n    const url = isLogin\r\n      ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}&fromTo=`\r\n      : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}&fromTo=`;\r\n    const num =\r\n      isLogin && writer == \"teacher\"\r\n        ? 1\r\n        : isLogin && writer == \"parent\"\r\n        ? 0\r\n        : isParentLogin && writer == \"parent\"\r\n        ? 1\r\n        : isParentLogin && writer == \"teacher\"\r\n        ? 0\r\n        : 3;\r\n    // const num = writer == \"teacher\" ? 1 : writer == \"parent\" ? 0 : 3;\r\n\r\n    navigate(url + num, { state: { writer } });\r\n    setFromTo(num);\r\n  };\r\n\r\n  // 검색\r\n  const handleSearch = value => {\r\n    if (isParentLogin) {\r\n      getIndParentList({\r\n        page: 1,\r\n        year,\r\n        ikid,\r\n        fromTo,\r\n        search: value,\r\n        errorFn: errorSerchFn,\r\n        successFn,\r\n      });\r\n      setSearchParams({ page: 1, year, ikid, fromTo, searchValue: value });\r\n    } else if (isLogin) {\r\n      // 선생님 로그인\r\n      getIndTeacherList({\r\n        page: 1,\r\n        year,\r\n        iclass,\r\n        fromTo,\r\n        search: value,\r\n        errorFn: errorSerchFn,\r\n        successFn,\r\n      });\r\n      setSearchParams({ page: 1, year, iclass, fromTo, searchValue: value });\r\n    }\r\n  };\r\n\r\n  const errorSerchFn = res => {\r\n    setIsOpen(true);\r\n    setTitle(\"데이터 없음\");\r\n    setSubTitle(res);\r\n    setSearchParams({ page: 1, year, iclass, fromTo, searchValue: \"\" });\r\n  };\r\n\r\n  return (\r\n    <IndWrap>\r\n      {/* 안내창 */}\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <TabWrap>\r\n        <Link to={`/ind?year=${currentYear}&page=1&iclass=0`}>알림장</Link>\r\n        <Link to={pathname + search} className=\"active\">\r\n          추억앨범\r\n        </Link>\r\n      </TabWrap>\r\n      <TitleWrap className=\"ind-btn-wrap\">\r\n        <FromToBtnWrap fromTo={fromTo} isLogin={isLogin}>\r\n          <button\r\n            onClick={e => handleFromTo(e)}\r\n            value={\"teacher\"}\r\n            className=\"teacher\"\r\n          >\r\n            {isLogin ? \"내가 쓴\" : \"내가 받은\"} 글\r\n          </button>\r\n          <button\r\n            onClick={e => handleFromTo(e)}\r\n            value={\"parent\"}\r\n            className=\"parent\"\r\n          >\r\n            {isLogin ? \"내가 받은\" : \"내가 쓴\"} 글\r\n          </button>\r\n          {fromTo != 3 ? (\r\n            <button onClick={e => handleFromTo(e)} value={\"all\"}>\r\n              모아보기\r\n            </button>\r\n          ) : null}\r\n        </FromToBtnWrap>\r\n        <FlexBox>\r\n          {/* 권한별 서치버튼 */}\r\n          {isLogin ? (\r\n            <IndTeacherBtnComponent\r\n              iclass={iclass}\r\n              indList={indList}\r\n              year={year}\r\n              page={page}\r\n            />\r\n          ) : (\r\n            <IndParentBtnComponent\r\n              ikidList={ikidList}\r\n              indList={indList}\r\n              ikid={ikid}\r\n              year={year}\r\n              page={page}\r\n            />\r\n          )}\r\n          <Search\r\n            placeholder=\"이름을 입력하세요.\"\r\n            allowClear\r\n            onSearch={value => {\r\n              handleSearch(value);\r\n            }}\r\n            size={\"large\"}\r\n          />\r\n          <GreenBtn\r\n            onClick={() => {\r\n              navigate(\"/ind/write\");\r\n            }}\r\n            className=\"btn\"\r\n          >\r\n            글쓰기\r\n          </GreenBtn>\r\n        </FlexBox>\r\n      </TitleWrap>\r\n      <IndListComponent\r\n        listData={indList}\r\n        year={year}\r\n        ikid={ikid}\r\n        iclass={iclass}\r\n        page={page}\r\n      />\r\n      <PageNum>\r\n        <Pagination\r\n          defaultCurrent={page}\r\n          total={count}\r\n          pageSize={12}\r\n          onChange={handlePageChange}\r\n        />\r\n      </PageNum>\r\n    </IndWrap>\r\n  );\r\n};\r\n\r\nexport default IndivAlbumList;\r\n"],"names":["initData","inotice","noticeTitle","noticeContents","kidNm","iclass","picCheck","cmtCheck","noticeCheck","createdAt","IndivAlbumList","navigate","useNavigate","pathname","search","useLocation","serchParams","setSearchParams","useSearchParams","indList","setIndList","useState","fromTo","setFromTo","count","setCount","currentYear","Date","getFullYear","year","get","ikid","page","searchValue","loginState","isLogin","isParentLogin","isTeacherLogin","isAdminLogin","useCustomLogin","ikidList","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","getIndParentList","errorFn","successFn","getIndTeacherList","res","list","noticeCnt","console","log","url","concat","handleFromTo","e","writer","target","value","num","state","errorSerchFn","_jsxs","IndWrap","children","_jsx","ModalOneBtn","handleOk","TabWrap","Link","to","className","TitleWrap","FromToBtnWrap","onClick","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","Search","placeholder","allowClear","onSearch","handleSearch","size","GreenBtn","IndListComponent","listData","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}