{"version":3,"file":"static/js/734.8ad88a22.chunk.js","mappings":"mTA4BA,MAAMA,EAAW,CACf,CACEC,QAAS,EACTC,YAAa,GACbC,eAAgB,GAChBC,MAAO,GACPC,OAAQ,EACRC,SAAU,EACVC,SAAU,EACVC,YAAa,EACbC,UAAW,KAkRf,EA9QuBC,KACrB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,OACtBC,EAAaC,IAAmBC,EAAAA,EAAAA,OAChCC,EAASC,IAAcC,EAAAA,EAAAA,UAASrB,IAChCsB,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,GAC7BK,GAAc,IAAIC,MAAOC,cAGzBC,EAAOb,EAAYc,IAAI,QACvBC,EAAOf,EAAYc,IAAI,QACvBE,EAAOhB,EAAYc,IAAI,QACvBzB,EAASW,EAAYc,IAAI,UACzBG,EAAcjB,EAAYc,IAAI,gBAAkB,IAGhD,WAAEI,EAAU,QAAEC,EAAO,cAAEC,EAAa,eAAEC,EAAc,aAAEC,IAC1DC,EAAAA,EAAAA,KACIC,EAAWN,EAAWO,SAcrBC,EAAOC,IAAYtB,EAAAA,EAAAA,UAAS,KAC5BuB,EAAUC,IAAexB,EAAAA,EAAAA,UAAS,KAClCyB,EAAQC,IAAa1B,EAAAA,EAAAA,WAAS,IAC9B2B,EAAYC,IAAiB5B,EAAAA,EAAAA,aAYpC6B,EAAAA,EAAAA,YAAU,KACR,GAAId,EAAe,CAEjB,GAAa,MAATL,EAMF,OAJAY,EAAS,6BACTE,EAAY,gFACZI,GAAe,QACfF,GAAU,IAGZI,EAAAA,EAAAA,IAAiB,CACfnB,OACAH,OACAE,OACAT,SACAR,OAAQ,GACRsC,UACAC,aAEJ,MAAO,GAAIlB,EAAS,CAElB,KAAKE,GAAkBhC,GAAU6B,EAAW7B,QAAWiC,GAerD,OAJAK,EAAS,6BACTE,EAAY,mGACZI,GAAe,QACfF,GAAU,IAbVO,EAAAA,EAAAA,IAAkB,CAChBtB,OACAH,OACAxB,SACAiB,SACAR,OAAQmB,EACRmB,UACAC,aASN,MAEEN,GAAU,GACVJ,EAAS,gDACTE,EAAY,sFACZI,EAAc,SAChB,GACC,CAACpB,EAAME,EAAM1B,EAAQ2B,EAAMV,IAG9B,MAAM+B,EAAYE,IAChBnC,EAAWmC,EAAIC,MACf/B,EAAS8B,EAAIE,UAAU,EAEnBL,EAAUG,IACdG,QAAQC,IAAIJ,GAKZ,MAAMK,EAAMzB,EAAO,aAAA0B,OACFhC,EAAI,mBAAAgC,OAAkBxD,EAAM,iBAAAwD,OAAgB5B,GAAW,aAAA4B,OACvDhC,EAAI,iBAAAgC,OAAgB9B,EAAI,iBAAA8B,OAAgB5B,GAE3C,GAAVX,GACFC,EAAU,GACV0B,EAAcW,IAEdX,GAAe,EACjB,EAMIa,EAAeC,IACnB,MAAMC,EAASD,EAAEE,OAAOC,MAClBN,EAAMzB,EAAO,aAAA0B,OACFhC,EAAI,mBAAAgC,OAAkBxD,EAAM,iBAAAwD,OAAgB5B,EAAW,yBAAA4B,OACvDhC,EAAI,iBAAAgC,OAAgB9B,EAAI,iBAAA8B,OAAgB5B,EAAW,YAC9DkC,EACJhC,GAAqB,WAAV6B,EACP,EACA7B,GAAqB,UAAV6B,EACX,EACA5B,GAA2B,UAAV4B,EACjB,EACA5B,GAA2B,WAAV4B,EACjB,EACA,EAGNrD,EAASiD,EAAMO,EAAK,CAAEC,MAAO,CAAEJ,YAC/BzC,EAAU4C,EAAI,EA+BVE,EAAed,IACnBR,GAAU,GACVJ,EAAS,mCACTE,EAAYU,GACZtC,EAAgB,CAAEe,KAAM,EAAGH,OAAMxB,SAAQiB,SAAQW,YAAa,IAAK,EAGrE,OACEqC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAC,SAAA,EAENC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACV5B,OAAQA,EACR6B,SAhJWA,KACf5B,GAAU,GAENC,GACFrC,EAASqC,EACX,EA4IIN,MAAOA,EACPE,SAAUA,KAEZ0B,EAAAA,EAAAA,MAACM,EAAAA,GAAO,CAAAJ,SAAA,EACNC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,aAAAjB,OAAenC,EAAW,oBAAmB8C,SAAC,wBACtDC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAIjE,EAAWC,EAAQiE,UAAU,SAAQP,SAAC,iCAIlDF,EAAAA,EAAAA,MAACU,EAAAA,GAAS,CAACD,UAAU,eAAcP,SAAA,EACjCF,EAAAA,EAAAA,MAACW,EAAAA,GAAa,CAAC3D,OAAQA,EAAQa,QAASA,EAAQqC,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,UACEY,QAASnB,GAAKD,EAAaC,GAC3BG,MAAO,UACPa,UAAU,UAASP,SAAA,CAElBrC,EAAU,sBAAS,4BAAQ,cAE9BmC,EAAAA,EAAAA,MAAA,UACEY,QAASnB,GAAKD,EAAaC,GAC3BG,MAAO,SACPa,UAAU,SAAQP,SAAA,CAEjBrC,EAAU,4BAAU,sBAAO,aAEnB,GAAVb,GACCmD,EAAAA,EAAAA,KAAA,UAAQS,QAASnB,GAAKD,EAAaC,GAAIG,MAAO,MAAMM,SAAC,6BAGnD,SAENF,EAAAA,EAAAA,MAACa,EAAAA,GAAO,CAAAX,SAAA,CAELrC,GACCsC,EAAAA,EAAAA,KAACW,EAAAA,EAAsB,CACrB/E,OAAQA,EACRc,QAASA,EACTU,KAAMA,EACNG,KAAMA,KAGRyC,EAAAA,EAAAA,KAACY,EAAAA,EAAqB,CACpB7C,SAAUA,EACVrB,QAASA,EACTY,KAAMA,EACNF,KAAMA,EACNG,KAAMA,KAGVyC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLC,YAAY,qDACZC,YAAU,EACVC,SAAUvB,IA5FCA,KACf9B,IACFe,EAAAA,EAAAA,IAAiB,CACfnB,KAAM,EACNH,OACAE,OACAT,SACAR,OAAQoD,EACRd,QAASiB,EACThB,cAEFpC,EAAgB,CAAEe,KAAM,EAAGH,OAAME,OAAMT,SAAQW,YAAaiC,KACnD/B,KAETmB,EAAAA,EAAAA,IAAkB,CAChBtB,KAAM,EACNH,OACAxB,SACAiB,SACAR,OAAQoD,EACRd,QAASiB,EACThB,cAEFpC,EAAgB,CAAEe,KAAM,EAAGH,OAAMxB,SAAQiB,SAAQW,YAAaiC,IAChE,EAqEUwB,CAAaxB,EAAM,EAErByB,KAAM,WAERlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAQ,CACPV,QAASA,KACPvE,EAAS,aAAa,EAExBoE,UAAU,MAAKP,SAChB,8BAKLC,EAAAA,EAAAA,KAACoB,EAAAA,EAAgB,CACfC,SAAU3E,EACVU,KAAMA,EACNE,KAAMA,EACN1B,OAAQA,EACR2B,KAAMA,KAERyC,EAAAA,EAAAA,KAACsB,EAAAA,GAAO,CAAAvB,UACNC,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CACTC,eAAgBjE,EAChBkE,MAAO1E,EACP2E,SAAU,GACVC,SAjPiBC,CAACrE,EAAMmE,KAE5BxF,EADEwB,EACO,aAAD0B,OACOhC,EAAI,UAAAgC,OAAS7B,EAAI,YAAA6B,OAAWxD,EAAM,YAAAwD,OAAWvC,GAGnD,aAADuC,OAAchC,EAAI,UAAAgC,OAAS7B,EAAI,UAAA6B,OAAS9B,EAAI,YAAA8B,OAAWvC,GACjE,QA6OU,C","sources":["pages/indivalbum/IndivAlbumList.js"],"sourcesContent":["import { Pagination, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\nimport { PageTitle } from \"../../styles/basic\";\nimport {\n  FromToBtnWrap,\n  IndWrap,\n  TabWrap,\n} from \"../../styles/individualNotice/ind\";\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\nimport {\n  Link,\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\nimport {\n  getIndParentList,\n  getIndTeacherList,\n} from \"../../api/individualNotice/indivNoticeApi\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\nimport Search from \"antd/es/input/Search\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\n\nconst initData = [\n  {\n    inotice: 0,\n    noticeTitle: \"\",\n    noticeContents: \"\",\n    kidNm: \"\",\n    iclass: 0,\n    picCheck: 0,\n    cmtCheck: 0,\n    noticeCheck: 0,\n    createdAt: \"\",\n  },\n];\n\nconst IndivAlbumList = () => {\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [indList, setIndList] = useState(initData);\n  const [fromTo, setFromTo] = useState(3 || serchParams.get(\"fromTo\"));\n  const [count, setCount] = useState(0);\n  const currentYear = new Date().getFullYear();\n\n  // 현재 출력 년도, kid 값 params에서 체크\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n  const page = serchParams.get(\"page\");\n  const iclass = serchParams.get(\"iclass\");\n  const searchValue = serchParams.get(\"searchValue\") || \"\";\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const { loginState, isLogin, isParentLogin, isTeacherLogin, isAdminLogin } =\n    useCustomLogin();\n  const ikidList = loginState.kidList;\n\n  // 페이지네이션\n  const handlePageChange = (page, pageSize) => {\n    if (isLogin) {\n      navigate(\n        `/ind?year=${year}&page=${page}&iclass=${iclass}&fromTo=${fromTo}`,\n      );\n    } else {\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}&fromTo=${fromTo}`);\n    }\n  };\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  // 데이터 화면출력, 로그인체크\n  useEffect(() => {\n    if (isParentLogin) {\n      // 학부모 로그인\n      if (ikid === \"0\") {\n        // 연결된 아이가 없을경우\n        setTitle(\"연결 오류\");\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n      getIndParentList({\n        page,\n        year,\n        ikid,\n        fromTo,\n        search: \"\",\n        errorFn,\n        successFn,\n      });\n    } else if (isLogin) {\n      // 선생님 로그인\n      if ((isTeacherLogin && iclass == loginState.iclass) || isAdminLogin) {\n        getIndTeacherList({\n          page,\n          year,\n          iclass,\n          fromTo,\n          search: searchValue,\n          errorFn,\n          successFn,\n        });\n      } else {\n        setTitle(\"접근 제한\");\n        setSubTitle(\"담당한 반 알림장만 열람 가능합니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n    } else {\n      // 로그인 안했을때\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n      setIsNavigate(\"/login\");\n    }\n  }, [year, ikid, iclass, page, fromTo]);\n\n  // 데이터연동 결과\n  const successFn = res => {\n    setIndList(res.list);\n    setCount(res.noticeCnt);\n  };\n  const errorFn = res => {\n    console.log(res);\n    // setIsOpen(true);\n    // setTitle(\"데이터 없음\");\n    // setSubTitle(res);\n\n    const url = isLogin\n      ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}`\n      : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}`;\n\n    if (fromTo != 3) {\n      setFromTo(3);\n      setIsNavigate(url);\n    } else {\n      setIsNavigate(-1);\n    }\n  };\n\n  // 작성자 분류\n  // 식별코드정보값 가져오기\n\n  const handleFromTo = e => {\n    const writer = e.target.value;\n    const url = isLogin\n      ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}&fromTo=`\n      : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}&fromTo=`;\n    const num =\n      isLogin && writer == \"teacher\"\n        ? 1\n        : isLogin && writer == \"parent\"\n        ? 0\n        : isParentLogin && writer == \"parent\"\n        ? 1\n        : isParentLogin && writer == \"teacher\"\n        ? 0\n        : 3;\n    // const num = writer == \"teacher\" ? 1 : writer == \"parent\" ? 0 : 3;\n\n    navigate(url + num, { state: { writer } });\n    setFromTo(num);\n  };\n\n  // 검색\n  const handleSearch = value => {\n    if (isParentLogin) {\n      getIndParentList({\n        page: 1,\n        year,\n        ikid,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, ikid, fromTo, searchValue: value });\n    } else if (isLogin) {\n      // 선생님 로그인\n      getIndTeacherList({\n        page: 1,\n        year,\n        iclass,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, iclass, fromTo, searchValue: value });\n    }\n  };\n\n  const errorSerchFn = res => {\n    setIsOpen(true);\n    setTitle(\"데이터 없음\");\n    setSubTitle(res);\n    setSearchParams({ page: 1, year, iclass, fromTo, searchValue: \"\" });\n  };\n\n  return (\n    <IndWrap>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <TabWrap>\n        <Link to={`/ind?year=${currentYear}&page=1&iclass=0`}>알림장</Link>\n        <Link to={pathname + search} className=\"active\">\n          추억앨범\n        </Link>\n      </TabWrap>\n      <TitleWrap className=\"ind-btn-wrap\">\n        <FromToBtnWrap fromTo={fromTo} isLogin={isLogin}>\n          <button\n            onClick={e => handleFromTo(e)}\n            value={\"teacher\"}\n            className=\"teacher\"\n          >\n            {isLogin ? \"내가 쓴\" : \"내가 받은\"} 글\n          </button>\n          <button\n            onClick={e => handleFromTo(e)}\n            value={\"parent\"}\n            className=\"parent\"\n          >\n            {isLogin ? \"내가 받은\" : \"내가 쓴\"} 글\n          </button>\n          {fromTo != 3 ? (\n            <button onClick={e => handleFromTo(e)} value={\"all\"}>\n              모아보기\n            </button>\n          ) : null}\n        </FromToBtnWrap>\n        <FlexBox>\n          {/* 권한별 서치버튼 */}\n          {isLogin ? (\n            <IndTeacherBtnComponent\n              iclass={iclass}\n              indList={indList}\n              year={year}\n              page={page}\n            />\n          ) : (\n            <IndParentBtnComponent\n              ikidList={ikidList}\n              indList={indList}\n              ikid={ikid}\n              year={year}\n              page={page}\n            />\n          )}\n          <Search\n            placeholder=\"이름을 입력하세요.\"\n            allowClear\n            onSearch={value => {\n              handleSearch(value);\n            }}\n            size={\"large\"}\n          />\n          <GreenBtn\n            onClick={() => {\n              navigate(\"/ind/write\");\n            }}\n            className=\"btn\"\n          >\n            글쓰기\n          </GreenBtn>\n        </FlexBox>\n      </TitleWrap>\n      <IndListComponent\n        listData={indList}\n        year={year}\n        ikid={ikid}\n        iclass={iclass}\n        page={page}\n      />\n      <PageNum>\n        <Pagination\n          defaultCurrent={page}\n          total={count}\n          pageSize={12}\n          onChange={handlePageChange}\n        />\n      </PageNum>\n    </IndWrap>\n  );\n};\n\nexport default IndivAlbumList;\n"],"names":["initData","inotice","noticeTitle","noticeContents","kidNm","iclass","picCheck","cmtCheck","noticeCheck","createdAt","IndivAlbumList","navigate","useNavigate","pathname","search","useLocation","serchParams","setSearchParams","useSearchParams","indList","setIndList","useState","fromTo","setFromTo","count","setCount","currentYear","Date","getFullYear","year","get","ikid","page","searchValue","loginState","isLogin","isParentLogin","isTeacherLogin","isAdminLogin","useCustomLogin","ikidList","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","getIndParentList","errorFn","successFn","getIndTeacherList","res","list","noticeCnt","console","log","url","concat","handleFromTo","e","writer","target","value","num","state","errorSerchFn","_jsxs","IndWrap","children","_jsx","ModalOneBtn","handleOk","TabWrap","Link","to","className","TitleWrap","FromToBtnWrap","onClick","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","Search","placeholder","allowClear","onSearch","handleSearch","size","GreenBtn","IndListComponent","listData","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}