{"version":3,"file":"static/js/733.9ce026fc.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/album/LightBox.js","components/common/Comment.js","components/album/DetailsAlbum.js","pages/album/AlbumDetails.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport jwtAxios from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api/album`;\n\n// ialbum = 세부 글 넘버.\n// page = 전체리스트\n// ialbumComment = 세부 댓글 넘버\n\n// 활동앨범 상세조회 get\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\n    // console.log(\"res\", res);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // console.log(\"res.data임 : \", res.data);\n      successFn(...res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// album/listall?page=1\n\n// 활동 앨범 전체 조회 get\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// edit?ialbum=1\n// 수정할 앨범 선택시 세부 정보 조회 get\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n    } else {\n      failFn(\"자료 호출 에러입니다.\");\n    }\n  } catch (error) {\n    const demo = await axios.get(`/`);\n    errorFn(demo.data);\n    console.log(error);\n  }\n};\n\n// 수정한 앨범 put 하기.\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  console.log(\"product\", product);\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 등록 POST\n// path\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const response = await jwtAxios.post(`${path}`, product, header);\n    const status = response.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(response.data);\n    } else {\n      failFn(\"글 등록 오류\", response.statusText);\n    }\n  } catch (error) {\n    console.log(\"글 등록 서버오류\", error.response.data);\n    errorFn(\"글 등록 서버오류\", error.response.data);\n  }\n};\n\n// 앨범 댓글 등록 POST\n// path\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.post();\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      // 화면처리용\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 글 삭제 Delete\n// ?ialbum=1\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 앨범 댓글 삭제 Delete\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\nexport const deleteAlbumComment = async ({\n  ialbumComment,\n  ialbum,\n  iteacher,\n  iparent,\n  commentInfo,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.delete(\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\n      commentInfo,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn();\n    }\n  } catch (error) {\n    errorFn();\n  }\n};\n","import React from \"react\";\n\nconst LightBox = ({ imgSrc, open, closeLightbox }) => {\n  if (!open) return null;\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000,\n      }}\n      onClick={closeLightbox}\n    >\n      <img\n        src={imgSrc}\n        style={{\n          maxWidth: \"100%\",\n          maxHeight: \"100%\",\n          objectFit: \"contain\",\n        }}\n      />\n      <button\n        onClick={closeLightbox}\n        style={{\n          position: \"fixed\",\n          top: \"20px\",\n          right: \"20px\",\n          zIndex: 1010,\n        }}\n      >\n        닫기\n      </button>\n    </div>\n  );\n};\n\nexport default LightBox;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { MessageBox, Input, Button } from \"react-chat-elements\";\nimport \"react-chat-elements/dist/main.css\";\nimport { colors, fonts } from \"../../styles/basic\";\nimport { CommentWrap } from \"../../styles/album/album\";\n\nconst Comment = () => {\n  const [comments, setComments] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleSendMessage = () => {\n    if (message) {\n      const newComment = {\n        title: `선생님`,\n        position: \"left\",\n        type: \"text\",\n        text: message,\n        date: new Date(),\n      };\n      setComments([...comments, newComment]);\n      setMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [comments]);\n\n  return (\n    <CommentWrap>\n      <div>\n        {comments.map((comment, index) => (\n          <MessageBox\n            lockable={true}\n            key={index}\n            position={comment.title === \"선생님\" ? \"left\" : \"right\"}\n            type={\"text\"}\n            text={comment.text}\n            title={comment.title}\n            date={comment.date}\n            dateString={comment.date.toLocaleTimeString()}\n            dataSource={[\n              {\n                avatar: \"https://avatars.githubusercontent.com/u/80540635?v=4\",\n                unread: 3,\n              },\n            ]}\n          />\n        ))}\n        <div ref={messagesEndRef}></div>\n      </div>\n      <Input\n        inputStyle={{\n          fontFamily: `${fonts.kotraHope}`,\n          fontSize: \"1.5rem\",\n          minheight: \"3rem\",\n          color: `${colors.grayDeep}`,\n        }}\n        placeholder=\"내용을 입력하세요...\"\n        color={`colors.orangeLight`}\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        onKeyPress={e => {\n          if (e.key === \"Enter\") {\n            handleSendMessage();\n          }\n        }}\n        rightButtons={\n          <Button\n            color={`${colors.orangeLight}`}\n            backgroundColor={`${colors.orangeDeep}`}\n            text=\"발송\"\n            onClick={handleSendMessage}\n          />\n        }\n      />\n    </CommentWrap>\n  );\n};\n\nexport default Comment;\n","import { Modal } from \"antd\";\nimport React, { useEffect, useState, useRef } from \"react\";\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/effect-cube\";\nimport \"swiper/css/pagination\";\nimport { EffectCoverflow, Keyboard, Pagination } from \"swiper/modules\";\nimport LightBox from \"./LightBox\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport {\n  AlbumTitle,\n  AlbumTopBar,\n  AlbumWrap,\n  ContentWrap,\n  DetailsText,\n  Footer,\n  MainContent,\n  TitleWrap,\n  SwiperWrap,\n} from \"../../styles/album/album\";\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\nimport Comment from \"../common/Comment\";\nimport { deleteAlbum, getAlbum } from \"../../api/album/album_api\";\nimport Loading from \"../loading/Loading\";\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\nconst path = `${IMG_URL}/pic/album`;\n\nconst host = `${SERVER_URL}/album`;\n// import required modules\nconst initAlbumCommnet = [\n  {\n    albumTitle: \"\",\n    albumContents: \"\",\n    albumPic: [],\n    albumComments: [],\n    createdAt: \"\",\n  },\n];\n\nconst DetailsAlbum = ({ pno }) => {\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\n    useState(false);\n  const navigate = useNavigate();\n  // 컴포넌트 마운트 시 데이터 불러오기\n  console.log(\"pno\", pno);\n  useEffect(() => {\n    getAlbum({\n      pno: pno,\n      successFn: data => {\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\n        setIsLoading(false); // 로딩 상태 업데이트\n      },\n      failFn: message => {\n        console.error(message);\n        setIsLoading(false);\n      },\n      errorFn: data => {\n        console.error(data);\n        setIsLoading(false);\n      },\n    });\n  }, [pno]); // pno 값이 변경될 때마다 getAlbum 함수를 호출\n\n  const showDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleDeleteOk = () => {\n    setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\n\n    deleteAlbum({\n      ialbum: pno,\n      successFn: res => {\n        // 삭제 성공 시 처리\n        console.log(\"Album deleted:\", res);\n        setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\n\n        // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\n        setTimeout(() => {\n          setIsDeleteSuccessModalOpen(false);\n          navigate(\"/album\");\n        }, 2000);\n      },\n      failFn: error => {\n        // 삭제 실패 시 처리\n        Modal.error({\n          title: \"앨범 삭제 실패\",\n          content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\n        });\n      },\n      errorFn: error => {\n        console.error(\"Error deleting album:\", error);\n        Modal.error({\n          title: \"오류 발생\",\n          content:\n            \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\n        });\n      },\n    });\n  };\n\n  const handleDeleteCancel = () => {\n    setIsDeleteModalOpen(false);\n  };\n\n  const handleDeleteSuccessOk = () => {\n    setIsDeleteSuccessModalOpen(false);\n  };\n  const [lightbox, setLightbox] = useState({ open: false, imgSrc: \"\" });\n  const openLightbox = imgSrc => setLightbox({ open: true, imgSrc: imgSrc });\n  const closeLightbox = () => setLightbox({ open: false, imgSrc: \"\" });\n\n  // Lightbox 상태에 따라 Swiper 높이 조절\n  useEffect(() => {\n    const swiperElement = document.querySelector(\".swiper\");\n    if (lightbox.open) {\n      swiperElement.style.height = \"55vh\";\n    } else {\n      swiperElement.style.height = \"100%\";\n    }\n  }, [lightbox.open]);\n\n  console.log(\"albumData\", albumData);\n  return (\n    <AlbumWrap paddingTop={40}>\n      <AlbumTopBar padding={1}>\n        <AlbumTitle>활동앨범</AlbumTitle>\n      </AlbumTopBar>\n      <ContentWrap>\n        <TitleWrap>\n          <h3>{albumData.albumTitle}</h3>\n          <p>{albumData.createdAt}</p>\n        </TitleWrap>\n        <MainContent>\n          <SwiperWrap>\n            <Swiper\n              loading=\"swiper-lazy-preloader swiper-lazy-preloader-white\"\n              height={200}\n              effect={\"coverflow\"}\n              grabCursor={true}\n              centeredSlides={true}\n              slidesPerView={\"auto\"}\n              coverflowEffect={{\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows: true,\n              }}\n              pagination={true}\n              keyboard={{ enabled: true }} // 키보드 제어 활성화\n              modules={[EffectCoverflow, Pagination, Keyboard]} // Keyboard 모듈 추가\n              className=\"mySwiper\"\n              // style={{ transform: `translate3d(0px, 0px, 0px)` }} //\n            >\n              {albumData &&\n                albumData.albumPic &&\n                albumData.albumPic.map((item, index) => (\n                  <SwiperSlide key={index}>\n                    <img\n                      src={`${path}/${pno}/${item}`}\n                      onClick={() => openLightbox(`${path}/${pno}/${item}`)}\n                    />\n                  </SwiperSlide>\n                ))}\n              <LightBox\n                imgSrc={lightbox.imgSrc}\n                open={lightbox.open}\n                closeLightbox={closeLightbox}\n              />\n            </Swiper>\n          </SwiperWrap>\n\n          <DetailsText>\n            <p>{albumData.albumContents}</p>\n          </DetailsText>\n          <Comment />\n        </MainContent>\n        {/* 삭제 모달 */}\n        <Modal\n          title=\"정말 삭제할까요?\"\n          open={isDeleteModalOpen}\n          onOk={handleDeleteOk}\n          onCancel={handleDeleteCancel}\n          okText=\"확인\"\n          cancelText=\"취소\"\n        >\n          <p>삭제된 내용은 복구할 수 없습니다.</p>\n        </Modal>\n\n        {/* 삭제 성공 모달 */}\n        <Modal\n          title=\"삭제 완료\"\n          open={isDeleteSuccessModalOpen}\n          onOk={handleDeleteSuccessOk}\n          cancelButtonProps={{ style: { display: \"none\" } }}\n          okText=\"확인\"\n        >\n          <p>삭제가 완료되었습니다.</p>\n        </Modal>\n        <Footer>\n          <Link to=\"/album\">\n            <GreenBtn>목록보기</GreenBtn>\n          </Link>\n          <Link to={`${host}/modify/${pno}`}>\n            <BlueBtn>수정</BlueBtn>\n          </Link>\n          <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\n        </Footer>\n      </ContentWrap>\n    </AlbumWrap>\n  );\n};\n\nexport default DetailsAlbum;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport DetailsAlbum from \"../../components/album/DetailsAlbum\";\n\nconst AlbumDetails = () => {\n  let { pno } = useParams();\n  return <DetailsAlbum pno={pno} />;\n};\n\nexport default AlbumDetails;\n","/* eslint-disable no-undef */\nimport styled from \"@emotion/styled\";\nimport { colors, fonts, shadow } from \"../basic\";\nexport const AlbumWrap = styled.div`\n  overflow: hidden;\n  font-family: \"KOTRAHOPE\";\n  padding-top: ${props => props.paddingTop + \"px\"};\n\n  width: ${props => props.width + \"%\"};\n  margin: 0 auto;\n  height: ${props => props.height + \"%\"};\n  input {\n    padding: 8px;\n    border: 1px solid ${colors.grayLight};\n    border-radius: 10px;\n  }\n  input::placeholder {\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const AlbumTopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 3.75rem;\n  padding: 1.8rem;\n`;\nexport const SearchBar = styled.div`\n  img {\n    position: absolute;\n    width: 5%;\n    right: 30%;\n    height: 100%;\n  }\n`;\nexport const InnerAlbum = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .gallery {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    margin-top: 2.5rem;\n  }\n\n  .gallery-item {\n    width: ${props => props.width + \"rem\"};\n    height: ${props => props.height + \"rem\"};\n    border: 1px solid #ddd;\n    text-align: center;\n    margin-bottom: 7rem;\n  }\n\n  .gallery-item img {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 0.625rem;\n  }\n`;\n// export const HeaderLeft = styled.div`\n\nexport const AlbumList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\n  gap: 0.4rem;\n  margin: 0px auto;\n  position: relative;\n  z-index: 2;\n\n  .image-grid {\n    gap: 1.6rem;\n    margin: 1.6rem;\n    text-align: center;\n  }\n  .image-grid > p {\n    font-size: 1.8rem;\n    margin: 1rem 0;\n    font-family: ${fonts.pretendard};\n    color: ${colors.black};\n  }\n  .image-item {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .image-item img {\n    border-radius: 5%;\n    width: 100%;\n    text-align: center;\n  }\n\n  .loading {\n    height: 10rem;\n    margin: 3rem;\n    text-align: center;\n    font-size: 2rem;\n  }\n`;\n\nexport const SwiperWrap = styled.div`\n  body {\n    background-color: #eee;\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    color: #000;\n    margin: 0;\n    padding: 0;\n  }\n  .swiper-pagination {\n    text-align: center;\n    padding: 0 2rem 0.5rem;\n  }\n  .swiper {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding-top: 40px;\n    padding-bottom: 60px;\n  }\n\n  .swiper-slide {\n    background-position: center;\n    background-size: cover;\n    width: 300px;\n    height: 300px;\n  }\n\n  .swiper-slide img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  margin-top: 2rem;\n  background: #fff;\n\n  border-top: 0.2rem solid ${colors.greenDeep};\n  .rce-container-input {\n    padding: 0 2rem;\n    background-color: #fafafa;\n  }\n`;\n\nexport const AlbumTitle = styled.h3`\n  padding-left: 2.8rem;\n  padding-bottom: 3rem;\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\n    no-repeat left 0.25rem/2.3rem;\n  color: ${colors.greenDeep};\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  height: 4rem;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding: 3.5rem;\n  position: relative;\n  h3 {\n    display: inline-block;\n    font-size: 2.7rem;\n    font-weight: 400;\n    flex: 1;\n    text-align: center;\n  }\n  p {\n    position: absolute;\n    right: 2rem;\n    font-family: Pretendard;\n    font-size: 1.5rem;\n    text-align: right;\n    color: ${colors.grayDeep};\n  }\n`;\n\nexport const MainContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-bottom: 0.2rem solid ${colors.greenDeep};\n`;\n\nexport const DetailsText = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  font-family: Pretendard;\n  font-size: 2rem;\n\n  p {\n    line-height: 1.8;\n    margin: 2rem 0;\n    text-align: center;\n  }\n`;\n\nexport const Footer = styled.div`\n  text-align: right;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.8rem;\n  margin-bottom: 9rem;\n  position: relative;\n  z-index: 10;\n\n  button {\n    margin-left: 1rem;\n  }\n`;\n\nexport const CommentWrap = styled.div`\n  background-color: #fafafa;\n  padding-bottom: 2rem;\n`;\n\nexport const FileListStyle = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nexport const buttonStyle = {\n  position: \"relative\",\n  zIndex: 100,\n};\n","import styled from \"@emotion/styled\";\nimport { colors, shadow } from \"../basic\";\nimport { Button, Modal, Space } from \"antd\";\n// 버튼 기본 스타일 정의\nconst defaultBtnStyle = {\n  fontSize: \"1.8rem\",\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\n  background: \"#fff\",\n  border: 0,\n  padding: \"1rem 1.5rem\",\n  borderRadius: \"1rem\",\n  cursor: \"pointer\",\n  minWidth: \"8rem\",\n};\n\n// 버튼 마우스오버 효과\nconst buttonHover = {\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\n};\n\nexport const BtnWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\n// 색상 별 버튼 style\nexport const GreenBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const OrangeBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.orangeLight};\n  color: ${colors.orangeDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.pinkLight};\n  color: ${colors.pinkDeep};\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const BlueBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.blueLight};\n  color: ${colors.blueDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const RedBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.redLight};\n  color: ${colors.redDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const PurpleBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.purpleLight};\n  color: ${colors.purpleDeep};\n  transition: 0.2s;\n  :hover {\n    ${buttonHover}\n  }\n`;\nexport const GrayBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayLight};\n  color: ${colors.grayDeep};\n  transition: 0.2s;\n  :hover {\n    ${shadow}\n  }\n`;\nexport const BlackBtn = styled.button`\n  ${defaultBtnStyle}\n  background: ${colors.grayDeep};\n  color: ${colors.white};\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메인 배너 버튼\nexport const MainPinkBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffadc7;\n  color: #fe77a2;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\nexport const MainBrownBtn = styled.button`\n  ${defaultBtnStyle}\n  background: #ffcc58;\n  color: #db8400;\n  transition: 0.1s;\n  :hover {\n    ${buttonHover}\n  }\n`;\n\n// 메뉴 접기 버튼\nexport const AllBtn = styled.button`\n  ${defaultBtnStyle}\n  position: absolute;\n  right: -2.5rem;\n  top: 2.5rem;\n  padding: 1rem 0.5rem;\n  font-size: 1.6rem;\n  border-radius: 0 0.5rem 0.5rem 0;\n  min-width: auto;\n  width: 2.5rem;\n  height: 7rem;\n  background: ${colors.greenLight};\n  color: ${colors.greenDeep};\n  z-index: 11;\n  word-break: break-all;\n  line-height: 1;\n`;\n\nexport const StyledeleteModal = styled(Modal)`\n  ant-btn {\n    color: red;\n  }\n`;\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","console","log","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","imgSrc","open","closeLightbox","_jsxs","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","onClick","children","_jsx","src","maxWidth","maxHeight","objectFit","Comment","comments","setComments","useState","message","setMessage","messagesEndRef","useRef","handleSendMessage","newComment","title","type","text","date","Date","useEffect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","CommentWrap","map","comment","index","MessageBox","lockable","dateString","toLocaleTimeString","dataSource","avatar","unread","ref","Input","inputStyle","fontFamily","fonts","kotraHope","fontSize","minheight","color","colors","grayDeep","placeholder","value","onChange","e","target","onKeyPress","key","rightButtons","Button","orangeLight","orangeDeep","IMG_URL","host","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","albumData","setAlbumData","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","navigate","useNavigate","lightbox","setLightbox","swiperElement","document","querySelector","height","AlbumWrap","paddingTop","AlbumTopBar","padding","AlbumTitle","ContentWrap","TitleWrap","MainContent","SwiperWrap","Swiper","loading","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","keyboard","enabled","modules","EffectCoverflow","Pagination","Keyboard","className","item","SwiperSlide","openLightbox","LightBox","DetailsText","Modal","onOk","handleDeleteOk","setTimeout","content","onCancel","handleDeleteCancel","okText","cancelText","handleDeleteSuccessOk","cancelButtonProps","Footer","Link","to","GreenBtn","BlueBtn","PinkBtn","showDeleteModal","AlbumDetails","useParams","DetailsAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","grayLight","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","pretendard","black","_templateObject6","_templateObject7","greenDeep","h3","_templateObject8","_templateObject9","grayBar","_templateObject10","_templateObject11","_templateObject12","_templateObject13","FileListStyle","_templateObject14","defaultBtnStyle","background","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","pinkLight","pinkDeep","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn"],"sourceRoot":""}