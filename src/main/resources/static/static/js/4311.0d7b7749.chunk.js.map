{"version":3,"file":"static/js/4311.0d7b7749.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/common/Comment.js","hooks/useCustomLogin.js","components/album/LightBox.js","components/album/DetailsAlbum.js","pages/album/AlbumDetails.js","styles/album/album.js","styles/ui/buttons.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MessageBox, Input, Button } from \"react-chat-elements\";\r\nimport \"react-chat-elements/dist/main.css\";\r\nimport { colors, fonts } from \"../../styles/basic\";\r\nimport { CommentWrap } from \"../../styles/album/album\";\r\n\r\nconst Comment = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (message) {\r\n      const newComment = {\r\n        title: `선생님`,\r\n        position: \"left\",\r\n        type: \"text\",\r\n        text: message,\r\n        date: new Date(),\r\n      };\r\n      setComments([...comments, newComment]);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [comments]);\r\n\r\n  return (\r\n    <CommentWrap>\r\n      <div>\r\n        {comments.map((comment, index) => (\r\n          <MessageBox\r\n            lockable={true}\r\n            key={index}\r\n            position={comment.title === \"선생님\" ? \"left\" : \"right\"}\r\n            type={\"text\"}\r\n            text={comment.text}\r\n            title={comment.title}\r\n            date={comment.date}\r\n            dateString={comment.date.toLocaleTimeString()}\r\n            dataSource={[\r\n              {\r\n                avatar: \"https://avatars.githubusercontent.com/u/80540635?v=4\",\r\n                unread: 3,\r\n              },\r\n            ]}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef}></div>\r\n      </div>\r\n      <Input\r\n        inputStyle={{\r\n          fontFamily: `${fonts.kotraHope}`,\r\n          fontSize: \"1.5rem\",\r\n          minheight: \"3rem\",\r\n          color: `${colors.grayDeep}`,\r\n        }}\r\n        placeholder=\"내용을 입력하세요...\"\r\n        color={`colors.orangeLight`}\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n        onKeyPress={e => {\r\n          if (e.key === \"Enter\") {\r\n            handleSendMessage();\r\n          }\r\n        }}\r\n        rightButtons={\r\n          <Button\r\n            color={`${colors.orangeLight}`}\r\n            backgroundColor={`${colors.orangeDeep}`}\r\n            text=\"발송\"\r\n            onClick={handleSendMessage}\r\n          />\r\n        }\r\n      />\r\n    </CommentWrap>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import React from \"react\";\r\n\r\nconst LightBox = ({ imgSrc, open, closeLightbox }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        zIndex: 1000,\r\n      }}\r\n      onClick={closeLightbox}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          objectFit: \"contain\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={closeLightbox}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: 1010,\r\n        }}\r\n      >\r\n        닫기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LightBox;\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-cube\";\r\nimport \"swiper/css/pagination\";\r\nimport { EffectCoverflow, Keyboard, Pagination } from \"swiper/modules\";\r\nimport LightBox from \"./LightBox\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  AlbumTitle,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  ContentWrap,\r\n  DetailsText,\r\n  Footer,\r\n  MainContent,\r\n  TitleWrap,\r\n  SwiperWrap,\r\n} from \"../../styles/album/album\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport Comment from \"../common/Comment\";\r\nimport { deleteAlbum, getAlbum } from \"../../api/album/album_api\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nconst path = `${IMG_URL}/pic/album`;\r\n\r\nconst host = `${SERVER_URL}/album`;\r\n// import required modules\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst DetailsAlbum = ({ pno, isLogin }) => {\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n  // 컴포넌트 마운트 시 데이터 불러오기\r\n  console.log(\"pno\", pno);\r\n  useEffect(() => {\r\n    getAlbum({\r\n      pno: pno,\r\n      successFn: data => {\r\n        setAlbumData(data); // 앨범 데이터 상태 업데이트\r\n        setIsLoading(false); // 로딩 상태 업데이트\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setIsLoading(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setIsLoading(false);\r\n      },\r\n    });\r\n  }, [pno]); // pno 값이 변경될 때마다 getAlbum 함수를 호출\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = () => {\r\n    setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\r\n\r\n    deleteAlbum({\r\n      ialbum: pno,\r\n      successFn: res => {\r\n        // 삭제 성공 시 처리\r\n        console.log(\"Album deleted:\", res);\r\n        setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\r\n\r\n        // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\r\n        setTimeout(() => {\r\n          setIsDeleteSuccessModalOpen(false);\r\n          navigate(\"/album\");\r\n        }, 2000);\r\n      },\r\n      failFn: error => {\r\n        // 삭제 실패 시 처리\r\n        Modal.error({\r\n          title: \"앨범 삭제 실패\",\r\n          content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n      errorFn: error => {\r\n        console.error(\"Error deleting album:\", error);\r\n        Modal.error({\r\n          title: \"오류 발생\",\r\n          content:\r\n            \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteSuccessOk = () => {\r\n    setIsDeleteSuccessModalOpen(false);\r\n  };\r\n  const [lightbox, setLightbox] = useState({ open: false, imgSrc: \"\" });\r\n  const openLightbox = imgSrc => setLightbox({ open: true, imgSrc: imgSrc });\r\n  const closeLightbox = () => setLightbox({ open: false, imgSrc: \"\" });\r\n\r\n  // Lightbox 상태에 따라 Swiper 높이 조절\r\n  useEffect(() => {\r\n    const swiperElement = document.querySelector(\".swiper\");\r\n    if (lightbox.open) {\r\n      swiperElement.style.height = \"55vh\";\r\n    } else {\r\n      swiperElement.style.height = \"100%\";\r\n    }\r\n  }, [lightbox.open]);\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40}>\r\n      <AlbumTopBar padding={1}>\r\n        <AlbumTitle>활동앨범</AlbumTitle>\r\n      </AlbumTopBar>\r\n      <ContentWrap>\r\n        <TitleWrap>\r\n          <h3>{albumData.albumTitle}</h3>\r\n          <p>{albumData.createdAt}</p>\r\n        </TitleWrap>\r\n        <MainContent>\r\n          <SwiperWrap>\r\n            <Swiper\r\n              loading=\"swiper-lazy-preloader swiper-lazy-preloader-white\"\r\n              height={200}\r\n              effect={\"coverflow\"}\r\n              grabCursor={true}\r\n              centeredSlides={true}\r\n              slidesPerView={\"auto\"}\r\n              coverflowEffect={{\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n              }}\r\n              pagination={true}\r\n              keyboard={{ enabled: true }} // 키보드 제어 활성화\r\n              modules={[EffectCoverflow, Pagination, Keyboard]} // Keyboard 모듈 추가\r\n              className=\"mySwiper\"\r\n              // style={{ transform: `translate3d(0px, 0px, 0px)` }} //\r\n            >\r\n              {albumData &&\r\n                albumData.albumPic &&\r\n                albumData.albumPic.map((item, index) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img\r\n                      src={`${path}/${pno}/${item}`}\r\n                      onClick={() => openLightbox(`${path}/${pno}/${item}`)}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              <LightBox\r\n                imgSrc={lightbox.imgSrc}\r\n                open={lightbox.open}\r\n                closeLightbox={closeLightbox}\r\n              />\r\n            </Swiper>\r\n          </SwiperWrap>\r\n          <DetailsText>\r\n            <p>{albumData.albumContents}</p>\r\n          </DetailsText>\r\n          <Comment />\r\n        </MainContent>\r\n        {/* 삭제 모달 */}\r\n        <Modal\r\n          title=\"정말 삭제할까요?\"\r\n          open={isDeleteModalOpen}\r\n          onOk={handleDeleteOk}\r\n          onCancel={handleDeleteCancel}\r\n          okText=\"확인\"\r\n          cancelText=\"취소\"\r\n        >\r\n          <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n        </Modal>\r\n\r\n        {/* 삭제 성공 모달 */}\r\n        <Modal\r\n          title=\"삭제 완료\"\r\n          open={isDeleteSuccessModalOpen}\r\n          onOk={handleDeleteSuccessOk}\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          okText=\"확인\"\r\n        >\r\n          <p>삭제가 완료되었습니다.</p>\r\n        </Modal>\r\n        <Footer>\r\n          <Link to=\"/album\">\r\n            <GreenBtn>목록보기</GreenBtn>\r\n          </Link>\r\n          <Link to={`${host}/modify/${pno}`}>\r\n            <BlueBtn>수정</BlueBtn>\r\n          </Link>\r\n          <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n        </Footer>\r\n      </ContentWrap>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default DetailsAlbum;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport DetailsAlbum from \"../../components/album/DetailsAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst AlbumDetails = () => {\r\n  let { pno } = useParams();\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 로그인 상태에서 iteacher 값을 확인합니다.\r\n  return <DetailsAlbum pno={pno} isLogin={isLogin} />;\r\n};\r\nexport default AlbumDetails;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  margin-bottom: 9rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","console","log","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","Comment","comments","setComments","useState","message","setMessage","messagesEndRef","useRef","handleSendMessage","newComment","title","position","type","text","date","Date","useEffect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsxs","CommentWrap","children","map","comment","index","_jsx","MessageBox","lockable","dateString","toLocaleTimeString","dataSource","avatar","unread","ref","Input","inputStyle","fontFamily","fonts","kotraHope","fontSize","minheight","color","colors","grayDeep","placeholder","value","onChange","e","target","onKeyPress","key","rightButtons","Button","orangeLight","backgroundColor","orangeDeep","onClick","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","imgSrc","open","closeLightbox","style","top","left","right","bottom","display","alignItems","justifyContent","zIndex","src","maxWidth","maxHeight","objectFit","IMG_URL","host","initAlbumCommnet","albumTitle","albumContents","albumPic","albumComments","createdAt","albumData","setAlbumData","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteSuccessModalOpen","setIsDeleteSuccessModalOpen","lightbox","setLightbox","swiperElement","document","querySelector","height","AlbumWrap","paddingTop","AlbumTopBar","padding","AlbumTitle","ContentWrap","TitleWrap","MainContent","SwiperWrap","Swiper","loading","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","keyboard","enabled","modules","EffectCoverflow","Pagination","Keyboard","className","item","SwiperSlide","openLightbox","LightBox","DetailsText","Modal","onOk","handleDeleteOk","setTimeout","content","onCancel","handleDeleteCancel","okText","cancelText","handleDeleteSuccessOk","cancelButtonProps","Footer","Link","GreenBtn","BlueBtn","PinkBtn","showDeleteModal","AlbumDetails","useParams","DetailsAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","width","grayLight","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","pretendard","black","_templateObject6","_templateObject7","greenDeep","h3","_templateObject8","_templateObject9","grayBar","_templateObject10","_templateObject11","_templateObject12","_templateObject13","FileListStyle","_templateObject14","defaultBtnStyle","background","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","pinkLight","pinkDeep","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn"],"sourceRoot":""}