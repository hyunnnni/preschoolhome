{"version":3,"file":"static/js/445.ab0f5971.chunk.js","mappings":"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","sources":["api/indivAlbum/indivalbum_api.js","api/individualNotice/indivNoticeApi.js","components/indivAlbum/MyTag.js","pages/indivalbum/IndivAlbumDetails.js","styles/individualNotice/ind.js","styles/individualNotice/inddetail.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\nconst path = `${SERVER_URL}/api/memory`;\n\n// 추억 앨범 교사 전체 조회\nexport const getIndAlbumList = async ({\n  page,\n  iclass,\n  year,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 학부모 전체 조회\nexport const getIndAlbumParentList = async ({\n  page,\n  iclass,\n  ikid,\n  year,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&ikid=${ikid}&year=${year}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 수정 하기.\n// {\n//   \"pics\": [\n//     \"string\"\n//   ],\n//   \"dto\": {\n//     \"delPics\": [\n//       0\n//     ],\n//     \"imemory\": 0,\n//     \"memoryTitle\": \"string\",\n//     \"memoryContents\": \"string\",\n//     \"ikids\": [\n//       0\n//     ]\n//   }\n// }\nexport const putIndAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, product, header);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      console.log(\"res.data : \", res.data);\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    errorFn(console.log(error));\n    // errorFn(\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\n    // );\n  }\n};\n\n// 추억 앨범 등록하기\n// {\n//   \"pics\": [\n//     \"string\"\n//   ],\n//   \"dto\": {\n//     \"ikids\": [\n//       0\n//     ],\n//     \"memoryTitle\": \"string\",\n//     \"memoryContents\": \"string\"\n//   }\n// }\nexport const postIndAlbum = async ({ product, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    console.log(\"res\", res);\n    if (res.code === \"PUSH_FAIL\") {\n      errorFn(\"푸쉬알림에 비동의 상태입니다.\");\n    } else {\n      errorFn(res.message);\n    }\n  }\n};\n\n// 추억 앨범 글 삭제\nexport const deleteIndAlbum = async ({\n  imemory,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // 여기서도 이미지가 추가될 수 있어요.\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(`${path}?imemory=${imemory}`);\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"삭제 호출 오류입니다.\");\n    }\n  } catch (error) {\n    errorFn(\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\n    );\n  }\n};\n\n// 추억 앨범 댓글 등록하기\nexport const postIndAlbumComment = async ({\n  imemory,\n  memoryComment,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.post(\n      `${path}/comment/imemory=${imemory}&memoryComment=${memoryComment}&iteacher=${iteacher}&iparent=${iparent}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 앨범 댓글 삭제하기\nexport const deleteIndAlbumComment = async ({\n  imemoryComment,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    // header 가 필요합니다.\n    const res = await jwtAxios.delete(\n      `${path}/comment/?$imemoryComment=${imemoryComment}&iteacher=${iteacher}iparent=${iparent}`,\n    );\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn();\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 추억 앨범 원아 태그 리스트\nexport const getIndAlubmTagList = async ({\n  page,\n  year,\n  iclass,\n  fromTo,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/tag`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 수정 전 정보 불러오기\nexport const getIndchildrenList = async ({\n  imemory,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?imemory=${imemory}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 추억 앨범 상세 조회\nexport const getIndAlbumDetail = async ({\n  tno,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/detail?imemory=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 검색 GET\n// listall?page=1&search=1\n// export const getIndSearchListAll = async ({\n//   page,\n//   search,\n//   successFn,\n//   failFn,\n//   errorFn,\n// }) => {\n//   try {\n//     const res = await jwtAxios.get(\n//       `${path}/listall?page=${page}&search=${search}`,\n//     );\n//     const status = res.status.toString();\n//     if (status.charAt(0) === \"2\") {\n//       // console.log(\"res.data임 : \", res.data);\n//       successFn(res.data);\n//     } else {\n//       failFn(\"자료 호출 에러입니다.\");\n//     }\n//   } catch (error) {\n//     errorFn(error);\n//     // console.log(error);\n//   }\n// };\n","import jwtAxios from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\nconst path = `${SERVER_URL}/api/notice`;\n\n// 알림장 리스트(학부모)\nexport const getIndParentList = async ({\n  page,\n  year,\n  ikid,\n  fromTo,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&ikid=${ikid}&year=${year}&fromTo=${fromTo}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n// 알림장 리스트(선생님)\nexport const getIndTeacherList = async ({\n  page,\n  year,\n  iclass,\n  fromTo,\n  search,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&fromTo=${fromTo}&search=${search}`,\n    );\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 리스트(원아)\nexport const getIndchildrenList = async ({\n  product,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/tag`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 게시글 등록하기\nexport const postIndNotice = async ({\n  product,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.post(`${path}/tea`, product);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"글 등록 오류\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    console.log(\"res\", res);\n    if (res.code === \"PUSH_FAIL\") {\n      errorFn(\"푸쉬알림에 비동의 상태입니다.\");\n    } else {\n      errorFn(res.message);\n    }\n  }\n};\n\n// 댓글 등록하기\nexport const postIndComment = async ({ obj, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.post(`${path}/comment`, obj);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 댓글 삭제하기\nexport const deleteIndComment = async ({\n  inoticeComment,\n  iteacher,\n  iparent,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const iwriter = () => {\n      if (iteacher) {\n        return `&iteacher=${iteacher}`;\n      }\n      if (iparent) {\n        return `&iparent=${iparent}`;\n      }\n    };\n    const res = await jwtAxios.delete(\n      `${path}/comment?inoticeComment=${inoticeComment}${iwriter()}`,\n    );\n\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn();\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 알림장 게시글 삭제하기\nexport const deleteIndDetail = async ({\n  tno,\n  successDelFn,\n  failDelFn,\n  errorDelFn,\n}) => {\n  try {\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successDelFn(res.data);\n    } else {\n      failDelFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorDelFn(res.message);\n  }\n};\n\n// 알림장 상세\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\n  try {\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res.message);\n  }\n};\n\n// 알림장 게시글 수정하기\nexport const putIndDetail = async ({ data, successFn, failFn, errorFn }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const res = await jwtAxios.put(`${path}`, data, header);\n\n    const status = res.status.toString();\n    console.log(\"res.data\", res.data);\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n\n// 알림장 게시글 수정시 정보 조회하기\nexport const editIndNotice = async ({\n  tno,\n  ikid,\n  successFn,\n  failFn,\n  errorFn,\n}) => {\n  try {\n    const res = await jwtAxios.get(`${path}/edit?inotice=${tno}&ikid=${ikid}`);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n      return res.data;\n    } else {\n      failFn(\"수정 에러입니다.\");\n    }\n  } catch (error) {\n    errorFn(error);\n  }\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { colors, fonts } from \"../../styles/basic\";\n\nconst MyTag = ({ state }) => {\n  const list = state.map(item => item.kidNm);\n  // data.kids\n  const ClassTitle = styled.div`\n    h3 {\n      padding-left: 3.2rem;\n      background-repeat: no-repeat;\n      background-position: left center;\n      background-size: 2.8rem;\n      background-image: url(${process.env.PUBLIC_URL +\n      \"/images/user/userTag.svg\"});\n      font-family: ${fonts.pretendard};\n      font-size: 1.7rem;\n    }\n    h4 {\n      color: black;\n      opacity: 0.5;\n      font-size: 1.7rem;\n    }\n  `;\n\n  return (\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\n    <>\n      <ClassTitle>\n        <h3\n          className={\n            state === 1\n              ? \"hibiscus\"\n              : state === 2\n              ? \"sunflower\"\n              : state === 3\n              ? \"rose\"\n              : state === -1\n              ? \"discharge\"\n              : state === -2\n              ? \"graduation\"\n              : \"none\"\n          }\n        ></h3>\n        <h4>{list.length >= 2 ? `${list} 외 ${list.length - 1}명` : list}</h4>\n      </ClassTitle>\n    </>\n  );\n};\n\nexport default MyTag;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { IMG_URL } from \"../../api/config\";\nimport { getIndAlbumDetail } from \"../../api/indivAlbum/indivalbum_api\";\nimport { deleteIndDetail } from \"../../api/individualNotice/indivNoticeApi\";\nimport MyTag from \"../../components/indivAlbum/MyTag\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport ModalTwoBtn from \"../../components/ui/ModalTwoBtn\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { PageTitle } from \"../../styles/basic\";\nimport { IndBot, IndWrap } from \"../../styles/individualNotice/ind\";\nimport {\n  IndBtnWrap,\n  IndClass,\n  IndDetailContent,\n  IndDetailFile,\n  IndDetailTop,\n  IndDetailWrap,\n} from \"../../styles/individualNotice/inddetail\";\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\n\nconst initData = {\n  inotice: 0,\n  noticeTitle: \"\",\n  noticeContents: \"\",\n  pics: [],\n  comments: [],\n  createdAt: \"\",\n  kidNm: \"\",\n  iclass: 0,\n};\n\nconst IndivAlbumDetails = () => {\n  const navigate = useNavigate();\n  // tno 체크\n  const { tno } = useParams();\n  // 현재 출력 년도, kid 값 params에서 체크\n  const [serchParams, setSearchParams] = useSearchParams();\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n  const page = serchParams.get(\"page\");\n  const iclass = serchParams.get(\"iclass\");\n  // 로그인 정보\n  const { isLogin, isParentLogin } = useCustomLogin();\n  // 연동데이터\n  const [data, setData] = useState(initData);\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n  // 모달창 취소\n  const handleCancel = () => {\n    setDelOpen(false);\n  };\n\n  useEffect(() => {\n    if (!isParentLogin && !isLogin) {\n      // 로그인 안했을때\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n      setIsNavigate(\"/login\");\n    } else {\n      getIndAlbumDetail({ tno, successFn, errorFn });\n    }\n  }, []);\n\n  // Get 연동 결과\n  const successFn = res => {\n    setData({ ...res });\n  };\n  const errorFn = res => {\n    setIsOpen(true);\n    setTitle(\"데이터 오류\");\n    setSubTitle(res);\n  };\n  // 회원별 목록보기\n  const handleClickList = () => {\n    if (isLogin) {\n      navigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`);\n    } else {\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\n    }\n  };\n\n  // 글 삭제\n  const [delOpen, setDelOpen] = useState(false);\n  const handleClickDelete = () => {\n    setDelOpen(true);\n    setTitle(\"정말 삭제할까요?\");\n    setSubTitle(\n      \"삭제된 알림장은 복구할 수 없습니다. \\n 정말 삭제하시겠습니까?\",\n    );\n  };\n  const handleDelOk = () => {\n    deleteIndDetail({ tno, successDelFn, errorDelFn });\n  };\n  const successDelFn = res => {\n    setDelOpen(false);\n    setIsOpen(true);\n    setTitle(\"삭제 완료\");\n    setSubTitle(\"삭제 완료되었습니다.\");\n    isLogin\n      ? setIsNavigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`)\n      : setIsNavigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\n  };\n  const errorDelFn = () => {};\n\n  return (\n    <IndWrap>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n\n      {/* 글삭제 */}\n      <ModalTwoBtn\n        isOpen={delOpen}\n        handleOk={handleDelOk}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      />\n      <PageTitle>추억앨범</PageTitle>\n      <IndDetailWrap>\n        <IndDetailTop>\n          <IndClass>\n            <MyTag state={data.kids} />\n          </IndClass>\n          <h3>{data.memoryTitle}</h3>\n          <IndBot>\n            <div className=\"ind-date\">{data.createdAt.split(\" \")[0]}</div>\n          </IndBot>\n        </IndDetailTop>\n        <IndDetailContent>\n          <pre>{data.memoryContents}</pre>\n        </IndDetailContent>\n        <IndDetailFile>\n          {Array.isArray(data.memoryPic) &&\n            data.memoryPic.map((item, index) => (\n              <Link\n                to={`${IMG_URL}/pic/memory/${data.imemory}/${item}`}\n                key={index}\n                target=\"_blank\"\n              >\n                {item}\n              </Link>\n            ))}\n        </IndDetailFile>\n      </IndDetailWrap>\n      <IndBtnWrap>\n        <GreenBtn onClick={handleClickList}>목록보기</GreenBtn>\n        {isLogin ? (\n          <>\n            {/* <BlueBtn>수정</BlueBtn> */}\n            <PinkBtn onClick={handleClickDelete}>삭제</PinkBtn>\n          </>\n        ) : null}\n      </IndBtnWrap>\n    </IndWrap>\n  );\n};\n\nexport default IndivAlbumDetails;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, ellipsis, fonts, mq } from \"../basic\";\n\nexport const IndWrap = styled.div`\n  position: relative;\n  padding-bottom: 5rem;\n`;\n\nexport const IndListWrap = styled.div`\n  min-height: 60vh;\n`;\n\nexport const IndList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2%;\n`;\n\nexport const IndListBox = styled.div`\n  width: 32%;\n  margin-bottom: 1rem;\n  ${boxStyle}\n  a {\n    display: block;\n    padding: 1.5rem 2rem;\n  }\n  &.notice {\n    background: #fff7f7;\n  }\n  ${mq.mobileBig} {\n    width: 49%;\n  }\n  ${mq.mobileSmall} {\n    width: 100%;\n  }\n`;\n\nexport const IndTop = styled.div`\n  position: relative;\n  border-bottom: 1px solid ${colors.grayBar};\n  padding-bottom: 0.5rem;\n  margin-bottom: 1rem;\n`;\nexport const IndName = styled.div`\n  color: ${colors.grayDeep};\n  margin-bottom: 0.5rem;\n  font-size: 1.4rem;\n`;\nexport const IndTitle = styled.p`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  font-size: 1.5rem;\n  font-weight: 300;\n  margin-bottom: 0.5rem;\n  img {\n    width: 1.6rem;\n    margin-right: 0.5rem;\n  }\n  span {\n    padding-right: 0.5rem;\n  }\n  b {\n    display: inline-block;\n    font-weight: 500;\n  }\n`;\nexport const IndIcon = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0rem;\n  display: flex;\n  gap: 1rem;\n  img {\n    width: 1.8rem;\n  }\n`;\nexport const IndCon = styled.div`\n  min-height: 3rem;\n  font-size: 1.4rem;\n  span {\n    display: block;\n    color: ${colors.grayDeep};\n    ${ellipsis.line2}\n    word-break: break-all;\n  }\n`;\nexport const IndBot = styled.div`\n  display: flex;\n  justify-content: space-between;\n  .ind-date {\n    color: ${colors.grayDeep};\n    padding-left: 2.5rem;\n    background: url(${process.env.PUBLIC_URL +\n      \"/images/common/notice/clock.svg\"})\n      no-repeat top left/ 1.8rem;\n  }\n`;\n\n// 작성자 선택버튼\nexport const FromToBtnWrap = styled.div`\n  display: flex;\n  gap: 1rem;\n  button {\n    padding: 0;\n    color: #888;\n    font-size: 1.4rem;\n    /* border-radius: 0.5rem;\n    border: 1px solid #ccc; */\n\n    :before {\n      content: \"|\";\n      margin-right: 1rem;\n      font-weight: 300;\n      vertical-align: 7%;\n    }\n    :first-of-type:before {\n      display: none;\n    }\n  }\n  .teacher {\n    color: ${props =>\n      props.isLogin && props.fromTo == 1\n        ? \"#222\"\n        : !props.isLogin && props.fromTo == 0\n        ? \"#222\"\n        : \"#888\"};\n    /* background: ${props =>\n      props.isLogin && props.fromTo == 1\n        ? \"#ccc\"\n        : !props.isLogin && props.fromTo == 0\n        ? \"#ccc\"\n        : \"#fff\"}; */\n  }\n  .parent {\n    color: ${props =>\n      props.isLogin && props.fromTo == 0\n        ? \"#222\"\n        : !props.isLogin && props.fromTo == 1\n        ? \"#222\"\n        : \"#888\"};\n    /* background: ${props =>\n      props.isLogin && props.fromTo == 0\n        ? \"#ccc\"\n        : !props.isLogin && props.fromTo == 1\n        ? \"#ccc\"\n        : \"#fff\"}; */\n  }\n\n  ${mq.mobileBig} {\n    margin-top: -2rem;\n  }\n`;\n\n// 탭메뉴\nexport const TabWrap = styled.div`\n  position: relative;\n  border-bottom: 1px solid ${colors.greenDeep};\n  margin-bottom: 2rem;\n\n  a {\n    display: inline-block;\n    padding: 0.8rem 1rem;\n    border-radius: 1rem 1rem 0 0;\n    text-align: center;\n    min-width: 12rem;\n    font-size: 2rem;\n    font-family: ${fonts.kotraHope};\n    color: ${colors.grayDeep};\n    background: #d9d9d9;\n    transition: 0.3s;\n\n    &:hover,\n    &.active {\n      background: ${colors.greenDeep};\n      color: #fff;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { boxStyle, colors, mq } from \"../basic\";\nimport { BtnWrap } from \"../ui/buttons\";\n\nexport const IndDetailWrap = styled.div`\n  position: relative;\n  background: ${colors.white};\n  border: 2px solid ${colors.greenDeep};\n  border-width: 2px 0;\n  margin-top: 3rem;\n`;\n\nexport const IndDetailTop = styled.div`\n  padding: 2rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${colors.grayBar};\n\n  ${mq.mobileBig} {\n    padding: 1rem;\n    flex-wrap: wrap;\n    justify-content: center;\n    h3 {\n      width: 100%;\n      text-align: center;\n      margin: 1rem 0;\n    }\n    p {\n      flex: 2;\n      img {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const IndClass = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n\n  h3 {\n    color: #555;\n  }\n  p {\n    color: #888;\n  }\n`;\nexport const IndDetailContent = styled.div`\n  padding: 4rem;\n  min-height: 30vh;\n`;\nexport const IndDetailFile = styled.div`\n  padding: 4rem;\n  a {\n    display: inline-block;\n    padding: 1rem;\n    padding-left: 4rem;\n    ${boxStyle}\n    background: url(${process.env.PUBLIC_URL + \"/images/common/file_icon.svg\"})\n      no-repeat 1rem center;\n    border: 1px solid ${colors.grayLight};\n    color: ${colors.grayDeep};\n  }\n`;\nexport const IndBtnWrap = styled.div`\n  display: flex;\n  justify-content: right;\n  gap: 1rem;\n  margin-top: 2rem;\n`;\n"],"names":["path","concat","SERVER_URL","getIndAlbumList","async","page","iclass","year","search","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndAlbumParentList","ikid","_ref2","postIndAlbum","product","_ref4","post","console","log","code","getIndAlbumDetail","tno","_ref10","getIndParentList","fromTo","getIndTeacherList","getIndchildrenList","_ref3","postIndNotice","postIndComment","obj","_ref5","deleteIndComment","inoticeComment","iteacher","iparent","_ref6","iwriter","delete","deleteIndDetail","successDelFn","failDelFn","errorDelFn","_ref7","getIndDetail","_ref8","putIndDetail","_ref9","header","headers","put","editIndNotice","state","list","map","item","kidNm","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","fonts","pretendard","_jsx","_Fragment","children","_jsxs","className","length","initData","inotice","noticeTitle","noticeContents","pics","comments","createdAt","IndivAlbumDetails","navigate","useNavigate","useParams","serchParams","setSearchParams","useSearchParams","isLogin","isParentLogin","useCustomLogin","setData","useState","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","delOpen","setDelOpen","IndWrap","ModalOneBtn","handleOk","ModalTwoBtn","handleDelOk","handleCancel","PageTitle","IndDetailWrap","IndDetailTop","IndClass","MyTag","kids","memoryTitle","IndBot","split","IndDetailContent","memoryContents","IndDetailFile","Array","isArray","memoryPic","index","Link","to","IMG_URL","imemory","target","IndBtnWrap","GreenBtn","onClick","handleClickList","PinkBtn","handleClickDelete","IndListWrap","_templateObject2","IndList","_templateObject3","IndListBox","_templateObject4","boxStyle","mq","mobileBig","mobileSmall","IndTop","_templateObject5","colors","grayBar","IndName","_templateObject6","grayDeep","IndTitle","p","_templateObject7","IndIcon","_templateObject8","IndCon","_templateObject9","ellipsis","line2","_templateObject10","FromToBtnWrap","_templateObject11","props","TabWrap","_templateObject12","greenDeep","kotraHope","white","grayLight"],"sourceRoot":""}