{"version":3,"file":"static/js/6680.d98fb9ed.chunk.js","mappings":"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","sources":["api/album/album_api.js","components/ui/ModalOneBtn.js","hooks/useCustomLogin.js","components/album/WriteAlbum.js","pages/album/AlbumWrite.js","styles/album/album.js","styles/ui/buttons.js","styles/ui/warning.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${ialbum}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"product\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path\r\nexport const postAlbumComment = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post();\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"댓글 등록에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  commentInfo,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}&iteacher=${iteacher}&iparent=${iparent}`,\r\n      commentInfo,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn();\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal, Upload } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AlbumWrap, FileListStyle } from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\n\r\nimport { postAlbum } from \"../../api/album/album_api\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\nconst WriteAlbum = ({ albumData, submit }) => {\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList].filter(file => !!file.status);\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const customRequest = ({ onSuccess }) => {\r\n    onSuccess(\"ok\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    Modal.confirm({\r\n      title: \"정말 취소할까요?\",\r\n      content: \"작성된 내용은 저장되지 않습니다.\",\r\n      onOk: handleCancleOk,\r\n      okText: \"확인\",\r\n      cancelText: \"취소\",\r\n      onCancel: () => {},\r\n    });\r\n  };\r\n\r\n  const onFinish = async data => {\r\n    const formData = new FormData();\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iteacher: 1,\r\n          albumTitle: data.albumTitle,\r\n          albumContents: data.albumContents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // fileList에 있는 각 파일을 formData에 추가\r\n    fileList.forEach(file => {\r\n      // originFileObj가 실제 파일 데이터를 가지고 있음\r\n      formData.append(\"pics\", file.originFileObj);\r\n    });\r\n\r\n    // formData를 서버에 전송\r\n    postAlbum({\r\n      product: formData,\r\n      successFn: handleSuccess,\r\n      failFn: handleFailure,\r\n      errorFn: handleError,\r\n    });\r\n  };\r\n\r\n  const handleCancleOk = () => {\r\n    // 여기에 삭제 처리 로직을 추가할 수 있습니다.\r\n\r\n    // 예시: 삭제 처리 후 /album 페이지로 이동\r\n    navigate(\"/album\");\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleSuccess = response => {\r\n    setIsModalVisible(true);\r\n    // 성공적으로 업로드 완료 후 처리할 작업을 추가할 수 있습니다.\r\n  };\r\n\r\n  const handleFailure = errorMessage => {\r\n    // 업로드 실패 시 처리할 작업을 추가할 수 있습니다.\r\n    Modal.error({\r\n      title: \"앨범 업로드 실패\",\r\n      content: errorMessage,\r\n    });\r\n  };\r\n\r\n  const handleError = error => {\r\n    Modal.error({\r\n      title: \"앨범 업로드 중 오류 발생\",\r\n      content:\r\n        \"서버 오류 또는 네트워크 문제가 발생했습니다. 다시 시도해주세요.\",\r\n    });\r\n  };\r\n\r\n  // 업로드 칸 스타일을 수정하기 위한 변수\r\n  const uploadAreaStyle = {\r\n    height: \"150px\",\r\n    lineHeight: \"150px\",\r\n  };\r\n\r\n  return (\r\n    <AlbumWrap paddingTop={40} width={100} height={100}>\r\n      <PageTitle>활동앨범</PageTitle>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 560,\r\n          padding: 16,\r\n          borderTop: \"1.5px solid #00876D\",\r\n          borderBottom: \"1.5px solid #00876D\",\r\n          background: \"#FAFAFA\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Form form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"albumTitle\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"제목을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"제목 입력\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{ height: \"150px\" }}\r\n            name=\"albumContents\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"내용 입력\"\r\n              style={{ height: \"150px\" }}\r\n            />\r\n          </Form.Item>\r\n          <FileListStyle>\r\n            <Upload.Dragger\r\n              action={`${path}`}\r\n              listType=\"picture\"\r\n              fileList={fileList}\r\n              onChange={handleChange}\r\n              customRequest={customRequest}\r\n              className=\"upload-list-inline\"\r\n              multiple={true}\r\n              style={uploadAreaStyle}\r\n            >\r\n              <Button icon={<UploadOutlined />}>업로드 </Button>\r\n            </Upload.Dragger>\r\n          </FileListStyle>\r\n          <div\r\n            style={{\r\n              paddingTop: 15,\r\n              float: \"right\",\r\n              // position: \"absolute\",\r\n              // background: \"red\",\r\n            }}\r\n          >\r\n            <GreenBtn htmlType=\"submit\">등록</GreenBtn>\r\n\r\n            <PinkBtn\r\n              onClick={handleCancelConfirmation}\r\n              style={{ marginLeft: 20 }}\r\n            >\r\n              취소\r\n            </PinkBtn>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n\r\n      <Link to=\"/album\">\r\n        <Modal\r\n          title=\"등록 완료\"\r\n          open={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"확인\"\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={350}\r\n        >\r\n          <p>성공적으로 등록되었습니다.</p>\r\n        </Modal>\r\n      </Link>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default WriteAlbum;\r\n","import { useEffect, useState } from \"react\";\r\nimport WriteAlbum from \"../../components/album/WriteAlbum\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nconst initAlbumWrite = [\r\n  {\r\n    pics: [\"string\"],\r\n    dto: {\r\n      iteacher: 0,\r\n      albumTitle: \"string\",\r\n      albumContents: \"string\",\r\n    },\r\n  },\r\n];\r\n\r\nconst AlbumWrite = () => {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n  const { isLogin } = useCustomLogin(); // 로그인 상태를 가져옵니다.\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 로그인 상태가 false라면 로그인 페이지로 리다이렉트합니다.\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      setIsOpen(true);\r\n      setTitle(\"교사 전용 페이지\");\r\n      setSubTitle(\"선생님만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  });\r\n  // 로그인 상태가 true라면 글쓰기 컴포넌트를 렌더링합니다.\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <WriteAlbum isLogin={isLogin} submit=\"등록\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlbumWrite;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  margin-bottom: 9rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, shadow } from \"../basic\";\r\nimport { Button, Modal, Space } from \"antd\";\r\n// 버튼 기본 스타일 정의\r\nconst defaultBtnStyle = {\r\n  fontSize: \"1.8rem\",\r\n  fontFamily: `\"KOTRAHOPE\", \"Pretendard\", sans-serif`,\r\n  background: \"#fff\",\r\n  border: 0,\r\n  padding: \"1rem 1.5rem\",\r\n  borderRadius: \"1rem\",\r\n  cursor: \"pointer\",\r\n  minWidth: \"8rem\",\r\n};\r\n\r\n// 버튼 마우스오버 효과\r\nconst buttonHover = {\r\n  boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const BtnWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\n// 색상 별 버튼 style\r\nexport const GreenBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const OrangeBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.orangeLight};\r\n  color: ${colors.orangeDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.pinkLight};\r\n  color: ${colors.pinkDeep};\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const BlueBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.blueLight};\r\n  color: ${colors.blueDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const RedBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.redLight};\r\n  color: ${colors.redDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const PurpleBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.purpleLight};\r\n  color: ${colors.purpleDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\nexport const GrayBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayLight};\r\n  color: ${colors.grayDeep};\r\n  transition: 0.2s;\r\n  :hover {\r\n    ${shadow}\r\n  }\r\n`;\r\nexport const BlackBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: ${colors.grayDeep};\r\n  color: ${colors.white};\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메인 배너 버튼\r\nexport const MainPinkBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffadc7;\r\n  color: #fe77a2;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\nexport const MainBrownBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  background: #ffcc58;\r\n  color: #db8400;\r\n  transition: 0.1s;\r\n  :hover {\r\n    ${buttonHover}\r\n  }\r\n`;\r\n\r\n// 메뉴 접기 버튼\r\nexport const AllBtn = styled.button`\r\n  ${defaultBtnStyle}\r\n  position: absolute;\r\n  right: -2.5rem;\r\n  top: 2.5rem;\r\n  padding: 1rem 0.5rem;\r\n  font-size: 1.6rem;\r\n  border-radius: 0 0.5rem 0.5rem 0;\r\n  min-width: auto;\r\n  width: 2.5rem;\r\n  height: 7rem;\r\n  background: ${colors.greenLight};\r\n  color: ${colors.greenDeep};\r\n  z-index: 11;\r\n  word-break: break-all;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const StyledeleteModal = styled(Modal)`\r\n  ant-btn {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","console","log","getlistAll","page","_ref2","putAlbum","product","_ref4","header","headers","put","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref7","delete","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","albumData","submit","form","Form","useForm","fileList","setFileList","useState","isModalVisible","setIsModalVisible","handleCancleOk","handleSuccess","handleFailure","errorMessage","content","handleError","AlbumWrap","height","PageTitle","style","padding","borderTop","borderBottom","background","marginTop","onFinish","formData","FormData","dto","Blob","JSON","stringify","iteacher","albumTitle","albumContents","append","forEach","file","originFileObj","Item","name","rules","required","message","Input","placeholder","TextArea","FileListStyle","Upload","Dragger","action","listType","onChange","info","filter","customRequest","onSuccess","className","multiple","lineHeight","Button","icon","UploadOutlined","float","GreenBtn","htmlType","handleCancelConfirmation","confirm","okText","cancelText","onCancel","marginLeft","Link","handleCancel","cancelButtonProps","AlbumWrite","setTitle","setSubTitle","setIsOpen","isNavigate","setIsNavigate","useEffect","_Fragment","ModalOneBtn","WriteAlbum","styled","div","_templateObject","_taggedTemplateLiteral","props","colors","grayLight","grayDeep","AlbumTopBar","_templateObject2","SearchBar","_templateObject3","AlbumList","_templateObject4","_templateObject5","fonts","pretendard","black","SwiperWrap","_templateObject6","ContentWrap","_templateObject7","greenDeep","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","grayBar","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","CommentWrap","_templateObject13","_templateObject14","defaultBtnStyle","fontSize","fontFamily","border","borderRadius","cursor","minWidth","buttonHover","boxShadow","BtnWrap","button","greenLight","OrangeBtn","orangeLight","orangeDeep","pinkLight","pinkDeep","BlueBtn","blueLight","blueDeep","PurpleBtn","redLight","redDeep","purpleLight","purpleDeep","GrayBtn","shadow","MainPinkBtn","white","MainBrownBtn","AllBtn","CheckOutlined","ref","React","AntdIcon","_extends","CheckOutlinedSvg"],"sourceRoot":""}