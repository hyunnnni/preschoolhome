{"version":3,"file":"static/js/6988.a8c77dbc.chunk.js","mappings":"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","sources":["pages/user/ParentEdit.js","pages/user/MyPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Modal } from \"antd\";\nimport { getParentInfo, putParentInfo } from \"../../api/user/userApi\";\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\nimport { FlexBox } from \"../../styles/user/mypage\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport { useNavigate } from \"react-router\";\n\nconst initState = {\n  parentNm: \"\",\n  phoneNb: \"\",\n  uid: \"\",\n  prEmail: \"\",\n  upw: \"\",\n};\nconst ParentEdit = ({ open, handleCancel }) => {\n  const navigate = useNavigate();\n\n  // 안내창오픈여부\n  const [isOpen, setIsOpen] = useState(false);\n  //수정창 오픈여부\n  const [isEditOpen, setIsEditOpen] = useState(open);\n\n  // 모달텍스트\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n\n  const [form] = Form.useForm();\n\n  const onFinish = value => {\n    const obj = {\n      parentNm: value.parentNm,\n      phoneNb: value.phoneNb,\n      prEmail: value.prEmail,\n      upw: value.upw,\n    };\n    putParentInfo({ obj, successEditFn, failEditFn, errorEditFn });\n  };\n\n  const successEditFn = result => {\n    setIsOpen(true);\n    setTitle(\"수정 완료\");\n    setSubTitle(\"정보가 수정되었습니다.\");\n    setIsEditOpen(false);\n  };\n  const failEditFn = result => {\n    setIsOpen(true);\n    setTitle(\"수정 실패\");\n    setSubTitle(result);\n  };\n  const errorEditFn = result => {\n    setIsOpen(true);\n    setTitle(\"수정 실패\");\n    setSubTitle(result);\n  };\n\n  useEffect(() => {\n    getParentInfo({ successFn, failFn, errorFn });\n  }, []);\n\n  const successFn = result => {\n    console.log(\"성공\", result);\n    form.setFieldsValue(result);\n  };\n  const failFn = result => {\n    setIsOpen(true);\n    setTitle(\"데이터 애러\");\n    setSubTitle(\n      \"데이터를 가져오는데 실패했습니다. \\n 잠시후 다시 시도해주세요.\",\n    );\n  };\n  const errorFn = result => {\n    setIsOpen(true);\n    setTitle(\"서버 에러\");\n    setSubTitle(result);\n  };\n  const handleOk = () => {\n    setIsOpen(false);\n  };\n  const modalStyles = {\n    footer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      gap: \"2rem\",\n    },\n    body: {\n      paddingTop: \"2rem\",\n    },\n  };\n  return (\n    <>\n      <Modal\n        open={isEditOpen}\n        onCancel={handleCancel}\n        closeIcon={null}\n        width={400}\n        footer={<></>}\n        styles={modalStyles}\n      >\n        <ModalTitle>\n          <h3>학부모 정보 수정</h3>\n        </ModalTitle>\n        <ModalBody>\n          <Form form={form} name=\"parentedit\" onFinish={onFinish}>\n            <Form.Item\n              name=\"uid\"\n              style={{ marginBottom: 20 }}\n              rules={[\n                {\n                  required: true,\n                  message: \"아이디를 입력해주세요.\",\n                },\n              ]}\n            >\n              <Input disabled />\n            </Form.Item>\n            <Form.Item\n              name=\"parentNm\"\n              style={{ marginBottom: 20 }}\n              rules={[\n                {\n                  required: true,\n                  message: \"이름을 입력해주세요.\",\n                },\n              ]}\n            >\n              <Input placeholder=\"이름 입력\" />\n            </Form.Item>\n            <Form.Item\n              name=\"phoneNb\"\n              style={{ marginBottom: 20 }}\n              rules={[\n                {\n                  required: true,\n                  message: \"전화번호를 입력해주세요.\",\n                },\n              ]}\n            >\n              <Input placeholder=\"전화번호 입력\" />\n            </Form.Item>\n            <Form.Item\n              name=\"prEmail\"\n              style={{ marginBottom: 20 }}\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"올바른 E-mail 양식이 아닙니다.\",\n                },\n                {\n                  required: true,\n                  message: \"이메일을 입력해주세요.\",\n                },\n              ]}\n            >\n              <Input placeholder=\"이메일 입력\" />\n            </Form.Item>\n            <Form.Item\n              name=\"upw\"\n              style={{ marginBottom: 20 }}\n              rules={[\n                {\n                  required: true,\n                  message: \"새로운 비밀번호를 입력해주세요.\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.Password placeholder=\"새로운 비밀번호 입력\" />\n            </Form.Item>\n            <Form.Item\n              name=\"confirm\"\n              style={{ marginBottom: 20 }}\n              dependencies={[\"upw\"]}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: \"비밀번호를 한번 더 입력해주세요.\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"upw\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\n                        \"입력한 비밀번호와 일치하지 않습니다. 다시 작성해주세요.\",\n                      ),\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password placeholder=\"새로운 비밀번호 확인\" />\n            </Form.Item>\n            <FlexBox style={{ justifyContent: \"center\" }}>\n              <PinkBtn type=\"submit\">등록</PinkBtn>\n              <OrangeBtn type=\"button\" onClick={handleCancel}>\n                취소\n              </OrangeBtn>\n            </FlexBox>\n          </Form>\n        </ModalBody>\n      </Modal>\n\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n    </>\n  );\n};\n\nexport default ParentEdit;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { ContentInner, PageTitle } from \"../../styles/basic\";\nimport { Button, Dropdown, Form, Input } from \"antd\";\nimport {\n  DetailBadge,\n  DetailInfo,\n  FlexBox,\n  MyContentWrap,\n  MypageWrap,\n  TitleWrap,\n} from \"../../styles/user/mypage\";\nimport { BtnWrap, GrayBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\nimport MyProfileComponent from \"../../components/user/mypage/MyProfileComponent\";\nimport MyPhysicalComponent from \"../../components/user/mypage/MyPhysicalComponent\";\nimport MyBadge from \"../../components/user/mypage/MyBadge\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport { useNavigate } from \"react-router\";\nimport { getMypage, patchParent, postKidCode } from \"../../api/user/userApi\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport ModalTwoBtn from \"../../components/ui/ModalTwoBtn\";\nimport ParentEdit from \"./ParentEdit\";\nimport { refreshJWT } from \"../../util/jwtUtil\";\n\nconst initState = {\n  kidNm: \"\",\n  iclass: 0,\n  gender: 0,\n  profile: \"546fe34c-bf55-46c1-9f0a-2e715edf8c61.jpg\",\n  birth: \"\",\n  address: \"\",\n  growths: [\n    {\n      height: 0,\n      weight: 0,\n      bodyDate: \"\",\n      growth: 0,\n      growthDate: \"\",\n      growthMemo: \"\",\n    },\n  ],\n  parents: [\n    {\n      iparent: 0,\n      uid: \"\",\n      parentNm: \"\",\n      phoneNb: \"\",\n      irelation: 0,\n    },\n  ],\n  memo: \".\",\n  emerNm: \"\",\n  emerNb: \"\",\n};\n\nconst MyPage = () => {\n  const navigate = useNavigate();\n  const [serchParams, setSearchParams] = useSearchParams();\n  // 현재 출력 년도, kid 값 체크\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const { loginState, isParentLogin, doLogout } = useCustomLogin();\n  const ikidList = loginState.kidList;\n\n  // ikid 값만 추출하여 파라미터값과 비교\n  const kidCheck = Array.isArray(ikidList) && ikidList.map(item => item.ikid);\n\n  // 년도 선택\n  const currentYear = new Date().getFullYear();\n  const startYear = 2020;\n  const yearArr = [];\n  for (let yearNum = startYear; yearNum <= currentYear; yearNum++) {\n    yearArr.push({\n      key: yearNum.toString(),\n      label: <Link to={`/mypage?year=${yearNum}&ikid=${ikid}`}>{yearNum}</Link>,\n    });\n  }\n\n  // 아이 선택\n  const items =\n    Array.isArray(ikidList) &&\n    ikidList.map(item => {\n      return {\n        key: item.ikid.toString(),\n        label: (\n          <Link to={`/mypage?year=${year}&ikid=${item.ikid}`}>\n            {item.kidNm}\n          </Link>\n        ),\n      };\n    });\n\n  // 아이 마이페이지 데이터\n  const [myData, setMyData] = useState(initState);\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 마이페이지 데이터 가져오기\n  useEffect(() => {\n    // 예외처리\n    if (!isParentLogin) {\n      // 학부모 계정이 아닐경우\n      setTitle(\"학부모 전용페이지\");\n      setSubTitle(\"학부모회원만 이용할 수 있는 서비스 입니다.\");\n      setIsOpen(true);\n      setIsNavigate(-1);\n      return;\n    } else if (!year || !ikid) {\n      // 년도, 아이 pk 가 주소에 없을경우\n      setTitle(\"잘못된 경로\");\n      setSubTitle(\"잘못된 경로입니다. 다시 시도해주세요.\");\n      setIsOpen(true);\n      setIsNavigate(-1);\n      return;\n    } else if (ikid === \"0\") {\n      // 연결된 아이가 없을경우\n      setTitle(\"학부모 전용 페이지\");\n      setSubTitle(\"연결된 원생 정보가 없습니다. \\n 관리자에게 문의해주세요.\");\n      setIsNavigate(-1);\n      setIsOpen(true);\n      return;\n    } else {\n      getMypage({ year, ikid, successFn, errorFn });\n    }\n  }, [initState, year, ikid]);\n\n  // 데이터연동 성공\n  const successFn = result => {\n    // 나와 연결된 아이가 맞는지 확인 후 데이터 가져옴\n    if (!kidCheck.includes(parseInt(ikid))) {\n      setTitle(\"조회 실패\");\n      setSubTitle(\"본인의 아이 정보만 확인 가능합니다.\");\n      setIsOpen(true);\n      setIsNavigate(-1);\n      return;\n    } else {\n      setMyData(result);\n    }\n  };\n\n  // 데이터연동 실패\n  const errorFn = result => {\n    setIsOpen(true);\n    setTitle(\"조회 실패\");\n    setSubTitle(result);\n    setIsNavigate(-1);\n  };\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n  // 모달창 취소\n  const handleCancel = () => {\n    setIsEditOpen(false);\n    setCodeOpen(false);\n    setDelOpen(false);\n  };\n\n  // 학부모수정\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [editKey, setEditKey] = useState(0);\n  const onParentEditClick = () => {\n    setIsEditOpen(true);\n    setEditKey(prevKey => prevKey + 1);\n  };\n\n  // 아이추가\n  const [codeOpen, setCodeOpen] = useState(false);\n  const [code, setCode] = useState({ code: \"\" });\n  const onCodeAddClick = () => {\n    setCodeOpen(true);\n    setTitle(\"아이 추가\");\n    setSubTitle(\"식별코드를 입력해주세요.\");\n  };\n  const formRef = useRef();\n  const handleExternalSubmit = () => {\n    formRef.current.submit();\n  };\n  const onValuesChange = values => {\n    setCode(values);\n  };\n  const onFinishFailed = errorInfo => {\n    // console.log(\"Failed:\", errorInfo);\n  };\n  const onFinish = values => {\n    postKidCode({ code, successAddFn, errorAddFn });\n  };\n\n  // 아이추가 결과\n  const successAddFn = res => {\n    setCodeOpen(false);\n    setIsOpen(true);\n    setTitle(\"추가 완료\");\n    setSubTitle(\n      \"추가가 완료되었습니다. \\n 업데이트를 위하여 다시 로그인해주세요.\",\n    );\n    setIsNavigate(\"/login\");\n    doLogout();\n  };\n  const errorAddFn = res => {\n    setIsOpen(true);\n    setTitle(\"추가 실패\");\n    setSubTitle(res);\n    setCodeOpen(false);\n  };\n  // 회원탈퇴\n  const [delOpen, setDelOpen] = useState(false);\n  const handleClickDelete = () => {\n    console.log(\"탈퇴\");\n\n    setDelOpen(true);\n    setTitle(\"정말 탈퇴할까요?\");\n    setSubTitle(\"삭제된 계정은 복구할 수 없습니다. \\n 정말 탈퇴하시겠습니까?\");\n  };\n  const handleDelOk = () => {\n    patchParent({ successDelFn, errorDelFn });\n  };\n\n  const successDelFn = res => {\n    console.log(res);\n    setIsOpen(true);\n    setTitle(\"탈퇴 완료\");\n    setSubTitle(\"탈퇴가 완료되었습니다. \\n 메인페이지로 이동합니다.\");\n    setIsNavigate(\"/\");\n    doLogout();\n  };\n  const errorDelFn = res => {\n    console.log(res);\n    setIsOpen(true);\n    setTitle(\"탈퇴 실패\");\n    setSubTitle(res);\n  };\n\n  return (\n    <ContentInner>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      {/* 식별코드 입력창 */}\n      <ModalTwoBtn\n        isOpen={codeOpen}\n        handleOk={handleExternalSubmit}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      >\n        <Form\n          ref={formRef}\n          name=\"account\"\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onValuesChange={onValuesChange}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            name=\"code\"\n            rules={[\n              {\n                required: true,\n                message: \"식별코드를 입력해주세요. (최대 15글자)\",\n                max: 15,\n              },\n            ]}\n          >\n            <Input size=\"large\" placeholder=\"코드입력\" />\n          </Form.Item>\n        </Form>\n      </ModalTwoBtn>\n      {/* 학부모정보 수정창 */}\n      {isEditOpen && (\n        <ParentEdit\n          open={isEditOpen}\n          handleCancel={handleCancel}\n          key={editKey}\n        />\n      )}\n      {/* 회원탈퇴 */}\n      <ModalTwoBtn\n        isOpen={delOpen}\n        handleOk={handleDelOk}\n        handleCancel={handleCancel}\n        title={title}\n        subTitle={subTitle}\n      />\n      <MypageWrap>\n        {/* 마이페이지 상단 버튼 */}\n        <TitleWrap>\n          <PageTitle>마이페이지</PageTitle>\n          <FlexBox>\n            <Dropdown menu={{ items: yearArr }}>\n              <Button>\n                {year}\n                <DownOutlined />\n              </Button>\n            </Dropdown>\n            <Dropdown menu={{ items }}>\n              <Button>\n                {myData.kidNm}\n                <DownOutlined />\n              </Button>\n            </Dropdown>\n            <BtnWrap>\n              <GrayBtn\n                onClick={e => {\n                  onCodeAddClick(e);\n                }}\n              >\n                아이추가\n              </GrayBtn>\n              <GrayBtn\n                onClick={e => {\n                  navigate(\n                    `/ind?year=${currentYear}&page=1&ikid=${\n                      ikidList[0] ? ikidList[0].ikid : 0\n                    }`,\n                  );\n                }}\n              >\n                알림장\n              </GrayBtn>\n              <GreenBtn onClick={onParentEditClick}>학부모정보수정</GreenBtn>\n              <PinkBtn onClick={handleClickDelete}>회원탈퇴</PinkBtn>\n            </BtnWrap>\n          </FlexBox>\n        </TitleWrap>\n        {/* 마이페이지 내용 시작 */}\n        <MyContentWrap>\n          {/* 프로필 */}\n          <MyProfileComponent ilevel={parent} ikid={ikid} myData={myData} />\n          {/* 연결계정 */}\n          {/* 상세정보 */}\n          <DetailInfo>\n            <TitleWrap>\n              <PageTitle>{year}년 상세정보</PageTitle>\n            </TitleWrap>\n            {/* 상세정보 - 신체정보 */}\n            <MyPhysicalComponent myData={myData} />\n            {/* 상세정보 - 칭찬뱃지 */}\n            <DetailBadge>\n              <MyBadge\n                keywordValue={\n                  myData.growths[0] ? myData.growths[0].growth : null\n                }\n                text={myData.growths[0] ? myData.growths[0].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[1] ? myData.growths[1].growth : null\n                }\n                text={myData.growths[1] ? myData.growths[1].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[2] ? myData.growths[2].growth : null\n                }\n                text={myData.growths[2] ? myData.growths[2].growthMemo : \"\"}\n              />\n              <MyBadge\n                keywordValue={\n                  myData.growths[3] ? myData.growths[3].growth : null\n                }\n                text={myData.growths[3] ? myData.growths[3].growthMemo : \"\"}\n              />\n            </DetailBadge>\n          </DetailInfo>\n        </MyContentWrap>\n      </MypageWrap>\n    </ContentInner>\n  );\n};\n\nexport default MyPage;\n"],"names":["_ref","open","handleCancel","useNavigate","isOpen","setIsOpen","useState","isEditOpen","setIsEditOpen","title","setTitle","subTitle","setSubTitle","form","Form","useForm","successEditFn","result","failEditFn","errorEditFn","useEffect","getParentInfo","successFn","failFn","errorFn","console","log","setFieldsValue","_jsxs","_Fragment","children","Modal","onCancel","closeIcon","width","footer","_jsx","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","name","onFinish","value","obj","parentNm","phoneNb","prEmail","upw","putParentInfo","Item","style","marginBottom","rules","required","message","Input","disabled","placeholder","type","hasFeedback","Password","dependencies","_ref2","getFieldValue","validator","_","Promise","reject","Error","resolve","FlexBox","PinkBtn","OrangeBtn","onClick","ModalOneBtn","handleOk","initState","kidNm","iclass","gender","profile","birth","address","growths","height","weight","bodyDate","growth","growthDate","growthMemo","parents","iparent","uid","irelation","memo","emerNm","emerNb","MyPage","navigate","serchParams","setSearchParams","useSearchParams","year","get","ikid","loginState","isParentLogin","doLogout","useCustomLogin","ikidList","kidList","kidCheck","Array","isArray","map","item","currentYear","Date","getFullYear","yearArr","yearNum","push","key","toString","label","Link","to","concat","items","myData","setMyData","isNavigate","setIsNavigate","getMypage","includes","parseInt","setCodeOpen","setDelOpen","editKey","setEditKey","codeOpen","code","setCode","formRef","useRef","successAddFn","res","errorAddFn","delOpen","successDelFn","errorDelFn","ContentInner","ModalTwoBtn","handleExternalSubmit","current","submit","ref","maxWidth","initialValues","remember","values","postKidCode","onValuesChange","onFinishFailed","errorInfo","autoComplete","max","size","ParentEdit","handleDelOk","patchParent","MypageWrap","TitleWrap","PageTitle","Dropdown","menu","Button","DownOutlined","BtnWrap","GrayBtn","e","GreenBtn","onParentEditClick","prevKey","handleClickDelete","MyContentWrap","MyProfileComponent","ilevel","parent","DetailInfo","MyPhysicalComponent","DetailBadge","MyBadge","keywordValue","text"],"sourceRoot":""}