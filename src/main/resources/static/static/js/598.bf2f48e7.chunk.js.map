{"version":3,"file":"static/js/598.bf2f48e7.chunk.js","mappings":"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","sources":["api/album/album_api.js","api/individualNotice/indivNoticeApi.js","components/album/ReadAllAlbum.js","pages/album/Album.js","styles/album/album.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api/album`;\r\n\r\n// ialbum = 세부 글 넘버.\r\n// page = 전체리스트\r\n// ialbumComment = 세부 댓글 넘버\r\n\r\n// 활동앨범 상세조회 get\r\nexport const getAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}?ialbum=${pno}`);\r\n    // console.log(\"res\", res);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data임 : \", res.data);\r\n      successFn({ ...res.data });\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// album/listall?page=1\r\n\r\n// 활동 앨범 전체 조회 get\r\nexport const getlistAll = async ({ page, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/listall?page=${page}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// edit?ialbum=1\r\n// 수정할 앨범 선택시 세부 정보 조회 get\r\nexport const getEditAlbum = async ({ pno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/edit?ialbum=${pno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"자료 호출 에러입니다.\");\r\n    }\r\n  } catch (error) {\r\n    const demo = await axios.get(`/`);\r\n    errorFn(demo.data);\r\n    // console.log(error);\r\n  }\r\n};\r\n\r\n// 수정한 앨범 put 하기.\r\nexport const putAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.put(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"res.data : \", res.data);\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"수정에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(console.log(error));\r\n    // errorFn(\r\n    //   \"정보수정에 실패하였습니다. 서버가 불안정합니다. 잠시 후 다시 시도해주세요.\",\r\n    // );\r\n  }\r\n};\r\n\r\n// 앨범 등록 POST\r\n// path\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAlbum = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await jwtAxios.post(`${path}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 앨범 글 삭제 Delete\r\n// ?ialbum=1\r\nexport const deleteAlbum = async ({ ialbum, successFn, failFn, errorFn }) => {\r\n  try {\r\n    // 여기서도 이미지가 추가될 수 있어요.\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(`${path}?ialbum=${ialbum}`);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"삭제 호출 오류입니다.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\r\n      \"삭제에 실패하였습니다. 서버가 불안정하니 잠시 후 다시 시도해주세요.\",\r\n    );\r\n  }\r\n};\r\n\r\n// 앨범 댓글 등록 POST\r\n// path /comment\r\nexport const postAlbumComment = async ({ obj, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.post(`${path}/comment`, obj);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"댓글 등록에 실패하였습니다. 다시 시도해주세요.\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 앨범 댓글 삭제 Delete\r\n// comment?ialbumComment=0&ialbum=0&iteacher=0&iparent=0\r\nexport const deleteAlbumComment = async ({\r\n  ialbumComment,\r\n  ialbum,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // &iteacher=${iteacher}&iparent=${iparent}\r\n    const iwriter = () => {\r\n      if (iteacher) {\r\n        return `&iteacher=${iteacher}`;\r\n      }\r\n      if (iparent) {\r\n        return `&iparent=${iparent}`;\r\n      }\r\n    };\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment?ialbumComment=${ialbumComment}&ialbum=${ialbum}${iwriter()}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // 화면처리용\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}&fromTo=${fromTo}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  fromTo,\r\n  search,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}&fromTo=${fromTo}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/tea`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import Search from \"antd/es/input/Search\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getlistAll } from \"../../api/album/album_api\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport { UserTopRight } from \"../../styles/adminstyle/guardianlist\";\r\nimport {\r\n  AlbumList,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  SearchBar,\r\n} from \"../../styles/album/album\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport { GreenBtn } from \"../../styles/ui/buttons\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nconst path = `${IMG_URL}/pic/album`;\r\nconst ReadAllAlbum = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalAlbumCount, setTotalAlbumCount] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const loaderRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const { isLogin } = useCustomLogin();\r\n\r\n  const loadImages = useCallback(async () => {\r\n    // 로딩 중이거나 모든 데이터가 로드되었다면 함수를 종료합니다.\r\n    if (\r\n      loading ||\r\n      (totalAlbumCount !== null && items.length >= totalAlbumCount)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    getlistAll({\r\n      page,\r\n      successFn: data => {\r\n        setTotalAlbumCount(data.albumCnt);\r\n        setItems(prevItems => [...prevItems, ...data.list]);\r\n        setPage(prevPage => prevPage + 1);\r\n        setHasMore(data.list.length > 0);\r\n        setLoading(false);\r\n      },\r\n      failFn: message => {\r\n        console.error(message);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n      errorFn: data => {\r\n        console.error(data);\r\n        setLoading(false);\r\n        setHasMore(false);\r\n      },\r\n    });\r\n  }, [loading, totalAlbumCount, items, page]);\r\n\r\n  // Observer 설정\r\n  const handleObserver = useCallback(\r\n    entities => {\r\n      const target = entities[0];\r\n      if (target.isIntersecting && hasMore && !loading) {\r\n        loadImages();\r\n      }\r\n    },\r\n    [loadImages, hasMore, loading],\r\n  );\r\n\r\n  // Observer 인스턴스 생성\r\n  useEffect(() => {\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: \"0px\", // 하단 감지 영역을 위로 올립니다.\r\n      threshold: 0.5, // 필요에 따라 threshold 조정\r\n    };\r\n    const observer = new IntersectionObserver(handleObserver, observerOptions);\r\n    if (loaderRef.current) observer.observe(loaderRef.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [handleObserver]);\r\n\r\n  // 컴포넌트 마운트 시 첫 페이지 데이터 로드\r\n  useEffect(() => {\r\n    loadImages();\r\n  }, []);\r\n\r\n  return (\r\n    <AlbumWrap>\r\n      {/* 메인 콘텐츠 상단 바 컴포넌트 */}\r\n      <AlbumTopBar>\r\n        <PageTitle>활동앨범</PageTitle>\r\n        <SearchBar>\r\n          <UserTopRight>\r\n            <Search\r\n              placeholder=\"제목을 입력하세요.\"\r\n              size={\"large\"}\r\n              allowClear\r\n              // onSearch={value => console.log(value)}\r\n            />\r\n            {isLogin ? (\r\n              <GreenBtn onClick={e => navigate(\"write\")}>글쓰기</GreenBtn>\r\n            ) : null}\r\n          </UserTopRight>\r\n        </SearchBar>\r\n      </AlbumTopBar>\r\n      <AlbumList>\r\n        {items.map(item => (\r\n          <Link\r\n            ref={loaderRef}\r\n            key={item.ialbum}\r\n            to={`/album/details/${item.ialbum}`}\r\n          >\r\n            <ul className=\"image-grid\">\r\n              <li className=\"image-item\">\r\n                <img\r\n                  // height={400}\r\n                  src={`${path}/${item.ialbum}/${item.albumPic}`}\r\n                  alt={item.albumTitle}\r\n                />\r\n              </li>\r\n              <p>{item.albumTitle}</p>\r\n            </ul>\r\n          </Link>\r\n        ))}\r\n        {loading && <Loading className=\"loading\" />}\r\n      </AlbumList>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default ReadAllAlbum;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReadAllAlbum from \"../../components/album/ReadAllAlbum\";\r\nimport {\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api/album/listall`;\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\n\r\nconst Album = () => {\r\n  const navigate = useNavigate();\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isLogin && !isParentLogin) {\r\n      // 로그인하지 않았을 경우\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n    }\r\n  }, [isLogin, isParentLogin]);\r\n\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    if (!isLogin && !isParentLogin) {\r\n      navigate(\"/login\"); // 로그인 페이지로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <ReadAllAlbum />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, fonts, mq, shadow } from \"../basic\";\r\n\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-top: 4rem; */\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n\r\n  ${mq.mobileBig} {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n  .ant-input-affix-wrapper {\r\n    /* width: 20rem; */\r\n    height: 4rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    margin-left: auto;\r\n\r\n    .ant-input-affix-wrapper {\r\n      width: 10rem;\r\n    }\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n\r\nexport const AlbumList = styled.div`\r\n  gap: 2%;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 2;\r\n  > a {\r\n    display: block;\r\n    width: 32%;\r\n    margin-bottom: 3rem;\r\n  }\r\n  .image-grid {\r\n    text-align: center;\r\n    p {\r\n      font-size: 1.8rem;\r\n      margin: 1rem 0;\r\n      color: ${colors.black};\r\n    }\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: #000;\r\n    border-radius: 1rem;\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    overflow: hidden;\r\n    img {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n  ${mq.mobileBig} {\r\n    > a {\r\n      width: 49%;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .image-grid p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 4rem;\r\n    padding-bottom: 6rem;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 30rem;\r\n    height: 30rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: ${fonts.kotraHope};\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 2rem 1rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n\r\n  ${mq.mobileBig} {\r\n    flex-wrap: wrap;\r\n    h3,\r\n    p {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    p {\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n\r\n  pre {\r\n    line-height: 1.5;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    //margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  /* background-color: #fafafa;\r\n  padding-bottom: 2rem; */\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  .ant-btn {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n\r\n// 글작성 페이지 css(앨범, 소식 공통)\r\nexport const WriteWrap = styled.div`\r\n  position: relative;\r\n  background: #fafafa;\r\n  border: 1px solid #f7f7f7;\r\n  border-top: 2px solid ${colors.greenDeep};\r\n  border-bottom: 2px solid ${colors.greenDeep};\r\n  margin: 3rem 0 2rem;\r\n  padding: 2rem;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getAlbum","async","pno","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","axios","getlistAll","page","_ref2","getEditAlbum","_ref3","putAlbum","product","_ref4","header","headers","put","console","log","postAlbum","_ref5","response","post","statusText","deleteAlbum","ialbum","_ref6","delete","postAlbumComment","obj","_ref7","deleteAlbumComment","ialbumComment","iteacher","iparent","_ref8","iwriter","getIndParentList","year","ikid","fromTo","search","message","getIndTeacherList","iclass","postIndNotice","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","getIndDetail","IMG_URL","ReadAllAlbum","items","setItems","useState","loading","setLoading","hasMore","setHasMore","totalAlbumCount","setTotalAlbumCount","setPage","loaderRef","useRef","navigate","useNavigate","isLogin","useCustomLogin","loadImages","useCallback","length","albumCnt","prevItems","list","prevPage","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","disconnect","_jsxs","AlbumWrap","children","AlbumTopBar","_jsx","PageTitle","SearchBar","UserTopRight","Search","placeholder","size","allowClear","GreenBtn","onClick","e","AlbumList","map","item","Link","ref","to","className","src","albumPic","alt","albumTitle","Loading","API_SERVER_HOST","Album","isParentLogin","isOpen","setIsOpen","title","setTitle","subTitle","setSubTitle","_Fragment","ModalOneBtn","handleOk","styled","div","_templateObject","_taggedTemplateLiteral","props","width","height","mq","mobileBig","_templateObject2","_templateObject3","_templateObject4","_templateObject5","colors","black","SwiperWrap","_templateObject6","fonts","kotraHope","ContentWrap","_templateObject7","white","greenDeep","TitleWrap","h3","_templateObject8","_templateObject9","grayBar","grayDeep","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","FileListStyle","_templateObject13","_templateObject14","WriteWrap","_templateObject15"],"sourceRoot":""}