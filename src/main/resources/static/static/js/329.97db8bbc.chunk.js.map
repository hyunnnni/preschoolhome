{"version":3,"file":"static/js/329.97db8bbc.chunk.js","mappings":"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","sources":["components/individualNotice/IndListComponent.js","pages/individualNotice/IndivNotiList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MyClass from \"../user/MyClass\";\nimport {\n  IndBot,\n  IndCon,\n  IndIcon,\n  IndList,\n  IndListBox,\n  IndListWrap,\n  IndName,\n  IndTitle,\n  IndTop,\n} from \"../../styles/individualNotice/ind\";\nimport { Link } from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst IndListComponent = ({ listData, year, ikid, iclass, page }) => {\n  const { loginState, isLogin, isParentLogin } = useCustomLogin();\n  const classState = state => {\n    const className =\n      state === 1\n        ? \"무궁화반\"\n        : state === 2\n        ? \"해바라기반\"\n        : state === 3\n        ? \"장미반\"\n        : state === -1\n        ? \"퇴소\"\n        : state === -2\n        ? \"졸업\"\n        : \"\";\n    return className;\n  };\n\n  return (\n    <IndListWrap>\n      <IndList>\n        {Array.isArray(listData) && listData[0].inotice === 0 ? (\n          <div\n            style={{ textAlign: \"center\", width: \"100%\", marginTop: \"5rem\" }}\n          >\n            조회되는 정보가 없습니다.\n          </div>\n        ) : (\n          Array.isArray(listData) &&\n          listData.map(item => (\n            <IndListBox\n              key={item.inotice}\n              className={item.noticeCheck === 1 ? \"notice\" : \"\"}\n            >\n              <Link\n                to={\n                  isLogin\n                    ? `/ind/details/${item.inotice}?year=${year}&page=${page}&iclass=${iclass}`\n                    : `/ind/details/${item.inotice}?year=${year}&page=${page}&ikid=${ikid}`\n                }\n              >\n                <IndTop>\n                  <IndName>\n                    {classState(item.iclass)} {item.kidNm}\n                  </IndName>\n                  <IndTitle>\n                    {item.noticeCheck === 1 ? (\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/images/common/warning_icon.svg\"\n                        }\n                        alt=\"file\"\n                      />\n                    ) : null}\n                    <span>{item.createdAt.split(\" \")[0]}</span>\n                    <b>{item.noticeTitle}</b>\n                  </IndTitle>\n                  <IndIcon>\n                    {item.picCheck === 1 ? (\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/images/common/file_icon.svg\"\n                        }\n                        alt=\"file\"\n                      />\n                    ) : null}\n                    {item.cmtCheck === 1 ? (\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/images/common/chat_icon.svg\"\n                        }\n                        alt=\"file\"\n                      />\n                    ) : null}\n                  </IndIcon>\n                </IndTop>\n                <IndCon>\n                  <span>{item.noticeContents}</span>\n                </IndCon>\n              </Link>\n            </IndListBox>\n          ))\n        )}\n      </IndList>\n    </IndListWrap>\n  );\n};\n\nexport default IndListComponent;\n","import { Pagination, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { PageNum } from \"../../styles/adminstyle/guardianlist\";\nimport { PageTitle } from \"../../styles/basic\";\nimport {\n  FromToBtnWrap,\n  IndWrap,\n  TabWrap,\n} from \"../../styles/individualNotice/ind\";\nimport { FlexBox, TitleWrap } from \"../../styles/user/mypage\";\nimport {\n  Link,\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from \"react-router-dom\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport IndListComponent from \"../../components/individualNotice/IndListComponent\";\nimport {\n  getIndParentList,\n  getIndTeacherList,\n} from \"../../api/individualNotice/indivNoticeApi\";\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\nimport IndParentBtnComponent from \"../../components/individualNotice/IndParentBtnComponent\";\nimport IndTeacherBtnComponent from \"../../components/individualNotice/IndTeacherBtnComponent\";\nimport Search from \"antd/es/input/Search\";\nimport { GreenBtn } from \"../../styles/ui/buttons\";\n\nconst initData = [\n  {\n    inotice: 0,\n    noticeTitle: \"\",\n    noticeContents: \"\",\n    kidNm: \"\",\n    iclass: 0,\n    picCheck: 0,\n    cmtCheck: 0,\n    noticeCheck: 0,\n    createdAt: \"\",\n  },\n];\n\nconst IndivNotiList = () => {\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [indList, setIndList] = useState(initData);\n  const [fromTo, setFromTo] = useState(3 || serchParams.get(\"fromTo\"));\n  const [count, setCount] = useState(0);\n  const currentYear = new Date().getFullYear();\n\n  // 현재 출력 년도, kid 값 params에서 체크\n  const year = serchParams.get(\"year\");\n  const ikid = serchParams.get(\"ikid\");\n  const page = serchParams.get(\"page\");\n  const iclass = serchParams.get(\"iclass\");\n  const searchValue = serchParams.get(\"searchValue\") || \"\";\n\n  // 로그인 회원 정보에서 아이 리스트 추출\n  const {\n    loginState,\n    isLogin,\n    isParentLogin,\n    isTeacherLogin,\n    isAdminLogin,\n    isAccept,\n  } = useCustomLogin();\n  const ikidList = loginState.kidList;\n\n  // 페이지네이션\n  const handlePageChange = (page, pageSize) => {\n    if (isLogin) {\n      navigate(\n        `/ind?year=${year}&page=${page}&iclass=${iclass}&fromTo=${fromTo}`,\n      );\n    } else {\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}&fromTo=${fromTo}`);\n    }\n  };\n\n  // 모달창 내용\n  const [title, setTitle] = useState(\"\");\n  const [subTitle, setSubTitle] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNavigate, setIsNavigate] = useState();\n\n  // 모달창 확인버튼\n  const handleOk = () => {\n    setIsOpen(false);\n    // 링크이동\n    if (isNavigate) {\n      navigate(isNavigate);\n    }\n  };\n\n  // 데이터 화면출력, 로그인체크\n  useEffect(() => {\n    if (isParentLogin) {\n      // 학부모 로그인\n      if (ikid === \"0\") {\n        // 연결된 아이가 없을경우\n        setTitle(\"연결 오류\");\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n      if (!isAccept) {\n        // 졸업생 학부모일 경우\n        return;\n      }\n\n      getIndParentList({\n        page,\n        year,\n        ikid,\n        fromTo,\n        search: \"\",\n        errorFn,\n        successFn,\n      });\n    } else if (isLogin) {\n      // 선생님 로그인\n      if ((isTeacherLogin && iclass == loginState.iclass) || isAdminLogin) {\n        getIndTeacherList({\n          page,\n          year,\n          iclass,\n          fromTo,\n          search: searchValue,\n          errorFn,\n          successFn,\n        });\n      } else {\n        setTitle(\"접근 제한\");\n        setSubTitle(\"담당한 반 알림장만 열람 가능합니다.\");\n        setIsNavigate(-1);\n        setIsOpen(true);\n        return;\n      }\n    } else {\n      // 로그인 안했을때\n      setIsOpen(true);\n      setTitle(\"회원 전용 페이지\");\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\n      setIsNavigate(\"/login\");\n    }\n  }, [year, ikid, iclass, page, fromTo]);\n\n  // 데이터연동 결과\n  const successFn = res => {\n    setIndList(res.list);\n    setCount(res.noticeCnt);\n  };\n  const errorFn = res => {\n    // console.log(res);\n    setIndList(initData);\n    // setIsOpen(true);\n    // setTitle(\"데이터 없음\");\n    // setSubTitle(res);\n\n    // const url = isLogin\n    //   ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}`\n    //   : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}`;\n\n    // if (fromTo != 3) {\n    //   setFromTo(3);\n    //   setIsNavigate(url);\n    // } else {\n    //   setIsNavigate(-1);\n    // }\n  };\n\n  // 작성자 분류\n  // 식별코드정보값 가져오기\n\n  const handleFromTo = e => {\n    const writer = e.target.value;\n    const url = isLogin\n      ? `/ind?year=${year}&page=1&iclass=${iclass}&searchValue=${searchValue}&fromTo=`\n      : `/ind?year=${year}&page=1&ikid=${ikid}&searchValue=${searchValue}&fromTo=`;\n    const num =\n      isLogin && writer == \"teacher\"\n        ? 1\n        : isLogin && writer == \"parent\"\n        ? 0\n        : isParentLogin && writer == \"parent\"\n        ? 1\n        : isParentLogin && writer == \"teacher\"\n        ? 0\n        : 3;\n    // const num = writer == \"teacher\" ? 1 : writer == \"parent\" ? 0 : 3;\n\n    navigate(url + num, { state: { writer } });\n    setFromTo(num);\n  };\n\n  // 검색\n  const handleSearch = value => {\n    if (isParentLogin) {\n      getIndParentList({\n        page: 1,\n        year,\n        ikid,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, ikid, fromTo, searchValue: value });\n    } else if (isLogin) {\n      // 선생님 로그인\n      getIndTeacherList({\n        page: 1,\n        year,\n        iclass,\n        fromTo,\n        search: value,\n        errorFn: errorSerchFn,\n        successFn,\n      });\n      setSearchParams({ page: 1, year, iclass, fromTo, searchValue: value });\n    }\n  };\n\n  const errorSerchFn = res => {\n    // setIsOpen(true);\n    // setTitle(\"데이터 없음\");\n    // setSubTitle(res);\n    // setSearchParams({ page: 1, year, iclass, fromTo, searchValue: \"\" });\n    setIndList(initData);\n    // console.log(res);\n  };\n\n  console.log(loginState);\n  return (\n    <IndWrap>\n      {/* 안내창 */}\n      <ModalOneBtn\n        isOpen={isOpen}\n        handleOk={handleOk}\n        title={title}\n        subTitle={subTitle}\n      />\n      <TabWrap>\n        <Link to={pathname + search} className=\"active\">\n          알림장\n        </Link>\n        <Link to={`/ind/album${search}`}>추억앨범</Link>\n      </TabWrap>\n      <TitleWrap className=\"ind-btn-wrap\">\n        <FromToBtnWrap fromTo={fromTo} isLogin={isLogin}>\n          <button\n            onClick={e => handleFromTo(e)}\n            value={\"teacher\"}\n            className=\"teacher\"\n          >\n            {isLogin ? \"내가 쓴\" : \"내가 받은\"} 글\n          </button>\n          <button\n            onClick={e => handleFromTo(e)}\n            value={\"parent\"}\n            className=\"parent\"\n          >\n            {isLogin ? \"내가 받은\" : \"내가 쓴\"} 글\n          </button>\n          {fromTo != 3 ? (\n            <button onClick={e => handleFromTo(e)} value={\"all\"}>\n              모아보기\n            </button>\n          ) : null}\n        </FromToBtnWrap>\n        <FlexBox>\n          {/* 권한별 서치버튼 */}\n          {isLogin ? (\n            <IndTeacherBtnComponent\n              iclass={iclass}\n              indList={indList}\n              year={year}\n              page={page}\n            />\n          ) : (\n            <IndParentBtnComponent\n              ikidList={ikidList}\n              indList={indList}\n              ikid={ikid}\n              year={year}\n              page={page}\n              isAccept={isAccept}\n            />\n          )}\n          <Search\n            placeholder=\"이름을 입력하세요.\"\n            allowClear\n            onSearch={value => {\n              handleSearch(value);\n            }}\n            size={\"large\"}\n          />\n          <GreenBtn\n            onClick={() => {\n              navigate(\"/ind/write\");\n            }}\n            className=\"btn\"\n          >\n            글쓰기\n          </GreenBtn>\n        </FlexBox>\n      </TitleWrap>\n      <IndListComponent\n        listData={indList}\n        year={year}\n        ikid={ikid}\n        iclass={iclass}\n        page={page}\n      />\n      <PageNum>\n        <Pagination\n          defaultCurrent={page}\n          total={count}\n          pageSize={12}\n          onChange={handlePageChange}\n        />\n      </PageNum>\n    </IndWrap>\n  );\n};\n\nexport default IndivNotiList;\n"],"names":["_ref","listData","year","ikid","iclass","page","loginState","isLogin","isParentLogin","useCustomLogin","_jsx","IndListWrap","children","IndList","Array","isArray","inotice","style","textAlign","width","marginTop","map","item","IndListBox","className","noticeCheck","_jsxs","Link","to","concat","IndTop","IndName","state","kidNm","IndTitle","src","alt","createdAt","split","noticeTitle","IndIcon","picCheck","cmtCheck","IndCon","noticeContents","initData","IndivNotiList","navigate","useNavigate","pathname","search","useLocation","serchParams","setSearchParams","useSearchParams","indList","setIndList","useState","fromTo","setFromTo","count","setCount","Date","getFullYear","get","searchValue","isTeacherLogin","isAdminLogin","isAccept","ikidList","kidList","title","setTitle","subTitle","setSubTitle","isOpen","setIsOpen","isNavigate","setIsNavigate","useEffect","getIndParentList","errorFn","successFn","getIndTeacherList","res","list","noticeCnt","handleFromTo","e","writer","target","value","url","num","errorSerchFn","console","log","IndWrap","ModalOneBtn","handleOk","TabWrap","TitleWrap","FromToBtnWrap","onClick","FlexBox","IndTeacherBtnComponent","IndParentBtnComponent","Search","placeholder","allowClear","onSearch","handleSearch","size","GreenBtn","IndListComponent","PageNum","Pagination","defaultCurrent","total","pageSize","onChange","handlePageChange"],"sourceRoot":""}