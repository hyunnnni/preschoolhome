{"version":3,"file":"static/js/641.fdeb86a2.chunk.js","mappings":"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","sources":["api/individualNotice/indivNoticeApi.js","components/ui/ModalOneBtn.js","components/ui/ModalTwoBtn.js","components/user/MyClass.js","hooks/useCustomLogin.js","components/individualNotice/IndivDetailsComponent.js","styles/individualNotice/inddetail.js","pages/individualNotice/IndivNotiDetails.js","styles/album/album.js","styles/individualNotice/ind.js","styles/ui/warning.js"],"sourcesContent":["import jwtAxios from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\nconst path = `${SERVER_URL}/api/notice`;\r\n\r\n// 알림장 리스트(학부모)\r\nexport const getIndParentList = async ({\r\n  page,\r\n  year,\r\n  ikid,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&ikid=${ikid}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n// 알림장 리스트(선생님)\r\nexport const getIndTeacherList = async ({\r\n  page,\r\n  year,\r\n  iclass,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.get(\r\n      `${path}?page=${page}&iclass=${iclass}&year=${year}`,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 등록하기\r\nexport const postIndNotice = async ({\r\n  product,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 등록하기\r\nexport const postComment = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await jwtAxios.post(`${path}/comment`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n\r\n// 댓글 삭제하기\r\nexport const deleteComment = async ({\r\n  inoticeComment,\r\n  iteacher,\r\n  iparent,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    // header 가 필요합니다.\r\n    const res = await jwtAxios.delete(\r\n      `${path}/comment/?$inoticeComment={inoticeComment}&iteacher=${iteacher}iparent={iparent}`,\r\n    );\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn();\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 알림장 게시글 삭제하기\r\nexport const deleteIndDetail = async ({\r\n  tno,\r\n  successDelFn,\r\n  failDelFn,\r\n  errorDelFn,\r\n}) => {\r\n  try {\r\n    const res = await jwtAxios.delete(`${path}?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successDelFn(res.data);\r\n    } else {\r\n      failDelFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorDelFn(res.message);\r\n  }\r\n};\r\n\r\n// 알림장 상세\r\nexport const getIndDetail = async ({ tno, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await jwtAxios.get(`${path}/detail?inotice=${tno}`);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res.message);\r\n  }\r\n};\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalOneBtn = ({ isOpen, handleOk, title, subTitle, children }) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalOneBtn;\r\n","import { Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { OrangeBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport { ModalBody, ModalTitle } from \"../../styles/ui/warning\";\r\n\r\nconst ModalTwoBtn = ({\r\n  isOpen,\r\n  handleOk,\r\n  handleCancel,\r\n  title,\r\n  subTitle,\r\n  children,\r\n}) => {\r\n  const modalStyles = {\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      gap: \"2rem\",\r\n    },\r\n    body: {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  };\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      closeIcon={null}\r\n      width={400}\r\n      footer={[\r\n        <PinkBtn key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          확인\r\n        </PinkBtn>,\r\n        <OrangeBtn key=\"back\" onClick={handleCancel}>\r\n          취소\r\n        </OrangeBtn>,\r\n      ]}\r\n      styles={modalStyles}\r\n    >\r\n      <ModalTitle>\r\n        <h3>{title}</h3>\r\n        <p>{subTitle}</p>\r\n      </ModalTitle>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalTwoBtn;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../styles/basic\";\r\n\r\nconst MyClass = ({ state }) => {\r\n  const ClassTitle = styled.div`\r\n    h3 {\r\n      padding-left: 3.2rem;\r\n      background-repeat: no-repeat;\r\n      background-position: left center;\r\n      background-size: 2.8rem;\r\n\r\n      &.hibiscus {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_hibiscus.svg\"});\r\n        color: #ff73a1;\r\n      }\r\n      &.sunflower {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_sunflower.svg\"});\r\n        color: ${colors.orangeDeep};\r\n      }\r\n      &.rose {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_rose.svg\"});\r\n        color: #f5062c;\r\n      }\r\n      &.discharge {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_bag.svg\"});\r\n        color: ${colors.grayDeep};\r\n      }\r\n      &.graduation {\r\n        background-image: url(${process.env.PUBLIC_URL +\r\n        \"/images/user/class_icon_graduation.svg\"});\r\n        color: ${colors.black};\r\n      }\r\n      &.none {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n  `;\r\n  return (\r\n    // 반pk = 1 : 무궁화반,  2 : 해바라기반, 3 : 장미반\r\n    // 재원 상태 구분 = 0 : 재원중, -1 : 졸업, -2 : 퇴소\r\n    <>\r\n      <ClassTitle>\r\n        <h3\r\n          className={\r\n            state === 1\r\n              ? \"hibiscus\"\r\n              : state === 2\r\n              ? \"sunflower\"\r\n              : state === 3\r\n              ? \"rose\"\r\n              : state === -1\r\n              ? \"discharge\"\r\n              : state === -2\r\n              ? \"graduation\"\r\n              : \"none\"\r\n          }\r\n        >\r\n          {state === 1\r\n            ? \"무궁화반\"\r\n            : state === 2\r\n            ? \"해바라기반\"\r\n            : state === 3\r\n            ? \"장미반\"\r\n            : state === -1\r\n            ? \"퇴소\"\r\n            : state === -2\r\n            ? \"졸업\"\r\n            : \"지정된 반이 없습니다.\"}\r\n        </h3>\r\n      </ClassTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyClass;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loginPostAsync,\r\n  logout,\r\n  postParentLoginAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\r\nimport { refreshJWT } from \"../util/jwtUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  // RTK 상태값 업데이트\r\n  const dispatch = useDispatch();\r\n\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = loginState.teacherUid ? true : false;\r\n  const isName = loginState.teacherNm ? true : false;\r\n  const isParentLogin = loginState.iparent ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 학부모 로그인 기능\r\n  const doParentLogin = ({ loginParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = dispatch(\r\n      postParentLoginAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    // console.log(\"페이지 이동\");\r\n    return <Navigate replace to=\"/login\" />;\r\n  };\r\n\r\n  // 액세스 토큰 리프레시 및 업데이트\r\n  const refreshAccessToken = async () => {\r\n    const memberInfo = getCookie(\"member\");\r\n    const { accessToken, refreshToken } = memberInfo;\r\n\r\n    try {\r\n      const newTokens = await refreshJWT(accessToken, refreshToken);\r\n      // 새로운 액세스 토큰으로 기존 쿠키의 accessToken 값만 업데이트\r\n      memberInfo.accessToken = newTokens.accessToken;\r\n      setCookie(\"member\", memberInfo, 1);\r\n      return newTokens.accessToken;\r\n    } catch (error) {\r\n      // 리프레시 실패 처리\r\n      console.error(\"토큰 리프레시 실패:\", error);\r\n      throw error; // 실패한 경우 예외를 다시 던져서 호출자가 처리할 수 있도록 함\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    isName,\r\n    isParentLogin,\r\n    doLogin,\r\n    doLogout,\r\n    doParentLogin,\r\n    moveToPath,\r\n    moveToLogin,\r\n    refreshAccessToken,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { Modal } from \"antd\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-cube\";\r\nimport \"swiper/css/pagination\";\r\n\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AlbumTitle,\r\n  AlbumTopBar,\r\n  AlbumWrap,\r\n  ContentWrap,\r\n  DetailsText,\r\n  Footer,\r\n  MainContent,\r\n  TitleWrap,\r\n  SwiperWrap,\r\n} from \"../../styles/album/album\";\r\nimport Comment from \"../common/Comment\";\r\nimport { IMG_URL, SERVER_URL } from \"../../api/config\";\r\nimport { BlueBtn, GreenBtn, PinkBtn } from \"../../styles/ui/buttons\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport {\r\n  getIndParentList,\r\n  getIndTeacherList,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nconst path = `${IMG_URL}/pic/notice`;\r\n\r\nconst host = `${SERVER_URL}/notice`;\r\n// import required modules\r\nconst initAlbumCommnet = [\r\n  {\r\n    albumTitle: \"\",\r\n    albumContents: \"\",\r\n    albumPic: [],\r\n    albumComments: [],\r\n    createdAt: \"\",\r\n  },\r\n];\r\n\r\nconst IndivDetailsComponent = ({ pno }) => {\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 현재 출력 년도, kid 값 params에서 체크\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n  const iclass = serchParams.get(\"iclass\");\r\n\r\n  // 로그인 체크\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  const [parentList, setParentList] = useState(null);\r\n  const [albumData, setAlbumData] = useState(initAlbumCommnet); // 앨범 데이터 상태\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩 상태\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteSuccessModalOpen, setIsDeleteSuccessModalOpen] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [myData, setMyData] = useState(null);\r\n\r\n  // 컴포넌트 마운트 시 데이터 불러오기\r\n  // console.log(\"pno\", pno);\r\n  // 데이터 화면출력, 로그인체크\r\n  useEffect(() => {\r\n    if (isParentLogin) {\r\n      // 학부모 로그인\r\n      if (ikid === \"0\") {\r\n        // 연결된 아이가 없을경우\r\n        setTitle(\"연결 오류\");\r\n        setSubTitle(\"연결된 원생 정보가 없습니다.\");\r\n        setIsNavigate(-1);\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n      getIndParentList({ page, year, ikid, errorFn, successFn });\r\n    } else if (isLogin) {\r\n      // 선생님 로그인\r\n      getIndTeacherList({ page, year, iclass, errorFn, successFn });\r\n    } else {\r\n      // 로그인 안했을때\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n      setIsNavigate(-1);\r\n    }\r\n  }, [year, ikid, iclass, page]);\r\n\r\n  // 데이터연동 성공\r\n  const successFn = result => {\r\n    setMyData(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const failFn = result => {\r\n    // console.log(result);\r\n  };\r\n  // 데이터연동 실패\r\n  const errorFn = result => {\r\n    setIsOpen(true);\r\n    setTitle(\"조회 실패\");\r\n    setSubTitle(result);\r\n  };\r\n\r\n  const showDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteOk = () => {\r\n    // console.log(\"delete\");\r\n    //   setIsDeleteModalOpen(false); // 삭제 확인 모달 닫기\r\n    //   deleteAlbum({\r\n    //     ialbum: pno,\r\n    //     successFn: res => {\r\n    //       // 삭제 성공 시 처리\r\n    //       console.log(\"Album deleted:\", res);\r\n    //       setIsDeleteSuccessModalOpen(true); // 삭제 성공 모달 열기\r\n    //       // 2초 후에 성공 모달을 닫고 앨범 목록 페이지로 이동\r\n    //       setTimeout(() => {\r\n    //         setIsDeleteSuccessModalOpen(false);\r\n    //         navigate(\"/album\");\r\n    //       }, 2000);\r\n    //     },\r\n    //     failFn: error => {\r\n    //       // 삭제 실패 시 처리\r\n    //       Modal.error({\r\n    //         title: \"앨범 삭제 실패\",\r\n    //         content: \"앨범 삭제에 실패했습니다. 다시 시도해 주세요.\",\r\n    //       });\r\n    //     },\r\n    //     errorFn: error => {\r\n    //       console.error(\"Error deleting album:\", error);\r\n    //       Modal.error({\r\n    //         title: \"오류 발생\",\r\n    //         content:\r\n    //           \"서버 오류로 인해 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\",\r\n    //       });\r\n    //     },\r\n    //   });\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteSuccessOk = () => {\r\n    setIsDeleteSuccessModalOpen(false);\r\n  };\r\n\r\n  // console.log(\"albumData\", albumData);\r\n  return (\r\n    <AlbumWrap paddingTop={40}>\r\n      <AlbumTopBar padding={1}>\r\n        <AlbumTitle>알림장 - 상세</AlbumTitle>\r\n      </AlbumTopBar>\r\n      <ContentWrap>\r\n        <TitleWrap>\r\n          <h3>{albumData.albumTitle}</h3>\r\n          <p>{albumData.createdAt}</p>\r\n        </TitleWrap>\r\n        <MainContent>\r\n          <DetailsText>\r\n            <p>{albumData.albumContents}</p>\r\n          </DetailsText>\r\n          {/* <Comment /> */}\r\n        </MainContent>\r\n        {/* 삭제 모달 */}\r\n        <Modal\r\n          title=\"정말 삭제할까요?\"\r\n          open={isDeleteModalOpen}\r\n          onOk={handleDeleteOk}\r\n          onCancel={handleDeleteCancel}\r\n          okText=\"확인\"\r\n          cancelText=\"취소\"\r\n        >\r\n          <p>삭제된 내용은 복구할 수 없습니다.</p>\r\n        </Modal>\r\n\r\n        {/* 삭제 성공 모달 */}\r\n        <Modal\r\n          title=\"삭제 완료\"\r\n          open={isDeleteSuccessModalOpen}\r\n          onOk={handleDeleteSuccessOk}\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          okText=\"확인\"\r\n        >\r\n          <p>삭제가 완료되었습니다.</p>\r\n        </Modal>\r\n        <Footer>\r\n          <Link to=\"/ind?year=2024&page=1&iclass=0\">\r\n            <GreenBtn>목록보기</GreenBtn>\r\n          </Link>\r\n          {isLogin ? (\r\n            <>\r\n              {/* <Link to={`${host}/modify/${pno}`}>\r\n                <BlueBtn>수정</BlueBtn>\r\n              </Link> */}\r\n              <PinkBtn onClick={showDeleteModal}>삭제</PinkBtn>\r\n            </>\r\n          ) : null}\r\n        </Footer>\r\n      </ContentWrap>\r\n    </AlbumWrap>\r\n  );\r\n};\r\n\r\nexport default IndivDetailsComponent;\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors } from \"../basic\";\r\nimport { BtnWrap } from \"../ui/buttons\";\r\n\r\nexport const IndDetailWrap = styled.div`\r\n  position: relative;\r\n  background: ${colors.white};\r\n  border: 2px solid ${colors.greenDeep};\r\n  border-width: 2px 0;\r\n  margin-top: 3rem;\r\n`;\r\n\r\nexport const IndDetailTop = styled.div`\r\n  padding: 2rem 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n`;\r\n\r\nexport const IndClass = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  h3 {\r\n    color: #555;\r\n  }\r\n`;\r\nexport const IndDetailContent = styled.div`\r\n  padding: 4rem;\r\n  min-height: 30vh;\r\n`;\r\nexport const IndDetailFile = styled.div`\r\n  padding: 4rem;\r\n  a {\r\n    display: inline-block;\r\n    padding: 1rem;\r\n    padding-left: 4rem;\r\n    ${boxStyle}\r\n    background: url(${process.env.PUBLIC_URL + \"/images/common/file_icon.svg\"})\r\n      no-repeat 1rem center;\r\n    border: 1px solid ${colors.grayLight};\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\nexport const IndBtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: right;\r\n  gap: 1rem;\r\n  margin-top: 2rem;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport IndivDetailsComponent from \"../../components/individualNotice/IndivDetailsComponent\";\r\nimport { PageTitle } from \"../../styles/basic\";\r\nimport {\r\n  deleteIndDetail,\r\n  deleteNotice,\r\n  getIndDetail,\r\n} from \"../../api/individualNotice/indivNoticeApi\";\r\nimport { IndBot, IndWrap } from \"../../styles/individualNotice/ind\";\r\nimport {\r\n  IndBtnWrap,\r\n  IndClass,\r\n  IndDetailContent,\r\n  IndDetailFile,\r\n  IndDetailTop,\r\n  IndDetailWrap,\r\n} from \"../../styles/individualNotice/inddetail\";\r\nimport MyClass from \"../../components/user/MyClass\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { IMG_URL } from \"../../api/config\";\r\nimport {\r\n  BlueBtn,\r\n  BtnWrap,\r\n  GreenBtn,\r\n  PinkBtn,\r\n  RedBtn,\r\n} from \"../../styles/ui/buttons\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport ModalOneBtn from \"../../components/ui/ModalOneBtn\";\r\nimport ModalTwoBtn from \"../../components/ui/ModalTwoBtn\";\r\n\r\nconst initData = {\r\n  inotice: 0,\r\n  noticeTitle: \"\",\r\n  noticeContents: \"\",\r\n  pics: [],\r\n  comments: [],\r\n  createdAt: \"\",\r\n  kidNm: \"\",\r\n  iclass: 0,\r\n};\r\n\r\nconst IndivNotiDetails = () => {\r\n  const navigate = useNavigate();\r\n  // tno 체크\r\n  const { tno } = useParams();\r\n  // 현재 출력 년도, kid 값 params에서 체크\r\n  const [serchParams, setSearchParams] = useSearchParams();\r\n  const year = serchParams.get(\"year\");\r\n  const ikid = serchParams.get(\"ikid\");\r\n  const page = serchParams.get(\"page\");\r\n  const iclass = serchParams.get(\"iclass\");\r\n  // 로그인 정보\r\n  const { isLogin, isParentLogin } = useCustomLogin();\r\n  // 연동데이터\r\n  const [data, setData] = useState(initData);\r\n\r\n  // 모달창 내용\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNavigate, setIsNavigate] = useState();\r\n\r\n  // 모달창 확인버튼\r\n  const handleOk = () => {\r\n    setIsOpen(false);\r\n    // 링크이동\r\n    if (isNavigate) {\r\n      navigate(isNavigate);\r\n    }\r\n  };\r\n  // 모달창 취소\r\n  const handleCancel = () => {\r\n    setDelOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isParentLogin && !isLogin) {\r\n      // 로그인 안했을때\r\n      setIsOpen(true);\r\n      setTitle(\"회원 전용 페이지\");\r\n      setSubTitle(\"로그인 회원만 접근 가능합니다.\");\r\n      setIsNavigate(\"/login\");\r\n    } else {\r\n      getIndDetail({ tno, successFn, errorFn });\r\n    }\r\n  }, []);\r\n\r\n  // Get 연동 결과\r\n  const successFn = res => {\r\n    setData({ ...res });\r\n  };\r\n  const errorFn = res => {\r\n    setIsOpen(true);\r\n    setTitle(\"데이터 오류\");\r\n    setSubTitle(res);\r\n  };\r\n  // 회원별 목록보기\r\n  const handleClickList = () => {\r\n    if (isLogin) {\r\n      navigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`);\r\n    } else {\r\n      navigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\r\n    }\r\n  };\r\n\r\n  // 글 삭제\r\n  const [delOpen, setDelOpen] = useState(false);\r\n  const handleClickDelete = () => {\r\n    setDelOpen(true);\r\n    setTitle(\"정말 삭제할까요?\");\r\n    setSubTitle(\r\n      \"삭제된 알림장은 복구할 수 없습니다. \\n 정말 삭제하시겠습니까?\",\r\n    );\r\n  };\r\n  const handleDelOk = () => {\r\n    deleteIndDetail({ tno, successDelFn, errorDelFn });\r\n  };\r\n  const successDelFn = res => {\r\n    setDelOpen(false);\r\n    setIsOpen(true);\r\n    setTitle(\"삭제 완료\");\r\n    setSubTitle(\"삭제 완료되었습니다.\");\r\n    isLogin\r\n      ? setIsNavigate(`/ind?year=${year}&page=${page}&iclass=${iclass}`)\r\n      : setIsNavigate(`/ind?year=${year}&page=${page}&ikid=${ikid}`);\r\n  };\r\n  const errorDelFn = () => {};\r\n\r\n  return (\r\n    <IndWrap>\r\n      {/* 안내창 */}\r\n      <ModalOneBtn\r\n        isOpen={isOpen}\r\n        handleOk={handleOk}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n\r\n      {/* 글삭제 */}\r\n      <ModalTwoBtn\r\n        isOpen={delOpen}\r\n        handleOk={handleDelOk}\r\n        handleCancel={handleCancel}\r\n        title={title}\r\n        subTitle={subTitle}\r\n      />\r\n      <PageTitle>알림장</PageTitle>\r\n      <IndDetailWrap>\r\n        <IndDetailTop>\r\n          <IndClass>\r\n            <MyClass state={data.iclass} /> <h4>{data.kidNm}</h4>\r\n          </IndClass>\r\n          <h3>{data.noticeTitle}</h3>\r\n          <IndBot>\r\n            <div className=\"ind-date\">{data.createdAt.split(\" \")[0]}</div>\r\n          </IndBot>\r\n        </IndDetailTop>\r\n        <IndDetailContent>\r\n          <pre>{data.noticeContents}</pre>\r\n        </IndDetailContent>\r\n        <IndDetailFile>\r\n          {Array.isArray(data.pics) &&\r\n            data.pics.map((item, index) => (\r\n              <Link\r\n                to={`${IMG_URL}/pic/notice/${data.inotice}/${item}`}\r\n                key={index}\r\n                target=\"_blank\"\r\n              >\r\n                {item}\r\n              </Link>\r\n            ))}\r\n        </IndDetailFile>\r\n      </IndDetailWrap>\r\n      <IndBtnWrap>\r\n        <GreenBtn onClick={handleClickList}>목록보기</GreenBtn>\r\n        {isLogin ? (\r\n          <>\r\n            {/* <BlueBtn>수정</BlueBtn> */}\r\n            <PinkBtn onClick={handleClickDelete}>삭제</PinkBtn>\r\n          </>\r\n        ) : null}\r\n      </IndBtnWrap>\r\n    </IndWrap>\r\n  );\r\n};\r\n\r\nexport default IndivNotiDetails;\r\n","/* eslint-disable no-undef */\r\nimport styled from \"@emotion/styled\";\r\nimport { colors, fonts, shadow } from \"../basic\";\r\nexport const AlbumWrap = styled.div`\r\n  overflow: hidden;\r\n  font-family: \"KOTRAHOPE\";\r\n  padding-top: ${props => props.paddingTop + \"px\"};\r\n\r\n  width: ${props => props.width + \"%\"};\r\n  margin: 0 auto;\r\n  height: ${props => props.height + \"%\"};\r\n  input {\r\n    padding: 8px;\r\n    border: 1px solid ${colors.grayLight};\r\n    border-radius: 10px;\r\n  }\r\n  input::placeholder {\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const AlbumTopBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3.75rem;\r\n  padding: 1.8rem;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  img {\r\n    position: absolute;\r\n    width: 5%;\r\n    right: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const InnerAlbum = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  .gallery {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 2.5rem;\r\n  }\r\n\r\n  .gallery-item {\r\n    width: ${props => props.width + \"rem\"};\r\n    height: ${props => props.height + \"rem\"};\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    margin-bottom: 7rem;\r\n  }\r\n\r\n  .gallery-item img {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 0.625rem;\r\n  }\r\n`;\r\n// export const HeaderLeft = styled.div`\r\n\r\nexport const AlbumList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); // 3개의 이미지를 가로로 나란히 표시\r\n  gap: 0.4rem;\r\n  margin: 0px auto;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  .image-grid {\r\n    gap: 1.6rem;\r\n    margin: 1.6rem;\r\n    text-align: center;\r\n  }\r\n  .image-grid > p {\r\n    font-size: 1.8rem;\r\n    margin: 1rem 0;\r\n    font-family: ${fonts.pretendard};\r\n    color: ${colors.black};\r\n  }\r\n  .image-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .image-item img {\r\n    border-radius: 5%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .loading {\r\n    height: 10rem;\r\n    margin: 3rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const SwiperWrap = styled.div`\r\n  body {\r\n    background-color: #eee;\r\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .swiper-pagination {\r\n    text-align: center;\r\n    padding: 0 2rem 0.5rem;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 40px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .swiper-slide {\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n  margin-top: 2rem;\r\n  background: #fff;\r\n\r\n  border-top: 0.2rem solid ${colors.greenDeep};\r\n  .rce-container-input {\r\n    padding: 0 2rem;\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nexport const AlbumTitle = styled.h3`\r\n  padding-left: 2.8rem;\r\n  padding-bottom: 3rem;\r\n  background: url(${process.env.PUBLIC_URL + \"/images/information/logo1.svg\"})\r\n    no-repeat left 0.25rem/2.3rem;\r\n  color: ${colors.greenDeep};\r\n`;\r\n\r\nexport const TitleWrap = styled.div`\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.grayBar};\r\n  padding: 3.5rem;\r\n  position: relative;\r\n  h3 {\r\n    display: inline-block;\r\n    font-size: 2.7rem;\r\n    font-weight: 400;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    right: 2rem;\r\n    font-family: Pretendard;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    color: ${colors.grayDeep};\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0.2rem solid ${colors.greenDeep};\r\n`;\r\n\r\nexport const DetailsText = styled.div`\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Pretendard;\r\n  font-size: 2rem;\r\n\r\n  p {\r\n    line-height: 1.8;\r\n    margin: 2rem 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  text-align: right;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 1.8rem;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.div`\r\n  background-color: #fafafa;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const FileListStyle = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const buttonStyle = {\r\n  position: \"relative\",\r\n  zIndex: 100,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { boxStyle, colors, ellipsis } from \"../basic\";\r\n\r\nexport const IndWrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const IndListWrap = styled.div`\r\n  min-height: 60vh;\r\n`;\r\n\r\nexport const IndList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2%;\r\n`;\r\n\r\nexport const IndListBox = styled.div`\r\n  width: 32%;\r\n  margin-bottom: 1rem;\r\n  ${boxStyle}\r\n  a {\r\n    display: block;\r\n    padding: 1.5rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const IndTop = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  color: #555;\r\n`;\r\nexport const IndCon = styled.div`\r\n  margin: 1.5rem 0;\r\n  min-height: 3rem;\r\n  p {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  span {\r\n    display: block;\r\n    color: ${colors.grayDeep};\r\n    ${ellipsis.line2}\r\n    word-break: break-all;\r\n  }\r\n`;\r\nexport const IndBot = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .ind-date {\r\n    color: ${colors.grayDeep};\r\n    padding-left: 2.5rem;\r\n    background: url(${process.env.PUBLIC_URL +\r\n      \"/images/common/notice/clock.svg\"})\r\n      no-repeat top left/ 1.8rem;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../basic\";\r\n\r\n// 경고창\r\nexport const WarningWrap = styled.div`\r\n  position: fixed;\r\n  left: -300%;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 40%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.4rem;\r\n    margin: 1rem 0;\r\n  }\r\n  p {\r\n    font-weight: 200;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\n// 모달창\r\nexport const ModalTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    color: ${colors.greenDeep};\r\n    margin-bottom: 1rem;\r\n  }\r\n  white-space: pre-line;\r\n`;\r\nexport const ModalBody = styled.div`\r\n  position: relative;\r\n`;\r\n"],"names":["path","concat","SERVER_URL","getIndParentList","async","page","year","ikid","successFn","failFn","errorFn","_ref","res","jwtAxios","get","status","toString","charAt","data","error","response","message","getIndTeacherList","iclass","_ref2","postIndNotice","product","_ref3","header","headers","post","deleteIndDetail","tno","successDelFn","failDelFn","errorDelFn","_ref6","delete","getIndDetail","_ref7","isOpen","handleOk","title","subTitle","children","_jsxs","Modal","open","onOk","closeIcon","width","footer","_jsx","PinkBtn","type","onClick","styles","display","justifyContent","gap","body","paddingTop","ModalTitle","ModalBody","handleCancel","onCancel","OrangeBtn","state","ClassTitle","styled","div","_templateObject","_taggedTemplateLiteral","colors","orangeDeep","grayDeep","black","_Fragment","className","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","loginSlice","isLogin","teacherUid","isName","teacherNm","isParentLogin","iparent","doLogin","loginParam","loginPostAsync","payload","doLogout","logout","doParentLogin","postParentLoginAsync","moveToPath","pathname","replace","moveToLogin","Navigate","to","refreshAccessToken","memberInfo","getCookie","accessToken","refreshToken","newTokens","refreshJWT","setCookie","console","IMG_URL","IndDetailWrap","white","greenDeep","IndDetailTop","_templateObject2","grayBar","IndClass","_templateObject3","IndDetailContent","_templateObject4","IndDetailFile","_templateObject5","boxStyle","grayLight","IndBtnWrap","_templateObject6","initData","inotice","noticeTitle","noticeContents","pics","comments","createdAt","kidNm","IndivNotiDetails","useParams","serchParams","setSearchParams","useSearchParams","setData","useState","setTitle","setSubTitle","setIsOpen","isNavigate","setIsNavigate","useEffect","delOpen","setDelOpen","IndWrap","ModalOneBtn","ModalTwoBtn","handleDelOk","PageTitle","MyClass","IndBot","split","Array","isArray","map","item","index","Link","target","GreenBtn","handleClickList","handleClickDelete","AlbumWrap","props","height","AlbumTopBar","SearchBar","AlbumList","fonts","pretendard","SwiperWrap","ContentWrap","_templateObject7","AlbumTitle","h3","_templateObject8","TitleWrap","_templateObject9","MainContent","_templateObject10","DetailsText","_templateObject11","Footer","_templateObject12","FileListStyle","_templateObject13","_templateObject14","IndListWrap","IndList","IndListBox","IndTop","IndCon","ellipsis","line2"],"sourceRoot":""}